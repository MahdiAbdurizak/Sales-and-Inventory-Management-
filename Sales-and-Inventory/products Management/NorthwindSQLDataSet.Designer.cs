//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5485
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace products_Management {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("NorthwindSQLDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class NorthwindSQLDataSet : global::System.Data.DataSet {
        
        private GET_ALL_CUSTOMERSDataTable tableGET_ALL_CUSTOMERS;
        
        private GET_ALL_PRODUCTSDataTable tableGET_ALL_PRODUCTS;
        
        private GET_ALL_SuppliersDataTable tableGET_ALL_Suppliers;
        
        private GET_ALL_Suppliers2DataTable tableGET_ALL_Suppliers2;
        
        private GET_LAST_ORDER_FOR_PRINTDataTable tableGET_LAST_ORDER_FOR_PRINT;
        
        private GET_LAST_ORDER_IDDataTable tableGET_LAST_ORDER_ID;
        
        private GET_LAST_PurchaseORDER_IDDataTable tableGET_LAST_PurchaseORDER_ID;
        
        private GET_LAST_Transaction_IDDataTable tableGET_LAST_Transaction_ID;
        
        private GET_SINGLE_PRODUCTDataTable tableGET_SINGLE_PRODUCT;
        
        private GetOrderDetailsDataTable tableGetOrderDetails;
        
        private GetOrderDetailsForPrintDataTable tableGetOrderDetailsForPrint;
        
        private GetOrderDetailsokDataTable tableGetOrderDetailsok;
        
        private Search_CustomerDataTable tableSearch_Customer;
        
        private SearchOrdersDataTable tableSearchOrders;
        
        private SearchOrders2DataTable tableSearchOrders2;
        
        private SearchOrders3DataTable tableSearchOrders3;
        
        private SearchProductDataTable tableSearchProduct;
        
        private SearchUsersDataTable tableSearchUsers;
        
        private SearchUsers2DataTable tableSearchUsers2;
        
        private SP_LOGIN2DataTable tableSP_LOGIN2;
        
        private VarifyQtyDataTable tableVarifyQty;
        
        private VerifyProductIDDataTable tableVerifyProductID;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public NorthwindSQLDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected NorthwindSQLDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["GET_ALL_CUSTOMERS"] != null)) {
                    base.Tables.Add(new GET_ALL_CUSTOMERSDataTable(ds.Tables["GET_ALL_CUSTOMERS"]));
                }
                if ((ds.Tables["GET_ALL_PRODUCTS"] != null)) {
                    base.Tables.Add(new GET_ALL_PRODUCTSDataTable(ds.Tables["GET_ALL_PRODUCTS"]));
                }
                if ((ds.Tables["GET_ALL_Suppliers"] != null)) {
                    base.Tables.Add(new GET_ALL_SuppliersDataTable(ds.Tables["GET_ALL_Suppliers"]));
                }
                if ((ds.Tables["GET_ALL_Suppliers2"] != null)) {
                    base.Tables.Add(new GET_ALL_Suppliers2DataTable(ds.Tables["GET_ALL_Suppliers2"]));
                }
                if ((ds.Tables["GET_LAST_ORDER_FOR_PRINT"] != null)) {
                    base.Tables.Add(new GET_LAST_ORDER_FOR_PRINTDataTable(ds.Tables["GET_LAST_ORDER_FOR_PRINT"]));
                }
                if ((ds.Tables["GET_LAST_ORDER_ID"] != null)) {
                    base.Tables.Add(new GET_LAST_ORDER_IDDataTable(ds.Tables["GET_LAST_ORDER_ID"]));
                }
                if ((ds.Tables["GET_LAST_PurchaseORDER_ID"] != null)) {
                    base.Tables.Add(new GET_LAST_PurchaseORDER_IDDataTable(ds.Tables["GET_LAST_PurchaseORDER_ID"]));
                }
                if ((ds.Tables["GET_LAST_Transaction_ID"] != null)) {
                    base.Tables.Add(new GET_LAST_Transaction_IDDataTable(ds.Tables["GET_LAST_Transaction_ID"]));
                }
                if ((ds.Tables["GET_SINGLE_PRODUCT"] != null)) {
                    base.Tables.Add(new GET_SINGLE_PRODUCTDataTable(ds.Tables["GET_SINGLE_PRODUCT"]));
                }
                if ((ds.Tables["GetOrderDetails"] != null)) {
                    base.Tables.Add(new GetOrderDetailsDataTable(ds.Tables["GetOrderDetails"]));
                }
                if ((ds.Tables["GetOrderDetailsForPrint"] != null)) {
                    base.Tables.Add(new GetOrderDetailsForPrintDataTable(ds.Tables["GetOrderDetailsForPrint"]));
                }
                if ((ds.Tables["GetOrderDetailsok"] != null)) {
                    base.Tables.Add(new GetOrderDetailsokDataTable(ds.Tables["GetOrderDetailsok"]));
                }
                if ((ds.Tables["Search_Customer"] != null)) {
                    base.Tables.Add(new Search_CustomerDataTable(ds.Tables["Search_Customer"]));
                }
                if ((ds.Tables["SearchOrders"] != null)) {
                    base.Tables.Add(new SearchOrdersDataTable(ds.Tables["SearchOrders"]));
                }
                if ((ds.Tables["SearchOrders2"] != null)) {
                    base.Tables.Add(new SearchOrders2DataTable(ds.Tables["SearchOrders2"]));
                }
                if ((ds.Tables["SearchOrders3"] != null)) {
                    base.Tables.Add(new SearchOrders3DataTable(ds.Tables["SearchOrders3"]));
                }
                if ((ds.Tables["SearchProduct"] != null)) {
                    base.Tables.Add(new SearchProductDataTable(ds.Tables["SearchProduct"]));
                }
                if ((ds.Tables["SearchUsers"] != null)) {
                    base.Tables.Add(new SearchUsersDataTable(ds.Tables["SearchUsers"]));
                }
                if ((ds.Tables["SearchUsers2"] != null)) {
                    base.Tables.Add(new SearchUsers2DataTable(ds.Tables["SearchUsers2"]));
                }
                if ((ds.Tables["SP_LOGIN2"] != null)) {
                    base.Tables.Add(new SP_LOGIN2DataTable(ds.Tables["SP_LOGIN2"]));
                }
                if ((ds.Tables["VarifyQty"] != null)) {
                    base.Tables.Add(new VarifyQtyDataTable(ds.Tables["VarifyQty"]));
                }
                if ((ds.Tables["VerifyProductID"] != null)) {
                    base.Tables.Add(new VerifyProductIDDataTable(ds.Tables["VerifyProductID"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GET_ALL_CUSTOMERSDataTable GET_ALL_CUSTOMERS {
            get {
                return this.tableGET_ALL_CUSTOMERS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GET_ALL_PRODUCTSDataTable GET_ALL_PRODUCTS {
            get {
                return this.tableGET_ALL_PRODUCTS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GET_ALL_SuppliersDataTable GET_ALL_Suppliers {
            get {
                return this.tableGET_ALL_Suppliers;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GET_ALL_Suppliers2DataTable GET_ALL_Suppliers2 {
            get {
                return this.tableGET_ALL_Suppliers2;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GET_LAST_ORDER_FOR_PRINTDataTable GET_LAST_ORDER_FOR_PRINT {
            get {
                return this.tableGET_LAST_ORDER_FOR_PRINT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GET_LAST_ORDER_IDDataTable GET_LAST_ORDER_ID {
            get {
                return this.tableGET_LAST_ORDER_ID;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GET_LAST_PurchaseORDER_IDDataTable GET_LAST_PurchaseORDER_ID {
            get {
                return this.tableGET_LAST_PurchaseORDER_ID;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GET_LAST_Transaction_IDDataTable GET_LAST_Transaction_ID {
            get {
                return this.tableGET_LAST_Transaction_ID;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GET_SINGLE_PRODUCTDataTable GET_SINGLE_PRODUCT {
            get {
                return this.tableGET_SINGLE_PRODUCT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GetOrderDetailsDataTable GetOrderDetails {
            get {
                return this.tableGetOrderDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GetOrderDetailsForPrintDataTable GetOrderDetailsForPrint {
            get {
                return this.tableGetOrderDetailsForPrint;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GetOrderDetailsokDataTable GetOrderDetailsok {
            get {
                return this.tableGetOrderDetailsok;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Search_CustomerDataTable Search_Customer {
            get {
                return this.tableSearch_Customer;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SearchOrdersDataTable SearchOrders {
            get {
                return this.tableSearchOrders;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SearchOrders2DataTable SearchOrders2 {
            get {
                return this.tableSearchOrders2;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SearchOrders3DataTable SearchOrders3 {
            get {
                return this.tableSearchOrders3;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SearchProductDataTable SearchProduct {
            get {
                return this.tableSearchProduct;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SearchUsersDataTable SearchUsers {
            get {
                return this.tableSearchUsers;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SearchUsers2DataTable SearchUsers2 {
            get {
                return this.tableSearchUsers2;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SP_LOGIN2DataTable SP_LOGIN2 {
            get {
                return this.tableSP_LOGIN2;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public VarifyQtyDataTable VarifyQty {
            get {
                return this.tableVarifyQty;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public VerifyProductIDDataTable VerifyProductID {
            get {
                return this.tableVerifyProductID;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            NorthwindSQLDataSet cln = ((NorthwindSQLDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["GET_ALL_CUSTOMERS"] != null)) {
                    base.Tables.Add(new GET_ALL_CUSTOMERSDataTable(ds.Tables["GET_ALL_CUSTOMERS"]));
                }
                if ((ds.Tables["GET_ALL_PRODUCTS"] != null)) {
                    base.Tables.Add(new GET_ALL_PRODUCTSDataTable(ds.Tables["GET_ALL_PRODUCTS"]));
                }
                if ((ds.Tables["GET_ALL_Suppliers"] != null)) {
                    base.Tables.Add(new GET_ALL_SuppliersDataTable(ds.Tables["GET_ALL_Suppliers"]));
                }
                if ((ds.Tables["GET_ALL_Suppliers2"] != null)) {
                    base.Tables.Add(new GET_ALL_Suppliers2DataTable(ds.Tables["GET_ALL_Suppliers2"]));
                }
                if ((ds.Tables["GET_LAST_ORDER_FOR_PRINT"] != null)) {
                    base.Tables.Add(new GET_LAST_ORDER_FOR_PRINTDataTable(ds.Tables["GET_LAST_ORDER_FOR_PRINT"]));
                }
                if ((ds.Tables["GET_LAST_ORDER_ID"] != null)) {
                    base.Tables.Add(new GET_LAST_ORDER_IDDataTable(ds.Tables["GET_LAST_ORDER_ID"]));
                }
                if ((ds.Tables["GET_LAST_PurchaseORDER_ID"] != null)) {
                    base.Tables.Add(new GET_LAST_PurchaseORDER_IDDataTable(ds.Tables["GET_LAST_PurchaseORDER_ID"]));
                }
                if ((ds.Tables["GET_LAST_Transaction_ID"] != null)) {
                    base.Tables.Add(new GET_LAST_Transaction_IDDataTable(ds.Tables["GET_LAST_Transaction_ID"]));
                }
                if ((ds.Tables["GET_SINGLE_PRODUCT"] != null)) {
                    base.Tables.Add(new GET_SINGLE_PRODUCTDataTable(ds.Tables["GET_SINGLE_PRODUCT"]));
                }
                if ((ds.Tables["GetOrderDetails"] != null)) {
                    base.Tables.Add(new GetOrderDetailsDataTable(ds.Tables["GetOrderDetails"]));
                }
                if ((ds.Tables["GetOrderDetailsForPrint"] != null)) {
                    base.Tables.Add(new GetOrderDetailsForPrintDataTable(ds.Tables["GetOrderDetailsForPrint"]));
                }
                if ((ds.Tables["GetOrderDetailsok"] != null)) {
                    base.Tables.Add(new GetOrderDetailsokDataTable(ds.Tables["GetOrderDetailsok"]));
                }
                if ((ds.Tables["Search_Customer"] != null)) {
                    base.Tables.Add(new Search_CustomerDataTable(ds.Tables["Search_Customer"]));
                }
                if ((ds.Tables["SearchOrders"] != null)) {
                    base.Tables.Add(new SearchOrdersDataTable(ds.Tables["SearchOrders"]));
                }
                if ((ds.Tables["SearchOrders2"] != null)) {
                    base.Tables.Add(new SearchOrders2DataTable(ds.Tables["SearchOrders2"]));
                }
                if ((ds.Tables["SearchOrders3"] != null)) {
                    base.Tables.Add(new SearchOrders3DataTable(ds.Tables["SearchOrders3"]));
                }
                if ((ds.Tables["SearchProduct"] != null)) {
                    base.Tables.Add(new SearchProductDataTable(ds.Tables["SearchProduct"]));
                }
                if ((ds.Tables["SearchUsers"] != null)) {
                    base.Tables.Add(new SearchUsersDataTable(ds.Tables["SearchUsers"]));
                }
                if ((ds.Tables["SearchUsers2"] != null)) {
                    base.Tables.Add(new SearchUsers2DataTable(ds.Tables["SearchUsers2"]));
                }
                if ((ds.Tables["SP_LOGIN2"] != null)) {
                    base.Tables.Add(new SP_LOGIN2DataTable(ds.Tables["SP_LOGIN2"]));
                }
                if ((ds.Tables["VarifyQty"] != null)) {
                    base.Tables.Add(new VarifyQtyDataTable(ds.Tables["VarifyQty"]));
                }
                if ((ds.Tables["VerifyProductID"] != null)) {
                    base.Tables.Add(new VerifyProductIDDataTable(ds.Tables["VerifyProductID"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableGET_ALL_CUSTOMERS = ((GET_ALL_CUSTOMERSDataTable)(base.Tables["GET_ALL_CUSTOMERS"]));
            if ((initTable == true)) {
                if ((this.tableGET_ALL_CUSTOMERS != null)) {
                    this.tableGET_ALL_CUSTOMERS.InitVars();
                }
            }
            this.tableGET_ALL_PRODUCTS = ((GET_ALL_PRODUCTSDataTable)(base.Tables["GET_ALL_PRODUCTS"]));
            if ((initTable == true)) {
                if ((this.tableGET_ALL_PRODUCTS != null)) {
                    this.tableGET_ALL_PRODUCTS.InitVars();
                }
            }
            this.tableGET_ALL_Suppliers = ((GET_ALL_SuppliersDataTable)(base.Tables["GET_ALL_Suppliers"]));
            if ((initTable == true)) {
                if ((this.tableGET_ALL_Suppliers != null)) {
                    this.tableGET_ALL_Suppliers.InitVars();
                }
            }
            this.tableGET_ALL_Suppliers2 = ((GET_ALL_Suppliers2DataTable)(base.Tables["GET_ALL_Suppliers2"]));
            if ((initTable == true)) {
                if ((this.tableGET_ALL_Suppliers2 != null)) {
                    this.tableGET_ALL_Suppliers2.InitVars();
                }
            }
            this.tableGET_LAST_ORDER_FOR_PRINT = ((GET_LAST_ORDER_FOR_PRINTDataTable)(base.Tables["GET_LAST_ORDER_FOR_PRINT"]));
            if ((initTable == true)) {
                if ((this.tableGET_LAST_ORDER_FOR_PRINT != null)) {
                    this.tableGET_LAST_ORDER_FOR_PRINT.InitVars();
                }
            }
            this.tableGET_LAST_ORDER_ID = ((GET_LAST_ORDER_IDDataTable)(base.Tables["GET_LAST_ORDER_ID"]));
            if ((initTable == true)) {
                if ((this.tableGET_LAST_ORDER_ID != null)) {
                    this.tableGET_LAST_ORDER_ID.InitVars();
                }
            }
            this.tableGET_LAST_PurchaseORDER_ID = ((GET_LAST_PurchaseORDER_IDDataTable)(base.Tables["GET_LAST_PurchaseORDER_ID"]));
            if ((initTable == true)) {
                if ((this.tableGET_LAST_PurchaseORDER_ID != null)) {
                    this.tableGET_LAST_PurchaseORDER_ID.InitVars();
                }
            }
            this.tableGET_LAST_Transaction_ID = ((GET_LAST_Transaction_IDDataTable)(base.Tables["GET_LAST_Transaction_ID"]));
            if ((initTable == true)) {
                if ((this.tableGET_LAST_Transaction_ID != null)) {
                    this.tableGET_LAST_Transaction_ID.InitVars();
                }
            }
            this.tableGET_SINGLE_PRODUCT = ((GET_SINGLE_PRODUCTDataTable)(base.Tables["GET_SINGLE_PRODUCT"]));
            if ((initTable == true)) {
                if ((this.tableGET_SINGLE_PRODUCT != null)) {
                    this.tableGET_SINGLE_PRODUCT.InitVars();
                }
            }
            this.tableGetOrderDetails = ((GetOrderDetailsDataTable)(base.Tables["GetOrderDetails"]));
            if ((initTable == true)) {
                if ((this.tableGetOrderDetails != null)) {
                    this.tableGetOrderDetails.InitVars();
                }
            }
            this.tableGetOrderDetailsForPrint = ((GetOrderDetailsForPrintDataTable)(base.Tables["GetOrderDetailsForPrint"]));
            if ((initTable == true)) {
                if ((this.tableGetOrderDetailsForPrint != null)) {
                    this.tableGetOrderDetailsForPrint.InitVars();
                }
            }
            this.tableGetOrderDetailsok = ((GetOrderDetailsokDataTable)(base.Tables["GetOrderDetailsok"]));
            if ((initTable == true)) {
                if ((this.tableGetOrderDetailsok != null)) {
                    this.tableGetOrderDetailsok.InitVars();
                }
            }
            this.tableSearch_Customer = ((Search_CustomerDataTable)(base.Tables["Search_Customer"]));
            if ((initTable == true)) {
                if ((this.tableSearch_Customer != null)) {
                    this.tableSearch_Customer.InitVars();
                }
            }
            this.tableSearchOrders = ((SearchOrdersDataTable)(base.Tables["SearchOrders"]));
            if ((initTable == true)) {
                if ((this.tableSearchOrders != null)) {
                    this.tableSearchOrders.InitVars();
                }
            }
            this.tableSearchOrders2 = ((SearchOrders2DataTable)(base.Tables["SearchOrders2"]));
            if ((initTable == true)) {
                if ((this.tableSearchOrders2 != null)) {
                    this.tableSearchOrders2.InitVars();
                }
            }
            this.tableSearchOrders3 = ((SearchOrders3DataTable)(base.Tables["SearchOrders3"]));
            if ((initTable == true)) {
                if ((this.tableSearchOrders3 != null)) {
                    this.tableSearchOrders3.InitVars();
                }
            }
            this.tableSearchProduct = ((SearchProductDataTable)(base.Tables["SearchProduct"]));
            if ((initTable == true)) {
                if ((this.tableSearchProduct != null)) {
                    this.tableSearchProduct.InitVars();
                }
            }
            this.tableSearchUsers = ((SearchUsersDataTable)(base.Tables["SearchUsers"]));
            if ((initTable == true)) {
                if ((this.tableSearchUsers != null)) {
                    this.tableSearchUsers.InitVars();
                }
            }
            this.tableSearchUsers2 = ((SearchUsers2DataTable)(base.Tables["SearchUsers2"]));
            if ((initTable == true)) {
                if ((this.tableSearchUsers2 != null)) {
                    this.tableSearchUsers2.InitVars();
                }
            }
            this.tableSP_LOGIN2 = ((SP_LOGIN2DataTable)(base.Tables["SP_LOGIN2"]));
            if ((initTable == true)) {
                if ((this.tableSP_LOGIN2 != null)) {
                    this.tableSP_LOGIN2.InitVars();
                }
            }
            this.tableVarifyQty = ((VarifyQtyDataTable)(base.Tables["VarifyQty"]));
            if ((initTable == true)) {
                if ((this.tableVarifyQty != null)) {
                    this.tableVarifyQty.InitVars();
                }
            }
            this.tableVerifyProductID = ((VerifyProductIDDataTable)(base.Tables["VerifyProductID"]));
            if ((initTable == true)) {
                if ((this.tableVerifyProductID != null)) {
                    this.tableVerifyProductID.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "NorthwindSQLDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/NorthwindSQLDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableGET_ALL_CUSTOMERS = new GET_ALL_CUSTOMERSDataTable();
            base.Tables.Add(this.tableGET_ALL_CUSTOMERS);
            this.tableGET_ALL_PRODUCTS = new GET_ALL_PRODUCTSDataTable();
            base.Tables.Add(this.tableGET_ALL_PRODUCTS);
            this.tableGET_ALL_Suppliers = new GET_ALL_SuppliersDataTable();
            base.Tables.Add(this.tableGET_ALL_Suppliers);
            this.tableGET_ALL_Suppliers2 = new GET_ALL_Suppliers2DataTable();
            base.Tables.Add(this.tableGET_ALL_Suppliers2);
            this.tableGET_LAST_ORDER_FOR_PRINT = new GET_LAST_ORDER_FOR_PRINTDataTable();
            base.Tables.Add(this.tableGET_LAST_ORDER_FOR_PRINT);
            this.tableGET_LAST_ORDER_ID = new GET_LAST_ORDER_IDDataTable();
            base.Tables.Add(this.tableGET_LAST_ORDER_ID);
            this.tableGET_LAST_PurchaseORDER_ID = new GET_LAST_PurchaseORDER_IDDataTable();
            base.Tables.Add(this.tableGET_LAST_PurchaseORDER_ID);
            this.tableGET_LAST_Transaction_ID = new GET_LAST_Transaction_IDDataTable();
            base.Tables.Add(this.tableGET_LAST_Transaction_ID);
            this.tableGET_SINGLE_PRODUCT = new GET_SINGLE_PRODUCTDataTable();
            base.Tables.Add(this.tableGET_SINGLE_PRODUCT);
            this.tableGetOrderDetails = new GetOrderDetailsDataTable();
            base.Tables.Add(this.tableGetOrderDetails);
            this.tableGetOrderDetailsForPrint = new GetOrderDetailsForPrintDataTable();
            base.Tables.Add(this.tableGetOrderDetailsForPrint);
            this.tableGetOrderDetailsok = new GetOrderDetailsokDataTable();
            base.Tables.Add(this.tableGetOrderDetailsok);
            this.tableSearch_Customer = new Search_CustomerDataTable();
            base.Tables.Add(this.tableSearch_Customer);
            this.tableSearchOrders = new SearchOrdersDataTable();
            base.Tables.Add(this.tableSearchOrders);
            this.tableSearchOrders2 = new SearchOrders2DataTable();
            base.Tables.Add(this.tableSearchOrders2);
            this.tableSearchOrders3 = new SearchOrders3DataTable();
            base.Tables.Add(this.tableSearchOrders3);
            this.tableSearchProduct = new SearchProductDataTable();
            base.Tables.Add(this.tableSearchProduct);
            this.tableSearchUsers = new SearchUsersDataTable();
            base.Tables.Add(this.tableSearchUsers);
            this.tableSearchUsers2 = new SearchUsers2DataTable();
            base.Tables.Add(this.tableSearchUsers2);
            this.tableSP_LOGIN2 = new SP_LOGIN2DataTable();
            base.Tables.Add(this.tableSP_LOGIN2);
            this.tableVarifyQty = new VarifyQtyDataTable();
            base.Tables.Add(this.tableVarifyQty);
            this.tableVerifyProductID = new VerifyProductIDDataTable();
            base.Tables.Add(this.tableVerifyProductID);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGET_ALL_CUSTOMERS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGET_ALL_PRODUCTS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGET_ALL_Suppliers() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGET_ALL_Suppliers2() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGET_LAST_ORDER_FOR_PRINT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGET_LAST_ORDER_ID() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGET_LAST_PurchaseORDER_ID() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGET_LAST_Transaction_ID() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGET_SINGLE_PRODUCT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGetOrderDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGetOrderDetailsForPrint() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGetOrderDetailsok() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSearch_Customer() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSearchOrders() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSearchOrders2() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSearchOrders3() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSearchProduct() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSearchUsers() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSearchUsers2() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSP_LOGIN2() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeVarifyQty() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeVerifyProductID() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            NorthwindSQLDataSet ds = new NorthwindSQLDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void GET_ALL_CUSTOMERSRowChangeEventHandler(object sender, GET_ALL_CUSTOMERSRowChangeEvent e);
        
        public delegate void GET_ALL_PRODUCTSRowChangeEventHandler(object sender, GET_ALL_PRODUCTSRowChangeEvent e);
        
        public delegate void GET_ALL_SuppliersRowChangeEventHandler(object sender, GET_ALL_SuppliersRowChangeEvent e);
        
        public delegate void GET_ALL_Suppliers2RowChangeEventHandler(object sender, GET_ALL_Suppliers2RowChangeEvent e);
        
        public delegate void GET_LAST_ORDER_FOR_PRINTRowChangeEventHandler(object sender, GET_LAST_ORDER_FOR_PRINTRowChangeEvent e);
        
        public delegate void GET_LAST_ORDER_IDRowChangeEventHandler(object sender, GET_LAST_ORDER_IDRowChangeEvent e);
        
        public delegate void GET_LAST_PurchaseORDER_IDRowChangeEventHandler(object sender, GET_LAST_PurchaseORDER_IDRowChangeEvent e);
        
        public delegate void GET_LAST_Transaction_IDRowChangeEventHandler(object sender, GET_LAST_Transaction_IDRowChangeEvent e);
        
        public delegate void GET_SINGLE_PRODUCTRowChangeEventHandler(object sender, GET_SINGLE_PRODUCTRowChangeEvent e);
        
        public delegate void GetOrderDetailsRowChangeEventHandler(object sender, GetOrderDetailsRowChangeEvent e);
        
        public delegate void GetOrderDetailsForPrintRowChangeEventHandler(object sender, GetOrderDetailsForPrintRowChangeEvent e);
        
        public delegate void GetOrderDetailsokRowChangeEventHandler(object sender, GetOrderDetailsokRowChangeEvent e);
        
        public delegate void Search_CustomerRowChangeEventHandler(object sender, Search_CustomerRowChangeEvent e);
        
        public delegate void SearchOrdersRowChangeEventHandler(object sender, SearchOrdersRowChangeEvent e);
        
        public delegate void SearchOrders2RowChangeEventHandler(object sender, SearchOrders2RowChangeEvent e);
        
        public delegate void SearchOrders3RowChangeEventHandler(object sender, SearchOrders3RowChangeEvent e);
        
        public delegate void SearchProductRowChangeEventHandler(object sender, SearchProductRowChangeEvent e);
        
        public delegate void SearchUsersRowChangeEventHandler(object sender, SearchUsersRowChangeEvent e);
        
        public delegate void SearchUsers2RowChangeEventHandler(object sender, SearchUsers2RowChangeEvent e);
        
        public delegate void SP_LOGIN2RowChangeEventHandler(object sender, SP_LOGIN2RowChangeEvent e);
        
        public delegate void VarifyQtyRowChangeEventHandler(object sender, VarifyQtyRowChangeEvent e);
        
        public delegate void VerifyProductIDRowChangeEventHandler(object sender, VerifyProductIDRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GET_ALL_CUSTOMERSDataTable : global::System.Data.TypedTableBase<GET_ALL_CUSTOMERSRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnSHIRKADA;
            
            private global::System.Data.DataColumn columnMAGACA_KUWAAD;
            
            private global::System.Data.DataColumn columnMAGACA_LABAAD;
            
            private global::System.Data.DataColumn columnEMAILKA;
            
            private global::System.Data.DataColumn columnTELKA;
            
            private global::System.Data.DataColumn columnAdrreska;
            
            private global::System.Data.DataColumn columnNOTES;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_ALL_CUSTOMERSDataTable() {
                this.TableName = "GET_ALL_CUSTOMERS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GET_ALL_CUSTOMERSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GET_ALL_CUSTOMERSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIRKADAColumn {
                get {
                    return this.columnSHIRKADA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAGACA_KUWAADColumn {
                get {
                    return this.columnMAGACA_KUWAAD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAGACA_LABAADColumn {
                get {
                    return this.columnMAGACA_LABAAD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMAILKAColumn {
                get {
                    return this.columnEMAILKA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TELKAColumn {
                get {
                    return this.columnTELKA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AdrreskaColumn {
                get {
                    return this.columnAdrreska;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NOTESColumn {
                get {
                    return this.columnNOTES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_ALL_CUSTOMERSRow this[int index] {
                get {
                    return ((GET_ALL_CUSTOMERSRow)(this.Rows[index]));
                }
            }
            
            public event GET_ALL_CUSTOMERSRowChangeEventHandler GET_ALL_CUSTOMERSRowChanging;
            
            public event GET_ALL_CUSTOMERSRowChangeEventHandler GET_ALL_CUSTOMERSRowChanged;
            
            public event GET_ALL_CUSTOMERSRowChangeEventHandler GET_ALL_CUSTOMERSRowDeleting;
            
            public event GET_ALL_CUSTOMERSRowChangeEventHandler GET_ALL_CUSTOMERSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGET_ALL_CUSTOMERSRow(GET_ALL_CUSTOMERSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_ALL_CUSTOMERSRow AddGET_ALL_CUSTOMERSRow(string SHIRKADA, string MAGACA_KUWAAD, string MAGACA_LABAAD, string EMAILKA, string TELKA, string Adrreska, string NOTES) {
                GET_ALL_CUSTOMERSRow rowGET_ALL_CUSTOMERSRow = ((GET_ALL_CUSTOMERSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        SHIRKADA,
                        MAGACA_KUWAAD,
                        MAGACA_LABAAD,
                        EMAILKA,
                        TELKA,
                        Adrreska,
                        NOTES};
                rowGET_ALL_CUSTOMERSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGET_ALL_CUSTOMERSRow);
                return rowGET_ALL_CUSTOMERSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_ALL_CUSTOMERSRow FindByID(int ID) {
                return ((GET_ALL_CUSTOMERSRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GET_ALL_CUSTOMERSDataTable cln = ((GET_ALL_CUSTOMERSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GET_ALL_CUSTOMERSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnSHIRKADA = base.Columns["SHIRKADA"];
                this.columnMAGACA_KUWAAD = base.Columns["MAGACA KUWAAD"];
                this.columnMAGACA_LABAAD = base.Columns["MAGACA LABAAD"];
                this.columnEMAILKA = base.Columns["EMAILKA"];
                this.columnTELKA = base.Columns["TELKA"];
                this.columnAdrreska = base.Columns["Adrreska"];
                this.columnNOTES = base.Columns["NOTES"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnSHIRKADA = new global::System.Data.DataColumn("SHIRKADA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIRKADA);
                this.columnMAGACA_KUWAAD = new global::System.Data.DataColumn("MAGACA KUWAAD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAGACA_KUWAAD);
                this.columnMAGACA_LABAAD = new global::System.Data.DataColumn("MAGACA LABAAD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAGACA_LABAAD);
                this.columnEMAILKA = new global::System.Data.DataColumn("EMAILKA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMAILKA);
                this.columnTELKA = new global::System.Data.DataColumn("TELKA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTELKA);
                this.columnAdrreska = new global::System.Data.DataColumn("Adrreska", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdrreska);
                this.columnNOTES = new global::System.Data.DataColumn("NOTES", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOTES);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnSHIRKADA.MaxLength = 50;
                this.columnMAGACA_KUWAAD.MaxLength = 50;
                this.columnMAGACA_LABAAD.MaxLength = 50;
                this.columnEMAILKA.MaxLength = 50;
                this.columnTELKA.MaxLength = 25;
                this.columnAdrreska.MaxLength = 1073741823;
                this.columnNOTES.MaxLength = 1073741823;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_ALL_CUSTOMERSRow NewGET_ALL_CUSTOMERSRow() {
                return ((GET_ALL_CUSTOMERSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GET_ALL_CUSTOMERSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GET_ALL_CUSTOMERSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GET_ALL_CUSTOMERSRowChanged != null)) {
                    this.GET_ALL_CUSTOMERSRowChanged(this, new GET_ALL_CUSTOMERSRowChangeEvent(((GET_ALL_CUSTOMERSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GET_ALL_CUSTOMERSRowChanging != null)) {
                    this.GET_ALL_CUSTOMERSRowChanging(this, new GET_ALL_CUSTOMERSRowChangeEvent(((GET_ALL_CUSTOMERSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GET_ALL_CUSTOMERSRowDeleted != null)) {
                    this.GET_ALL_CUSTOMERSRowDeleted(this, new GET_ALL_CUSTOMERSRowChangeEvent(((GET_ALL_CUSTOMERSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GET_ALL_CUSTOMERSRowDeleting != null)) {
                    this.GET_ALL_CUSTOMERSRowDeleting(this, new GET_ALL_CUSTOMERSRowChangeEvent(((GET_ALL_CUSTOMERSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGET_ALL_CUSTOMERSRow(GET_ALL_CUSTOMERSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NorthwindSQLDataSet ds = new NorthwindSQLDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GET_ALL_CUSTOMERSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GET_ALL_PRODUCTSDataTable : global::System.Data.TypedTableBase<GET_ALL_PRODUCTSRow> {
            
            private global::System.Data.DataColumn columnRAQMKA;
            
            private global::System.Data.DataColumn columnCALAAMAD;
            
            private global::System.Data.DataColumn columnMAGACA;
            
            private global::System.Data.DataColumn columnFAAHFAAHIN;
            
            private global::System.Data.DataColumn columnQIIMHA;
            
            private global::System.Data.DataColumn columnLAGADAAYO;
            
            private global::System.Data.DataColumn columnXADKA_DALABKA;
            
            private global::System.Data.DataColumn columnXADKA_BUUXINTA;
            
            private global::System.Data.DataColumn columnCADADKA_XABADA;
            
            private global::System.Data.DataColumn columnQIIMA_DHIMIS;
            
            private global::System.Data.DataColumn columnCADADKA_UGU_YAR_DALABKA;
            
            private global::System.Data.DataColumn columnNOOCA;
            
            private global::System.Data.DataColumn columnGADAHA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_ALL_PRODUCTSDataTable() {
                this.TableName = "GET_ALL_PRODUCTS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GET_ALL_PRODUCTSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GET_ALL_PRODUCTSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RAQMKAColumn {
                get {
                    return this.columnRAQMKA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CALAAMADColumn {
                get {
                    return this.columnCALAAMAD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAGACAColumn {
                get {
                    return this.columnMAGACA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FAAHFAAHINColumn {
                get {
                    return this.columnFAAHFAAHIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QIIMHAColumn {
                get {
                    return this.columnQIIMHA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LAGADAAYOColumn {
                get {
                    return this.columnLAGADAAYO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn XADKA_DALABKAColumn {
                get {
                    return this.columnXADKA_DALABKA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn XADKA_BUUXINTAColumn {
                get {
                    return this.columnXADKA_BUUXINTA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CADADKA_XABADAColumn {
                get {
                    return this.columnCADADKA_XABADA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QIIMA_DHIMISColumn {
                get {
                    return this.columnQIIMA_DHIMIS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CADADKA_UGU_YAR_DALABKAColumn {
                get {
                    return this.columnCADADKA_UGU_YAR_DALABKA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NOOCAColumn {
                get {
                    return this.columnNOOCA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GADAHAColumn {
                get {
                    return this.columnGADAHA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_ALL_PRODUCTSRow this[int index] {
                get {
                    return ((GET_ALL_PRODUCTSRow)(this.Rows[index]));
                }
            }
            
            public event GET_ALL_PRODUCTSRowChangeEventHandler GET_ALL_PRODUCTSRowChanging;
            
            public event GET_ALL_PRODUCTSRowChangeEventHandler GET_ALL_PRODUCTSRowChanged;
            
            public event GET_ALL_PRODUCTSRowChangeEventHandler GET_ALL_PRODUCTSRowDeleting;
            
            public event GET_ALL_PRODUCTSRowChangeEventHandler GET_ALL_PRODUCTSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGET_ALL_PRODUCTSRow(GET_ALL_PRODUCTSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_ALL_PRODUCTSRow AddGET_ALL_PRODUCTSRow(string CALAAMAD, string MAGACA, string FAAHFAAHIN, decimal QIIMHA, decimal LAGADAAYO, short XADKA_DALABKA, int XADKA_BUUXINTA, string CADADKA_XABADA, bool QIIMA_DHIMIS, short CADADKA_UGU_YAR_DALABKA, string NOOCA, int GADAHA) {
                GET_ALL_PRODUCTSRow rowGET_ALL_PRODUCTSRow = ((GET_ALL_PRODUCTSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CALAAMAD,
                        MAGACA,
                        FAAHFAAHIN,
                        QIIMHA,
                        LAGADAAYO,
                        XADKA_DALABKA,
                        XADKA_BUUXINTA,
                        CADADKA_XABADA,
                        QIIMA_DHIMIS,
                        CADADKA_UGU_YAR_DALABKA,
                        NOOCA,
                        GADAHA};
                rowGET_ALL_PRODUCTSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGET_ALL_PRODUCTSRow);
                return rowGET_ALL_PRODUCTSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_ALL_PRODUCTSRow FindByRAQMKA(int RAQMKA) {
                return ((GET_ALL_PRODUCTSRow)(this.Rows.Find(new object[] {
                            RAQMKA})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GET_ALL_PRODUCTSDataTable cln = ((GET_ALL_PRODUCTSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GET_ALL_PRODUCTSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRAQMKA = base.Columns["RAQMKA"];
                this.columnCALAAMAD = base.Columns["CALAAMAD"];
                this.columnMAGACA = base.Columns["MAGACA"];
                this.columnFAAHFAAHIN = base.Columns["FAAHFAAHIN"];
                this.columnQIIMHA = base.Columns["QIIMHA"];
                this.columnLAGADAAYO = base.Columns["LAGADAAYO"];
                this.columnXADKA_DALABKA = base.Columns["XADKA DALABKA"];
                this.columnXADKA_BUUXINTA = base.Columns["XADKA BUUXINTA"];
                this.columnCADADKA_XABADA = base.Columns["CADADKA XABADA"];
                this.columnQIIMA_DHIMIS = base.Columns["QIIMA DHIMIS"];
                this.columnCADADKA_UGU_YAR_DALABKA = base.Columns["CADADKA UGU YAR DALABKA"];
                this.columnNOOCA = base.Columns["NOOCA"];
                this.columnGADAHA = base.Columns["GADAHA"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRAQMKA = new global::System.Data.DataColumn("RAQMKA", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRAQMKA);
                this.columnCALAAMAD = new global::System.Data.DataColumn("CALAAMAD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCALAAMAD);
                this.columnMAGACA = new global::System.Data.DataColumn("MAGACA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAGACA);
                this.columnFAAHFAAHIN = new global::System.Data.DataColumn("FAAHFAAHIN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFAAHFAAHIN);
                this.columnQIIMHA = new global::System.Data.DataColumn("QIIMHA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQIIMHA);
                this.columnLAGADAAYO = new global::System.Data.DataColumn("LAGADAAYO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAGADAAYO);
                this.columnXADKA_DALABKA = new global::System.Data.DataColumn("XADKA DALABKA", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXADKA_DALABKA);
                this.columnXADKA_BUUXINTA = new global::System.Data.DataColumn("XADKA BUUXINTA", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXADKA_BUUXINTA);
                this.columnCADADKA_XABADA = new global::System.Data.DataColumn("CADADKA XABADA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCADADKA_XABADA);
                this.columnQIIMA_DHIMIS = new global::System.Data.DataColumn("QIIMA DHIMIS", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQIIMA_DHIMIS);
                this.columnCADADKA_UGU_YAR_DALABKA = new global::System.Data.DataColumn("CADADKA UGU YAR DALABKA", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCADADKA_UGU_YAR_DALABKA);
                this.columnNOOCA = new global::System.Data.DataColumn("NOOCA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOOCA);
                this.columnGADAHA = new global::System.Data.DataColumn("GADAHA", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGADAHA);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRAQMKA}, true));
                this.columnRAQMKA.AutoIncrement = true;
                this.columnRAQMKA.AllowDBNull = false;
                this.columnRAQMKA.ReadOnly = true;
                this.columnRAQMKA.Unique = true;
                this.columnCALAAMAD.MaxLength = 25;
                this.columnMAGACA.MaxLength = 50;
                this.columnFAAHFAAHIN.MaxLength = 1073741823;
                this.columnCADADKA_XABADA.MaxLength = 50;
                this.columnNOOCA.MaxLength = 50;
                this.columnGADAHA.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_ALL_PRODUCTSRow NewGET_ALL_PRODUCTSRow() {
                return ((GET_ALL_PRODUCTSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GET_ALL_PRODUCTSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GET_ALL_PRODUCTSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GET_ALL_PRODUCTSRowChanged != null)) {
                    this.GET_ALL_PRODUCTSRowChanged(this, new GET_ALL_PRODUCTSRowChangeEvent(((GET_ALL_PRODUCTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GET_ALL_PRODUCTSRowChanging != null)) {
                    this.GET_ALL_PRODUCTSRowChanging(this, new GET_ALL_PRODUCTSRowChangeEvent(((GET_ALL_PRODUCTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GET_ALL_PRODUCTSRowDeleted != null)) {
                    this.GET_ALL_PRODUCTSRowDeleted(this, new GET_ALL_PRODUCTSRowChangeEvent(((GET_ALL_PRODUCTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GET_ALL_PRODUCTSRowDeleting != null)) {
                    this.GET_ALL_PRODUCTSRowDeleting(this, new GET_ALL_PRODUCTSRowChangeEvent(((GET_ALL_PRODUCTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGET_ALL_PRODUCTSRow(GET_ALL_PRODUCTSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NorthwindSQLDataSet ds = new NorthwindSQLDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GET_ALL_PRODUCTSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GET_ALL_SuppliersDataTable : global::System.Data.TypedTableBase<GET_ALL_SuppliersRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnCompany;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_ALL_SuppliersDataTable() {
                this.TableName = "GET_ALL_Suppliers";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GET_ALL_SuppliersDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GET_ALL_SuppliersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyColumn {
                get {
                    return this.columnCompany;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_ALL_SuppliersRow this[int index] {
                get {
                    return ((GET_ALL_SuppliersRow)(this.Rows[index]));
                }
            }
            
            public event GET_ALL_SuppliersRowChangeEventHandler GET_ALL_SuppliersRowChanging;
            
            public event GET_ALL_SuppliersRowChangeEventHandler GET_ALL_SuppliersRowChanged;
            
            public event GET_ALL_SuppliersRowChangeEventHandler GET_ALL_SuppliersRowDeleting;
            
            public event GET_ALL_SuppliersRowChangeEventHandler GET_ALL_SuppliersRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGET_ALL_SuppliersRow(GET_ALL_SuppliersRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_ALL_SuppliersRow AddGET_ALL_SuppliersRow(string Company) {
                GET_ALL_SuppliersRow rowGET_ALL_SuppliersRow = ((GET_ALL_SuppliersRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Company};
                rowGET_ALL_SuppliersRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGET_ALL_SuppliersRow);
                return rowGET_ALL_SuppliersRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_ALL_SuppliersRow FindByID(int ID) {
                return ((GET_ALL_SuppliersRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GET_ALL_SuppliersDataTable cln = ((GET_ALL_SuppliersDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GET_ALL_SuppliersDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnCompany = base.Columns["Company"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnCompany = new global::System.Data.DataColumn("Company", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompany);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnCompany.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_ALL_SuppliersRow NewGET_ALL_SuppliersRow() {
                return ((GET_ALL_SuppliersRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GET_ALL_SuppliersRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GET_ALL_SuppliersRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GET_ALL_SuppliersRowChanged != null)) {
                    this.GET_ALL_SuppliersRowChanged(this, new GET_ALL_SuppliersRowChangeEvent(((GET_ALL_SuppliersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GET_ALL_SuppliersRowChanging != null)) {
                    this.GET_ALL_SuppliersRowChanging(this, new GET_ALL_SuppliersRowChangeEvent(((GET_ALL_SuppliersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GET_ALL_SuppliersRowDeleted != null)) {
                    this.GET_ALL_SuppliersRowDeleted(this, new GET_ALL_SuppliersRowChangeEvent(((GET_ALL_SuppliersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GET_ALL_SuppliersRowDeleting != null)) {
                    this.GET_ALL_SuppliersRowDeleting(this, new GET_ALL_SuppliersRowChangeEvent(((GET_ALL_SuppliersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGET_ALL_SuppliersRow(GET_ALL_SuppliersRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NorthwindSQLDataSet ds = new NorthwindSQLDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GET_ALL_SuppliersDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GET_ALL_Suppliers2DataTable : global::System.Data.TypedTableBase<GET_ALL_Suppliers2Row> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnCompany;
            
            private global::System.Data.DataColumn columnFirst_Name;
            
            private global::System.Data.DataColumn columnLast_Name;
            
            private global::System.Data.DataColumn columnMobile_Phone;
            
            private global::System.Data.DataColumn _columnE_mail_Address;
            
            private global::System.Data.DataColumn columnNotes;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_ALL_Suppliers2DataTable() {
                this.TableName = "GET_ALL_Suppliers2";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GET_ALL_Suppliers2DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GET_ALL_Suppliers2DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyColumn {
                get {
                    return this.columnCompany;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn First_NameColumn {
                get {
                    return this.columnFirst_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Last_NameColumn {
                get {
                    return this.columnLast_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Mobile_PhoneColumn {
                get {
                    return this.columnMobile_Phone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _E_mail_AddressColumn {
                get {
                    return this._columnE_mail_Address;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NotesColumn {
                get {
                    return this.columnNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_ALL_Suppliers2Row this[int index] {
                get {
                    return ((GET_ALL_Suppliers2Row)(this.Rows[index]));
                }
            }
            
            public event GET_ALL_Suppliers2RowChangeEventHandler GET_ALL_Suppliers2RowChanging;
            
            public event GET_ALL_Suppliers2RowChangeEventHandler GET_ALL_Suppliers2RowChanged;
            
            public event GET_ALL_Suppliers2RowChangeEventHandler GET_ALL_Suppliers2RowDeleting;
            
            public event GET_ALL_Suppliers2RowChangeEventHandler GET_ALL_Suppliers2RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGET_ALL_Suppliers2Row(GET_ALL_Suppliers2Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_ALL_Suppliers2Row AddGET_ALL_Suppliers2Row(string Company, string First_Name, string Last_Name, string Mobile_Phone, string _E_mail_Address, string Notes) {
                GET_ALL_Suppliers2Row rowGET_ALL_Suppliers2Row = ((GET_ALL_Suppliers2Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Company,
                        First_Name,
                        Last_Name,
                        Mobile_Phone,
                        _E_mail_Address,
                        Notes};
                rowGET_ALL_Suppliers2Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowGET_ALL_Suppliers2Row);
                return rowGET_ALL_Suppliers2Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_ALL_Suppliers2Row FindByID(int ID) {
                return ((GET_ALL_Suppliers2Row)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GET_ALL_Suppliers2DataTable cln = ((GET_ALL_Suppliers2DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GET_ALL_Suppliers2DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnCompany = base.Columns["Company"];
                this.columnFirst_Name = base.Columns["First Name"];
                this.columnLast_Name = base.Columns["Last Name"];
                this.columnMobile_Phone = base.Columns["Mobile Phone"];
                this._columnE_mail_Address = base.Columns["E-mail Address"];
                this.columnNotes = base.Columns["Notes"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnCompany = new global::System.Data.DataColumn("Company", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompany);
                this.columnFirst_Name = new global::System.Data.DataColumn("First Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirst_Name);
                this.columnLast_Name = new global::System.Data.DataColumn("Last Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLast_Name);
                this.columnMobile_Phone = new global::System.Data.DataColumn("Mobile Phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobile_Phone);
                this._columnE_mail_Address = new global::System.Data.DataColumn("E-mail Address", typeof(string), null, global::System.Data.MappingType.Element);
                this._columnE_mail_Address.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnE_mail_Address");
                this._columnE_mail_Address.ExtendedProperties.Add("Generator_UserColumnName", "E-mail Address");
                base.Columns.Add(this._columnE_mail_Address);
                this.columnNotes = new global::System.Data.DataColumn("Notes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotes);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnCompany.MaxLength = 50;
                this.columnFirst_Name.MaxLength = 50;
                this.columnLast_Name.MaxLength = 50;
                this.columnMobile_Phone.MaxLength = 25;
                this._columnE_mail_Address.MaxLength = 50;
                this.columnNotes.MaxLength = 1073741823;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_ALL_Suppliers2Row NewGET_ALL_Suppliers2Row() {
                return ((GET_ALL_Suppliers2Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GET_ALL_Suppliers2Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GET_ALL_Suppliers2Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GET_ALL_Suppliers2RowChanged != null)) {
                    this.GET_ALL_Suppliers2RowChanged(this, new GET_ALL_Suppliers2RowChangeEvent(((GET_ALL_Suppliers2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GET_ALL_Suppliers2RowChanging != null)) {
                    this.GET_ALL_Suppliers2RowChanging(this, new GET_ALL_Suppliers2RowChangeEvent(((GET_ALL_Suppliers2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GET_ALL_Suppliers2RowDeleted != null)) {
                    this.GET_ALL_Suppliers2RowDeleted(this, new GET_ALL_Suppliers2RowChangeEvent(((GET_ALL_Suppliers2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GET_ALL_Suppliers2RowDeleting != null)) {
                    this.GET_ALL_Suppliers2RowDeleting(this, new GET_ALL_Suppliers2RowChangeEvent(((GET_ALL_Suppliers2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGET_ALL_Suppliers2Row(GET_ALL_Suppliers2Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NorthwindSQLDataSet ds = new NorthwindSQLDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GET_ALL_Suppliers2DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GET_LAST_ORDER_FOR_PRINTDataTable : global::System.Data.TypedTableBase<GET_LAST_ORDER_FOR_PRINTRow> {
            
            private global::System.Data.DataColumn columnColumn1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_LAST_ORDER_FOR_PRINTDataTable() {
                this.TableName = "GET_LAST_ORDER_FOR_PRINT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GET_LAST_ORDER_FOR_PRINTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GET_LAST_ORDER_FOR_PRINTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Column1Column {
                get {
                    return this.columnColumn1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_LAST_ORDER_FOR_PRINTRow this[int index] {
                get {
                    return ((GET_LAST_ORDER_FOR_PRINTRow)(this.Rows[index]));
                }
            }
            
            public event GET_LAST_ORDER_FOR_PRINTRowChangeEventHandler GET_LAST_ORDER_FOR_PRINTRowChanging;
            
            public event GET_LAST_ORDER_FOR_PRINTRowChangeEventHandler GET_LAST_ORDER_FOR_PRINTRowChanged;
            
            public event GET_LAST_ORDER_FOR_PRINTRowChangeEventHandler GET_LAST_ORDER_FOR_PRINTRowDeleting;
            
            public event GET_LAST_ORDER_FOR_PRINTRowChangeEventHandler GET_LAST_ORDER_FOR_PRINTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGET_LAST_ORDER_FOR_PRINTRow(GET_LAST_ORDER_FOR_PRINTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_LAST_ORDER_FOR_PRINTRow AddGET_LAST_ORDER_FOR_PRINTRow(int Column1) {
                GET_LAST_ORDER_FOR_PRINTRow rowGET_LAST_ORDER_FOR_PRINTRow = ((GET_LAST_ORDER_FOR_PRINTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Column1};
                rowGET_LAST_ORDER_FOR_PRINTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGET_LAST_ORDER_FOR_PRINTRow);
                return rowGET_LAST_ORDER_FOR_PRINTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GET_LAST_ORDER_FOR_PRINTDataTable cln = ((GET_LAST_ORDER_FOR_PRINTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GET_LAST_ORDER_FOR_PRINTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnColumn1 = base.Columns["Column1"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnColumn1 = new global::System.Data.DataColumn("Column1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColumn1);
                this.columnColumn1.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_LAST_ORDER_FOR_PRINTRow NewGET_LAST_ORDER_FOR_PRINTRow() {
                return ((GET_LAST_ORDER_FOR_PRINTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GET_LAST_ORDER_FOR_PRINTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GET_LAST_ORDER_FOR_PRINTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GET_LAST_ORDER_FOR_PRINTRowChanged != null)) {
                    this.GET_LAST_ORDER_FOR_PRINTRowChanged(this, new GET_LAST_ORDER_FOR_PRINTRowChangeEvent(((GET_LAST_ORDER_FOR_PRINTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GET_LAST_ORDER_FOR_PRINTRowChanging != null)) {
                    this.GET_LAST_ORDER_FOR_PRINTRowChanging(this, new GET_LAST_ORDER_FOR_PRINTRowChangeEvent(((GET_LAST_ORDER_FOR_PRINTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GET_LAST_ORDER_FOR_PRINTRowDeleted != null)) {
                    this.GET_LAST_ORDER_FOR_PRINTRowDeleted(this, new GET_LAST_ORDER_FOR_PRINTRowChangeEvent(((GET_LAST_ORDER_FOR_PRINTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GET_LAST_ORDER_FOR_PRINTRowDeleting != null)) {
                    this.GET_LAST_ORDER_FOR_PRINTRowDeleting(this, new GET_LAST_ORDER_FOR_PRINTRowChangeEvent(((GET_LAST_ORDER_FOR_PRINTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGET_LAST_ORDER_FOR_PRINTRow(GET_LAST_ORDER_FOR_PRINTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NorthwindSQLDataSet ds = new NorthwindSQLDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GET_LAST_ORDER_FOR_PRINTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GET_LAST_ORDER_IDDataTable : global::System.Data.TypedTableBase<GET_LAST_ORDER_IDRow> {
            
            private global::System.Data.DataColumn columnColumn1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_LAST_ORDER_IDDataTable() {
                this.TableName = "GET_LAST_ORDER_ID";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GET_LAST_ORDER_IDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GET_LAST_ORDER_IDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Column1Column {
                get {
                    return this.columnColumn1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_LAST_ORDER_IDRow this[int index] {
                get {
                    return ((GET_LAST_ORDER_IDRow)(this.Rows[index]));
                }
            }
            
            public event GET_LAST_ORDER_IDRowChangeEventHandler GET_LAST_ORDER_IDRowChanging;
            
            public event GET_LAST_ORDER_IDRowChangeEventHandler GET_LAST_ORDER_IDRowChanged;
            
            public event GET_LAST_ORDER_IDRowChangeEventHandler GET_LAST_ORDER_IDRowDeleting;
            
            public event GET_LAST_ORDER_IDRowChangeEventHandler GET_LAST_ORDER_IDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGET_LAST_ORDER_IDRow(GET_LAST_ORDER_IDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_LAST_ORDER_IDRow AddGET_LAST_ORDER_IDRow(int Column1) {
                GET_LAST_ORDER_IDRow rowGET_LAST_ORDER_IDRow = ((GET_LAST_ORDER_IDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Column1};
                rowGET_LAST_ORDER_IDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGET_LAST_ORDER_IDRow);
                return rowGET_LAST_ORDER_IDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GET_LAST_ORDER_IDDataTable cln = ((GET_LAST_ORDER_IDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GET_LAST_ORDER_IDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnColumn1 = base.Columns["Column1"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnColumn1 = new global::System.Data.DataColumn("Column1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColumn1);
                this.columnColumn1.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_LAST_ORDER_IDRow NewGET_LAST_ORDER_IDRow() {
                return ((GET_LAST_ORDER_IDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GET_LAST_ORDER_IDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GET_LAST_ORDER_IDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GET_LAST_ORDER_IDRowChanged != null)) {
                    this.GET_LAST_ORDER_IDRowChanged(this, new GET_LAST_ORDER_IDRowChangeEvent(((GET_LAST_ORDER_IDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GET_LAST_ORDER_IDRowChanging != null)) {
                    this.GET_LAST_ORDER_IDRowChanging(this, new GET_LAST_ORDER_IDRowChangeEvent(((GET_LAST_ORDER_IDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GET_LAST_ORDER_IDRowDeleted != null)) {
                    this.GET_LAST_ORDER_IDRowDeleted(this, new GET_LAST_ORDER_IDRowChangeEvent(((GET_LAST_ORDER_IDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GET_LAST_ORDER_IDRowDeleting != null)) {
                    this.GET_LAST_ORDER_IDRowDeleting(this, new GET_LAST_ORDER_IDRowChangeEvent(((GET_LAST_ORDER_IDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGET_LAST_ORDER_IDRow(GET_LAST_ORDER_IDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NorthwindSQLDataSet ds = new NorthwindSQLDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GET_LAST_ORDER_IDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GET_LAST_PurchaseORDER_IDDataTable : global::System.Data.TypedTableBase<GET_LAST_PurchaseORDER_IDRow> {
            
            private global::System.Data.DataColumn columnColumn1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_LAST_PurchaseORDER_IDDataTable() {
                this.TableName = "GET_LAST_PurchaseORDER_ID";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GET_LAST_PurchaseORDER_IDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GET_LAST_PurchaseORDER_IDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Column1Column {
                get {
                    return this.columnColumn1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_LAST_PurchaseORDER_IDRow this[int index] {
                get {
                    return ((GET_LAST_PurchaseORDER_IDRow)(this.Rows[index]));
                }
            }
            
            public event GET_LAST_PurchaseORDER_IDRowChangeEventHandler GET_LAST_PurchaseORDER_IDRowChanging;
            
            public event GET_LAST_PurchaseORDER_IDRowChangeEventHandler GET_LAST_PurchaseORDER_IDRowChanged;
            
            public event GET_LAST_PurchaseORDER_IDRowChangeEventHandler GET_LAST_PurchaseORDER_IDRowDeleting;
            
            public event GET_LAST_PurchaseORDER_IDRowChangeEventHandler GET_LAST_PurchaseORDER_IDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGET_LAST_PurchaseORDER_IDRow(GET_LAST_PurchaseORDER_IDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_LAST_PurchaseORDER_IDRow AddGET_LAST_PurchaseORDER_IDRow(int Column1) {
                GET_LAST_PurchaseORDER_IDRow rowGET_LAST_PurchaseORDER_IDRow = ((GET_LAST_PurchaseORDER_IDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Column1};
                rowGET_LAST_PurchaseORDER_IDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGET_LAST_PurchaseORDER_IDRow);
                return rowGET_LAST_PurchaseORDER_IDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GET_LAST_PurchaseORDER_IDDataTable cln = ((GET_LAST_PurchaseORDER_IDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GET_LAST_PurchaseORDER_IDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnColumn1 = base.Columns["Column1"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnColumn1 = new global::System.Data.DataColumn("Column1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColumn1);
                this.columnColumn1.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_LAST_PurchaseORDER_IDRow NewGET_LAST_PurchaseORDER_IDRow() {
                return ((GET_LAST_PurchaseORDER_IDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GET_LAST_PurchaseORDER_IDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GET_LAST_PurchaseORDER_IDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GET_LAST_PurchaseORDER_IDRowChanged != null)) {
                    this.GET_LAST_PurchaseORDER_IDRowChanged(this, new GET_LAST_PurchaseORDER_IDRowChangeEvent(((GET_LAST_PurchaseORDER_IDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GET_LAST_PurchaseORDER_IDRowChanging != null)) {
                    this.GET_LAST_PurchaseORDER_IDRowChanging(this, new GET_LAST_PurchaseORDER_IDRowChangeEvent(((GET_LAST_PurchaseORDER_IDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GET_LAST_PurchaseORDER_IDRowDeleted != null)) {
                    this.GET_LAST_PurchaseORDER_IDRowDeleted(this, new GET_LAST_PurchaseORDER_IDRowChangeEvent(((GET_LAST_PurchaseORDER_IDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GET_LAST_PurchaseORDER_IDRowDeleting != null)) {
                    this.GET_LAST_PurchaseORDER_IDRowDeleting(this, new GET_LAST_PurchaseORDER_IDRowChangeEvent(((GET_LAST_PurchaseORDER_IDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGET_LAST_PurchaseORDER_IDRow(GET_LAST_PurchaseORDER_IDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NorthwindSQLDataSet ds = new NorthwindSQLDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GET_LAST_PurchaseORDER_IDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GET_LAST_Transaction_IDDataTable : global::System.Data.TypedTableBase<GET_LAST_Transaction_IDRow> {
            
            private global::System.Data.DataColumn columnColumn1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_LAST_Transaction_IDDataTable() {
                this.TableName = "GET_LAST_Transaction_ID";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GET_LAST_Transaction_IDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GET_LAST_Transaction_IDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Column1Column {
                get {
                    return this.columnColumn1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_LAST_Transaction_IDRow this[int index] {
                get {
                    return ((GET_LAST_Transaction_IDRow)(this.Rows[index]));
                }
            }
            
            public event GET_LAST_Transaction_IDRowChangeEventHandler GET_LAST_Transaction_IDRowChanging;
            
            public event GET_LAST_Transaction_IDRowChangeEventHandler GET_LAST_Transaction_IDRowChanged;
            
            public event GET_LAST_Transaction_IDRowChangeEventHandler GET_LAST_Transaction_IDRowDeleting;
            
            public event GET_LAST_Transaction_IDRowChangeEventHandler GET_LAST_Transaction_IDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGET_LAST_Transaction_IDRow(GET_LAST_Transaction_IDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_LAST_Transaction_IDRow AddGET_LAST_Transaction_IDRow(int Column1) {
                GET_LAST_Transaction_IDRow rowGET_LAST_Transaction_IDRow = ((GET_LAST_Transaction_IDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Column1};
                rowGET_LAST_Transaction_IDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGET_LAST_Transaction_IDRow);
                return rowGET_LAST_Transaction_IDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GET_LAST_Transaction_IDDataTable cln = ((GET_LAST_Transaction_IDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GET_LAST_Transaction_IDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnColumn1 = base.Columns["Column1"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnColumn1 = new global::System.Data.DataColumn("Column1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColumn1);
                this.columnColumn1.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_LAST_Transaction_IDRow NewGET_LAST_Transaction_IDRow() {
                return ((GET_LAST_Transaction_IDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GET_LAST_Transaction_IDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GET_LAST_Transaction_IDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GET_LAST_Transaction_IDRowChanged != null)) {
                    this.GET_LAST_Transaction_IDRowChanged(this, new GET_LAST_Transaction_IDRowChangeEvent(((GET_LAST_Transaction_IDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GET_LAST_Transaction_IDRowChanging != null)) {
                    this.GET_LAST_Transaction_IDRowChanging(this, new GET_LAST_Transaction_IDRowChangeEvent(((GET_LAST_Transaction_IDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GET_LAST_Transaction_IDRowDeleted != null)) {
                    this.GET_LAST_Transaction_IDRowDeleted(this, new GET_LAST_Transaction_IDRowChangeEvent(((GET_LAST_Transaction_IDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GET_LAST_Transaction_IDRowDeleting != null)) {
                    this.GET_LAST_Transaction_IDRowDeleting(this, new GET_LAST_Transaction_IDRowChangeEvent(((GET_LAST_Transaction_IDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGET_LAST_Transaction_IDRow(GET_LAST_Transaction_IDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NorthwindSQLDataSet ds = new NorthwindSQLDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GET_LAST_Transaction_IDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GET_SINGLE_PRODUCTDataTable : global::System.Data.TypedTableBase<GET_SINGLE_PRODUCTRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnProduct_Code;
            
            private global::System.Data.DataColumn columnProduct_Name;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnStandard_Cost;
            
            private global::System.Data.DataColumn columnList_Price;
            
            private global::System.Data.DataColumn columnReorder_Level;
            
            private global::System.Data.DataColumn columnTarget_Level;
            
            private global::System.Data.DataColumn columnQuantity_Per_Unit;
            
            private global::System.Data.DataColumn columnDiscontinued;
            
            private global::System.Data.DataColumn columnMinimum_Reorder_Quantity;
            
            private global::System.Data.DataColumn columnCategory;
            
            private global::System.Data.DataColumn columnSupplier_IDs;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_SINGLE_PRODUCTDataTable() {
                this.TableName = "GET_SINGLE_PRODUCT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GET_SINGLE_PRODUCTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GET_SINGLE_PRODUCTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Product_CodeColumn {
                get {
                    return this.columnProduct_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Product_NameColumn {
                get {
                    return this.columnProduct_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Standard_CostColumn {
                get {
                    return this.columnStandard_Cost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn List_PriceColumn {
                get {
                    return this.columnList_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Reorder_LevelColumn {
                get {
                    return this.columnReorder_Level;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Target_LevelColumn {
                get {
                    return this.columnTarget_Level;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Quantity_Per_UnitColumn {
                get {
                    return this.columnQuantity_Per_Unit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscontinuedColumn {
                get {
                    return this.columnDiscontinued;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Minimum_Reorder_QuantityColumn {
                get {
                    return this.columnMinimum_Reorder_Quantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CategoryColumn {
                get {
                    return this.columnCategory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Supplier_IDsColumn {
                get {
                    return this.columnSupplier_IDs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_SINGLE_PRODUCTRow this[int index] {
                get {
                    return ((GET_SINGLE_PRODUCTRow)(this.Rows[index]));
                }
            }
            
            public event GET_SINGLE_PRODUCTRowChangeEventHandler GET_SINGLE_PRODUCTRowChanging;
            
            public event GET_SINGLE_PRODUCTRowChangeEventHandler GET_SINGLE_PRODUCTRowChanged;
            
            public event GET_SINGLE_PRODUCTRowChangeEventHandler GET_SINGLE_PRODUCTRowDeleting;
            
            public event GET_SINGLE_PRODUCTRowChangeEventHandler GET_SINGLE_PRODUCTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGET_SINGLE_PRODUCTRow(GET_SINGLE_PRODUCTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_SINGLE_PRODUCTRow AddGET_SINGLE_PRODUCTRow(string Product_Code, string Product_Name, string Description, decimal Standard_Cost, decimal List_Price, short Reorder_Level, int Target_Level, string Quantity_Per_Unit, bool Discontinued, short Minimum_Reorder_Quantity, string Category, int Supplier_IDs) {
                GET_SINGLE_PRODUCTRow rowGET_SINGLE_PRODUCTRow = ((GET_SINGLE_PRODUCTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Product_Code,
                        Product_Name,
                        Description,
                        Standard_Cost,
                        List_Price,
                        Reorder_Level,
                        Target_Level,
                        Quantity_Per_Unit,
                        Discontinued,
                        Minimum_Reorder_Quantity,
                        Category,
                        Supplier_IDs};
                rowGET_SINGLE_PRODUCTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGET_SINGLE_PRODUCTRow);
                return rowGET_SINGLE_PRODUCTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_SINGLE_PRODUCTRow FindByID(int ID) {
                return ((GET_SINGLE_PRODUCTRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GET_SINGLE_PRODUCTDataTable cln = ((GET_SINGLE_PRODUCTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GET_SINGLE_PRODUCTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnProduct_Code = base.Columns["Product Code"];
                this.columnProduct_Name = base.Columns["Product Name"];
                this.columnDescription = base.Columns["Description"];
                this.columnStandard_Cost = base.Columns["Standard Cost"];
                this.columnList_Price = base.Columns["List Price"];
                this.columnReorder_Level = base.Columns["Reorder Level"];
                this.columnTarget_Level = base.Columns["Target Level"];
                this.columnQuantity_Per_Unit = base.Columns["Quantity Per Unit"];
                this.columnDiscontinued = base.Columns["Discontinued"];
                this.columnMinimum_Reorder_Quantity = base.Columns["Minimum Reorder Quantity"];
                this.columnCategory = base.Columns["Category"];
                this.columnSupplier_IDs = base.Columns["Supplier IDs"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnProduct_Code = new global::System.Data.DataColumn("Product Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProduct_Code);
                this.columnProduct_Name = new global::System.Data.DataColumn("Product Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProduct_Name);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnStandard_Cost = new global::System.Data.DataColumn("Standard Cost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStandard_Cost);
                this.columnList_Price = new global::System.Data.DataColumn("List Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnList_Price);
                this.columnReorder_Level = new global::System.Data.DataColumn("Reorder Level", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReorder_Level);
                this.columnTarget_Level = new global::System.Data.DataColumn("Target Level", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTarget_Level);
                this.columnQuantity_Per_Unit = new global::System.Data.DataColumn("Quantity Per Unit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity_Per_Unit);
                this.columnDiscontinued = new global::System.Data.DataColumn("Discontinued", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscontinued);
                this.columnMinimum_Reorder_Quantity = new global::System.Data.DataColumn("Minimum Reorder Quantity", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMinimum_Reorder_Quantity);
                this.columnCategory = new global::System.Data.DataColumn("Category", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategory);
                this.columnSupplier_IDs = new global::System.Data.DataColumn("Supplier IDs", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplier_IDs);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnProduct_Code.MaxLength = 25;
                this.columnProduct_Name.MaxLength = 50;
                this.columnDescription.MaxLength = 1073741823;
                this.columnQuantity_Per_Unit.MaxLength = 50;
                this.columnCategory.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_SINGLE_PRODUCTRow NewGET_SINGLE_PRODUCTRow() {
                return ((GET_SINGLE_PRODUCTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GET_SINGLE_PRODUCTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GET_SINGLE_PRODUCTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GET_SINGLE_PRODUCTRowChanged != null)) {
                    this.GET_SINGLE_PRODUCTRowChanged(this, new GET_SINGLE_PRODUCTRowChangeEvent(((GET_SINGLE_PRODUCTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GET_SINGLE_PRODUCTRowChanging != null)) {
                    this.GET_SINGLE_PRODUCTRowChanging(this, new GET_SINGLE_PRODUCTRowChangeEvent(((GET_SINGLE_PRODUCTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GET_SINGLE_PRODUCTRowDeleted != null)) {
                    this.GET_SINGLE_PRODUCTRowDeleted(this, new GET_SINGLE_PRODUCTRowChangeEvent(((GET_SINGLE_PRODUCTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GET_SINGLE_PRODUCTRowDeleting != null)) {
                    this.GET_SINGLE_PRODUCTRowDeleting(this, new GET_SINGLE_PRODUCTRowChangeEvent(((GET_SINGLE_PRODUCTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGET_SINGLE_PRODUCTRow(GET_SINGLE_PRODUCTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NorthwindSQLDataSet ds = new NorthwindSQLDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GET_SINGLE_PRODUCTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GetOrderDetailsDataTable : global::System.Data.TypedTableBase<GetOrderDetailsRow> {
            
            private global::System.Data.DataColumn columnRAQAMKA_AGABKA;
            
            private global::System.Data.DataColumn columnRAQAMKA_DALABKA;
            
            private global::System.Data.DataColumn columnCADADKA;
            
            private global::System.Data.DataColumn columnQIIMAHA;
            
            private global::System.Data.DataColumn columnKADHIMID;
            
            private global::System.Data.DataColumn columnQIIMAHA_KULI;
            
            private global::System.Data.DataColumn columnQIIMAHA_UGU_DAMBEEYO;
            
            private global::System.Data.DataColumn columnTAARIIQDA_DALABKA;
            
            private global::System.Data.DataColumn columnGADAHA;
            
            private global::System.Data.DataColumn columnRAQAMKA_MACAAMILKA;
            
            private global::System.Data.DataColumn columnMAGACA_MACAAMILKA;
            
            private global::System.Data.DataColumn columnTELKA;
            
            private global::System.Data.DataColumn columnEMAILKA;
            
            private global::System.Data.DataColumn columnMAGACA_AGABKA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetOrderDetailsDataTable() {
                this.TableName = "GetOrderDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GetOrderDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GetOrderDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RAQAMKA_AGABKAColumn {
                get {
                    return this.columnRAQAMKA_AGABKA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RAQAMKA_DALABKAColumn {
                get {
                    return this.columnRAQAMKA_DALABKA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CADADKAColumn {
                get {
                    return this.columnCADADKA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QIIMAHAColumn {
                get {
                    return this.columnQIIMAHA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KADHIMIDColumn {
                get {
                    return this.columnKADHIMID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QIIMAHA_KULIColumn {
                get {
                    return this.columnQIIMAHA_KULI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QIIMAHA_UGU_DAMBEEYOColumn {
                get {
                    return this.columnQIIMAHA_UGU_DAMBEEYO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TAARIIQDA_DALABKAColumn {
                get {
                    return this.columnTAARIIQDA_DALABKA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GADAHAColumn {
                get {
                    return this.columnGADAHA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RAQAMKA_MACAAMILKAColumn {
                get {
                    return this.columnRAQAMKA_MACAAMILKA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAGACA_MACAAMILKAColumn {
                get {
                    return this.columnMAGACA_MACAAMILKA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TELKAColumn {
                get {
                    return this.columnTELKA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMAILKAColumn {
                get {
                    return this.columnEMAILKA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAGACA_AGABKAColumn {
                get {
                    return this.columnMAGACA_AGABKA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetOrderDetailsRow this[int index] {
                get {
                    return ((GetOrderDetailsRow)(this.Rows[index]));
                }
            }
            
            public event GetOrderDetailsRowChangeEventHandler GetOrderDetailsRowChanging;
            
            public event GetOrderDetailsRowChangeEventHandler GetOrderDetailsRowChanged;
            
            public event GetOrderDetailsRowChangeEventHandler GetOrderDetailsRowDeleting;
            
            public event GetOrderDetailsRowChangeEventHandler GetOrderDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGetOrderDetailsRow(GetOrderDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetOrderDetailsRow AddGetOrderDetailsRow(int RAQAMKA_AGABKA, int RAQAMKA_DALABKA, decimal CADADKA, decimal QIIMAHA, double KADHIMID, decimal QIIMAHA_KULI, decimal QIIMAHA_UGU_DAMBEEYO, System.DateTime TAARIIQDA_DALABKA, string GADAHA, string MAGACA_MACAAMILKA, string TELKA, string EMAILKA, string MAGACA_AGABKA) {
                GetOrderDetailsRow rowGetOrderDetailsRow = ((GetOrderDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RAQAMKA_AGABKA,
                        RAQAMKA_DALABKA,
                        CADADKA,
                        QIIMAHA,
                        KADHIMID,
                        QIIMAHA_KULI,
                        QIIMAHA_UGU_DAMBEEYO,
                        TAARIIQDA_DALABKA,
                        GADAHA,
                        null,
                        MAGACA_MACAAMILKA,
                        TELKA,
                        EMAILKA,
                        MAGACA_AGABKA};
                rowGetOrderDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGetOrderDetailsRow);
                return rowGetOrderDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetOrderDetailsRow FindByRAQAMKA_MACAAMILKA(int RAQAMKA_MACAAMILKA) {
                return ((GetOrderDetailsRow)(this.Rows.Find(new object[] {
                            RAQAMKA_MACAAMILKA})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GetOrderDetailsDataTable cln = ((GetOrderDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GetOrderDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRAQAMKA_AGABKA = base.Columns["RAQAMKA AGABKA"];
                this.columnRAQAMKA_DALABKA = base.Columns["RAQAMKA DALABKA"];
                this.columnCADADKA = base.Columns["CADADKA"];
                this.columnQIIMAHA = base.Columns["QIIMAHA"];
                this.columnKADHIMID = base.Columns["KADHIMID"];
                this.columnQIIMAHA_KULI = base.Columns["QIIMAHA KULI"];
                this.columnQIIMAHA_UGU_DAMBEEYO = base.Columns["QIIMAHA UGU DAMBEEYO"];
                this.columnTAARIIQDA_DALABKA = base.Columns["TAARIIQDA DALABKA"];
                this.columnGADAHA = base.Columns["GADAHA"];
                this.columnRAQAMKA_MACAAMILKA = base.Columns["RAQAMKA MACAAMILKA"];
                this.columnMAGACA_MACAAMILKA = base.Columns["MAGACA MACAAMILKA"];
                this.columnTELKA = base.Columns["TELKA"];
                this.columnEMAILKA = base.Columns["EMAILKA"];
                this.columnMAGACA_AGABKA = base.Columns["MAGACA AGABKA"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRAQAMKA_AGABKA = new global::System.Data.DataColumn("RAQAMKA AGABKA", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRAQAMKA_AGABKA);
                this.columnRAQAMKA_DALABKA = new global::System.Data.DataColumn("RAQAMKA DALABKA", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRAQAMKA_DALABKA);
                this.columnCADADKA = new global::System.Data.DataColumn("CADADKA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCADADKA);
                this.columnQIIMAHA = new global::System.Data.DataColumn("QIIMAHA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQIIMAHA);
                this.columnKADHIMID = new global::System.Data.DataColumn("KADHIMID", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKADHIMID);
                this.columnQIIMAHA_KULI = new global::System.Data.DataColumn("QIIMAHA KULI", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQIIMAHA_KULI);
                this.columnQIIMAHA_UGU_DAMBEEYO = new global::System.Data.DataColumn("QIIMAHA UGU DAMBEEYO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQIIMAHA_UGU_DAMBEEYO);
                this.columnTAARIIQDA_DALABKA = new global::System.Data.DataColumn("TAARIIQDA DALABKA", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAARIIQDA_DALABKA);
                this.columnGADAHA = new global::System.Data.DataColumn("GADAHA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGADAHA);
                this.columnRAQAMKA_MACAAMILKA = new global::System.Data.DataColumn("RAQAMKA MACAAMILKA", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRAQAMKA_MACAAMILKA);
                this.columnMAGACA_MACAAMILKA = new global::System.Data.DataColumn("MAGACA MACAAMILKA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAGACA_MACAAMILKA);
                this.columnTELKA = new global::System.Data.DataColumn("TELKA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTELKA);
                this.columnEMAILKA = new global::System.Data.DataColumn("EMAILKA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMAILKA);
                this.columnMAGACA_AGABKA = new global::System.Data.DataColumn("MAGACA AGABKA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAGACA_AGABKA);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRAQAMKA_MACAAMILKA}, true));
                this.columnGADAHA.MaxLength = 75;
                this.columnRAQAMKA_MACAAMILKA.AutoIncrement = true;
                this.columnRAQAMKA_MACAAMILKA.AllowDBNull = false;
                this.columnRAQAMKA_MACAAMILKA.ReadOnly = true;
                this.columnRAQAMKA_MACAAMILKA.Unique = true;
                this.columnMAGACA_MACAAMILKA.ReadOnly = true;
                this.columnMAGACA_MACAAMILKA.MaxLength = 101;
                this.columnTELKA.MaxLength = 25;
                this.columnEMAILKA.MaxLength = 50;
                this.columnMAGACA_AGABKA.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetOrderDetailsRow NewGetOrderDetailsRow() {
                return ((GetOrderDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GetOrderDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GetOrderDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GetOrderDetailsRowChanged != null)) {
                    this.GetOrderDetailsRowChanged(this, new GetOrderDetailsRowChangeEvent(((GetOrderDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GetOrderDetailsRowChanging != null)) {
                    this.GetOrderDetailsRowChanging(this, new GetOrderDetailsRowChangeEvent(((GetOrderDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GetOrderDetailsRowDeleted != null)) {
                    this.GetOrderDetailsRowDeleted(this, new GetOrderDetailsRowChangeEvent(((GetOrderDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GetOrderDetailsRowDeleting != null)) {
                    this.GetOrderDetailsRowDeleting(this, new GetOrderDetailsRowChangeEvent(((GetOrderDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGetOrderDetailsRow(GetOrderDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NorthwindSQLDataSet ds = new NorthwindSQLDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GetOrderDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GetOrderDetailsForPrintDataTable : global::System.Data.TypedTableBase<GetOrderDetailsForPrintRow> {
            
            private global::System.Data.DataColumn columnRAQAMKA_AGABKA;
            
            private global::System.Data.DataColumn columnRAQAMKA_DALABKA;
            
            private global::System.Data.DataColumn columnCADADKA;
            
            private global::System.Data.DataColumn columnQIIMAHA;
            
            private global::System.Data.DataColumn columnKADHIMID;
            
            private global::System.Data.DataColumn columnQIIMAHA_KULI;
            
            private global::System.Data.DataColumn columnQIIMAHA_UGU_DAMBEEYO;
            
            private global::System.Data.DataColumn columnTAARIIQDA_DALABKA;
            
            private global::System.Data.DataColumn columnGADAHA;
            
            private global::System.Data.DataColumn columnRAQAMKA_MACAAMILKA;
            
            private global::System.Data.DataColumn columnMAGACA_MACAAMILKA;
            
            private global::System.Data.DataColumn columnTELKA;
            
            private global::System.Data.DataColumn columnEMAILKA;
            
            private global::System.Data.DataColumn columnMAGACA_AGABKA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetOrderDetailsForPrintDataTable() {
                this.TableName = "GetOrderDetailsForPrint";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GetOrderDetailsForPrintDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GetOrderDetailsForPrintDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RAQAMKA_AGABKAColumn {
                get {
                    return this.columnRAQAMKA_AGABKA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RAQAMKA_DALABKAColumn {
                get {
                    return this.columnRAQAMKA_DALABKA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CADADKAColumn {
                get {
                    return this.columnCADADKA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QIIMAHAColumn {
                get {
                    return this.columnQIIMAHA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KADHIMIDColumn {
                get {
                    return this.columnKADHIMID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QIIMAHA_KULIColumn {
                get {
                    return this.columnQIIMAHA_KULI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QIIMAHA_UGU_DAMBEEYOColumn {
                get {
                    return this.columnQIIMAHA_UGU_DAMBEEYO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TAARIIQDA_DALABKAColumn {
                get {
                    return this.columnTAARIIQDA_DALABKA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GADAHAColumn {
                get {
                    return this.columnGADAHA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RAQAMKA_MACAAMILKAColumn {
                get {
                    return this.columnRAQAMKA_MACAAMILKA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAGACA_MACAAMILKAColumn {
                get {
                    return this.columnMAGACA_MACAAMILKA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TELKAColumn {
                get {
                    return this.columnTELKA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMAILKAColumn {
                get {
                    return this.columnEMAILKA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAGACA_AGABKAColumn {
                get {
                    return this.columnMAGACA_AGABKA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetOrderDetailsForPrintRow this[int index] {
                get {
                    return ((GetOrderDetailsForPrintRow)(this.Rows[index]));
                }
            }
            
            public event GetOrderDetailsForPrintRowChangeEventHandler GetOrderDetailsForPrintRowChanging;
            
            public event GetOrderDetailsForPrintRowChangeEventHandler GetOrderDetailsForPrintRowChanged;
            
            public event GetOrderDetailsForPrintRowChangeEventHandler GetOrderDetailsForPrintRowDeleting;
            
            public event GetOrderDetailsForPrintRowChangeEventHandler GetOrderDetailsForPrintRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGetOrderDetailsForPrintRow(GetOrderDetailsForPrintRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetOrderDetailsForPrintRow AddGetOrderDetailsForPrintRow(int RAQAMKA_AGABKA, int RAQAMKA_DALABKA, decimal CADADKA, decimal QIIMAHA, double KADHIMID, decimal QIIMAHA_KULI, decimal QIIMAHA_UGU_DAMBEEYO, System.DateTime TAARIIQDA_DALABKA, string GADAHA, string MAGACA_MACAAMILKA, string TELKA, string EMAILKA, string MAGACA_AGABKA) {
                GetOrderDetailsForPrintRow rowGetOrderDetailsForPrintRow = ((GetOrderDetailsForPrintRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RAQAMKA_AGABKA,
                        RAQAMKA_DALABKA,
                        CADADKA,
                        QIIMAHA,
                        KADHIMID,
                        QIIMAHA_KULI,
                        QIIMAHA_UGU_DAMBEEYO,
                        TAARIIQDA_DALABKA,
                        GADAHA,
                        null,
                        MAGACA_MACAAMILKA,
                        TELKA,
                        EMAILKA,
                        MAGACA_AGABKA};
                rowGetOrderDetailsForPrintRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGetOrderDetailsForPrintRow);
                return rowGetOrderDetailsForPrintRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetOrderDetailsForPrintRow FindByRAQAMKA_MACAAMILKA(int RAQAMKA_MACAAMILKA) {
                return ((GetOrderDetailsForPrintRow)(this.Rows.Find(new object[] {
                            RAQAMKA_MACAAMILKA})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GetOrderDetailsForPrintDataTable cln = ((GetOrderDetailsForPrintDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GetOrderDetailsForPrintDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRAQAMKA_AGABKA = base.Columns["RAQAMKA AGABKA"];
                this.columnRAQAMKA_DALABKA = base.Columns["RAQAMKA DALABKA"];
                this.columnCADADKA = base.Columns["CADADKA"];
                this.columnQIIMAHA = base.Columns["QIIMAHA"];
                this.columnKADHIMID = base.Columns["KADHIMID"];
                this.columnQIIMAHA_KULI = base.Columns["QIIMAHA KULI"];
                this.columnQIIMAHA_UGU_DAMBEEYO = base.Columns["QIIMAHA UGU DAMBEEYO"];
                this.columnTAARIIQDA_DALABKA = base.Columns["TAARIIQDA DALABKA"];
                this.columnGADAHA = base.Columns["GADAHA"];
                this.columnRAQAMKA_MACAAMILKA = base.Columns["RAQAMKA MACAAMILKA"];
                this.columnMAGACA_MACAAMILKA = base.Columns["MAGACA MACAAMILKA"];
                this.columnTELKA = base.Columns["TELKA"];
                this.columnEMAILKA = base.Columns["EMAILKA"];
                this.columnMAGACA_AGABKA = base.Columns["MAGACA AGABKA"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRAQAMKA_AGABKA = new global::System.Data.DataColumn("RAQAMKA AGABKA", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRAQAMKA_AGABKA);
                this.columnRAQAMKA_DALABKA = new global::System.Data.DataColumn("RAQAMKA DALABKA", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRAQAMKA_DALABKA);
                this.columnCADADKA = new global::System.Data.DataColumn("CADADKA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCADADKA);
                this.columnQIIMAHA = new global::System.Data.DataColumn("QIIMAHA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQIIMAHA);
                this.columnKADHIMID = new global::System.Data.DataColumn("KADHIMID", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKADHIMID);
                this.columnQIIMAHA_KULI = new global::System.Data.DataColumn("QIIMAHA KULI", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQIIMAHA_KULI);
                this.columnQIIMAHA_UGU_DAMBEEYO = new global::System.Data.DataColumn("QIIMAHA UGU DAMBEEYO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQIIMAHA_UGU_DAMBEEYO);
                this.columnTAARIIQDA_DALABKA = new global::System.Data.DataColumn("TAARIIQDA DALABKA", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAARIIQDA_DALABKA);
                this.columnGADAHA = new global::System.Data.DataColumn("GADAHA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGADAHA);
                this.columnRAQAMKA_MACAAMILKA = new global::System.Data.DataColumn("RAQAMKA MACAAMILKA", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRAQAMKA_MACAAMILKA);
                this.columnMAGACA_MACAAMILKA = new global::System.Data.DataColumn("MAGACA MACAAMILKA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAGACA_MACAAMILKA);
                this.columnTELKA = new global::System.Data.DataColumn("TELKA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTELKA);
                this.columnEMAILKA = new global::System.Data.DataColumn("EMAILKA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMAILKA);
                this.columnMAGACA_AGABKA = new global::System.Data.DataColumn("MAGACA AGABKA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAGACA_AGABKA);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRAQAMKA_MACAAMILKA}, true));
                this.columnGADAHA.MaxLength = 75;
                this.columnRAQAMKA_MACAAMILKA.AutoIncrement = true;
                this.columnRAQAMKA_MACAAMILKA.AllowDBNull = false;
                this.columnRAQAMKA_MACAAMILKA.ReadOnly = true;
                this.columnRAQAMKA_MACAAMILKA.Unique = true;
                this.columnMAGACA_MACAAMILKA.ReadOnly = true;
                this.columnMAGACA_MACAAMILKA.MaxLength = 101;
                this.columnTELKA.MaxLength = 25;
                this.columnEMAILKA.MaxLength = 50;
                this.columnMAGACA_AGABKA.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetOrderDetailsForPrintRow NewGetOrderDetailsForPrintRow() {
                return ((GetOrderDetailsForPrintRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GetOrderDetailsForPrintRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GetOrderDetailsForPrintRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GetOrderDetailsForPrintRowChanged != null)) {
                    this.GetOrderDetailsForPrintRowChanged(this, new GetOrderDetailsForPrintRowChangeEvent(((GetOrderDetailsForPrintRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GetOrderDetailsForPrintRowChanging != null)) {
                    this.GetOrderDetailsForPrintRowChanging(this, new GetOrderDetailsForPrintRowChangeEvent(((GetOrderDetailsForPrintRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GetOrderDetailsForPrintRowDeleted != null)) {
                    this.GetOrderDetailsForPrintRowDeleted(this, new GetOrderDetailsForPrintRowChangeEvent(((GetOrderDetailsForPrintRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GetOrderDetailsForPrintRowDeleting != null)) {
                    this.GetOrderDetailsForPrintRowDeleting(this, new GetOrderDetailsForPrintRowChangeEvent(((GetOrderDetailsForPrintRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGetOrderDetailsForPrintRow(GetOrderDetailsForPrintRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NorthwindSQLDataSet ds = new NorthwindSQLDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GetOrderDetailsForPrintDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GetOrderDetailsokDataTable : global::System.Data.TypedTableBase<GetOrderDetailsokRow> {
            
            private global::System.Data.DataColumn columnRAQAMKA_AGABKA;
            
            private global::System.Data.DataColumn columnRAQAMKA_DALABKA;
            
            private global::System.Data.DataColumn columnCADADKA;
            
            private global::System.Data.DataColumn columnQIIMAHA;
            
            private global::System.Data.DataColumn columnKADHIMID;
            
            private global::System.Data.DataColumn columnQIIMAHA_KULI;
            
            private global::System.Data.DataColumn columnQIIMAHA_UGU_DAMBEEYO;
            
            private global::System.Data.DataColumn columnTAARIIQDA_DALABKA;
            
            private global::System.Data.DataColumn columnGADAHA;
            
            private global::System.Data.DataColumn columnRAQAMKA_MACAAMILKA;
            
            private global::System.Data.DataColumn columnMAGACA_MACAAMILKA;
            
            private global::System.Data.DataColumn columnTELKA;
            
            private global::System.Data.DataColumn columnEMAILKA;
            
            private global::System.Data.DataColumn columnMAGACA_AGABKA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetOrderDetailsokDataTable() {
                this.TableName = "GetOrderDetailsok";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GetOrderDetailsokDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GetOrderDetailsokDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RAQAMKA_AGABKAColumn {
                get {
                    return this.columnRAQAMKA_AGABKA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RAQAMKA_DALABKAColumn {
                get {
                    return this.columnRAQAMKA_DALABKA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CADADKAColumn {
                get {
                    return this.columnCADADKA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QIIMAHAColumn {
                get {
                    return this.columnQIIMAHA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KADHIMIDColumn {
                get {
                    return this.columnKADHIMID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QIIMAHA_KULIColumn {
                get {
                    return this.columnQIIMAHA_KULI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QIIMAHA_UGU_DAMBEEYOColumn {
                get {
                    return this.columnQIIMAHA_UGU_DAMBEEYO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TAARIIQDA_DALABKAColumn {
                get {
                    return this.columnTAARIIQDA_DALABKA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GADAHAColumn {
                get {
                    return this.columnGADAHA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RAQAMKA_MACAAMILKAColumn {
                get {
                    return this.columnRAQAMKA_MACAAMILKA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAGACA_MACAAMILKAColumn {
                get {
                    return this.columnMAGACA_MACAAMILKA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TELKAColumn {
                get {
                    return this.columnTELKA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMAILKAColumn {
                get {
                    return this.columnEMAILKA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAGACA_AGABKAColumn {
                get {
                    return this.columnMAGACA_AGABKA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetOrderDetailsokRow this[int index] {
                get {
                    return ((GetOrderDetailsokRow)(this.Rows[index]));
                }
            }
            
            public event GetOrderDetailsokRowChangeEventHandler GetOrderDetailsokRowChanging;
            
            public event GetOrderDetailsokRowChangeEventHandler GetOrderDetailsokRowChanged;
            
            public event GetOrderDetailsokRowChangeEventHandler GetOrderDetailsokRowDeleting;
            
            public event GetOrderDetailsokRowChangeEventHandler GetOrderDetailsokRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGetOrderDetailsokRow(GetOrderDetailsokRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetOrderDetailsokRow AddGetOrderDetailsokRow(int RAQAMKA_AGABKA, int RAQAMKA_DALABKA, decimal CADADKA, decimal QIIMAHA, double KADHIMID, decimal QIIMAHA_KULI, decimal QIIMAHA_UGU_DAMBEEYO, System.DateTime TAARIIQDA_DALABKA, string GADAHA, string MAGACA_MACAAMILKA, string TELKA, string EMAILKA, string MAGACA_AGABKA) {
                GetOrderDetailsokRow rowGetOrderDetailsokRow = ((GetOrderDetailsokRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RAQAMKA_AGABKA,
                        RAQAMKA_DALABKA,
                        CADADKA,
                        QIIMAHA,
                        KADHIMID,
                        QIIMAHA_KULI,
                        QIIMAHA_UGU_DAMBEEYO,
                        TAARIIQDA_DALABKA,
                        GADAHA,
                        null,
                        MAGACA_MACAAMILKA,
                        TELKA,
                        EMAILKA,
                        MAGACA_AGABKA};
                rowGetOrderDetailsokRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGetOrderDetailsokRow);
                return rowGetOrderDetailsokRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetOrderDetailsokRow FindByRAQAMKA_MACAAMILKA(int RAQAMKA_MACAAMILKA) {
                return ((GetOrderDetailsokRow)(this.Rows.Find(new object[] {
                            RAQAMKA_MACAAMILKA})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GetOrderDetailsokDataTable cln = ((GetOrderDetailsokDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GetOrderDetailsokDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRAQAMKA_AGABKA = base.Columns["RAQAMKA AGABKA"];
                this.columnRAQAMKA_DALABKA = base.Columns["RAQAMKA DALABKA"];
                this.columnCADADKA = base.Columns["CADADKA"];
                this.columnQIIMAHA = base.Columns["QIIMAHA"];
                this.columnKADHIMID = base.Columns["KADHIMID"];
                this.columnQIIMAHA_KULI = base.Columns["QIIMAHA KULI"];
                this.columnQIIMAHA_UGU_DAMBEEYO = base.Columns["QIIMAHA UGU DAMBEEYO"];
                this.columnTAARIIQDA_DALABKA = base.Columns["TAARIIQDA DALABKA"];
                this.columnGADAHA = base.Columns["GADAHA"];
                this.columnRAQAMKA_MACAAMILKA = base.Columns["RAQAMKA MACAAMILKA"];
                this.columnMAGACA_MACAAMILKA = base.Columns["MAGACA MACAAMILKA"];
                this.columnTELKA = base.Columns["TELKA"];
                this.columnEMAILKA = base.Columns["EMAILKA"];
                this.columnMAGACA_AGABKA = base.Columns["MAGACA AGABKA"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRAQAMKA_AGABKA = new global::System.Data.DataColumn("RAQAMKA AGABKA", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRAQAMKA_AGABKA);
                this.columnRAQAMKA_DALABKA = new global::System.Data.DataColumn("RAQAMKA DALABKA", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRAQAMKA_DALABKA);
                this.columnCADADKA = new global::System.Data.DataColumn("CADADKA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCADADKA);
                this.columnQIIMAHA = new global::System.Data.DataColumn("QIIMAHA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQIIMAHA);
                this.columnKADHIMID = new global::System.Data.DataColumn("KADHIMID", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKADHIMID);
                this.columnQIIMAHA_KULI = new global::System.Data.DataColumn("QIIMAHA KULI", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQIIMAHA_KULI);
                this.columnQIIMAHA_UGU_DAMBEEYO = new global::System.Data.DataColumn("QIIMAHA UGU DAMBEEYO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQIIMAHA_UGU_DAMBEEYO);
                this.columnTAARIIQDA_DALABKA = new global::System.Data.DataColumn("TAARIIQDA DALABKA", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAARIIQDA_DALABKA);
                this.columnGADAHA = new global::System.Data.DataColumn("GADAHA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGADAHA);
                this.columnRAQAMKA_MACAAMILKA = new global::System.Data.DataColumn("RAQAMKA MACAAMILKA", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRAQAMKA_MACAAMILKA);
                this.columnMAGACA_MACAAMILKA = new global::System.Data.DataColumn("MAGACA MACAAMILKA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAGACA_MACAAMILKA);
                this.columnTELKA = new global::System.Data.DataColumn("TELKA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTELKA);
                this.columnEMAILKA = new global::System.Data.DataColumn("EMAILKA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMAILKA);
                this.columnMAGACA_AGABKA = new global::System.Data.DataColumn("MAGACA AGABKA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAGACA_AGABKA);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRAQAMKA_MACAAMILKA}, true));
                this.columnGADAHA.MaxLength = 75;
                this.columnRAQAMKA_MACAAMILKA.AutoIncrement = true;
                this.columnRAQAMKA_MACAAMILKA.AllowDBNull = false;
                this.columnRAQAMKA_MACAAMILKA.ReadOnly = true;
                this.columnRAQAMKA_MACAAMILKA.Unique = true;
                this.columnMAGACA_MACAAMILKA.ReadOnly = true;
                this.columnMAGACA_MACAAMILKA.MaxLength = 101;
                this.columnTELKA.MaxLength = 25;
                this.columnEMAILKA.MaxLength = 50;
                this.columnMAGACA_AGABKA.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetOrderDetailsokRow NewGetOrderDetailsokRow() {
                return ((GetOrderDetailsokRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GetOrderDetailsokRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GetOrderDetailsokRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GetOrderDetailsokRowChanged != null)) {
                    this.GetOrderDetailsokRowChanged(this, new GetOrderDetailsokRowChangeEvent(((GetOrderDetailsokRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GetOrderDetailsokRowChanging != null)) {
                    this.GetOrderDetailsokRowChanging(this, new GetOrderDetailsokRowChangeEvent(((GetOrderDetailsokRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GetOrderDetailsokRowDeleted != null)) {
                    this.GetOrderDetailsokRowDeleted(this, new GetOrderDetailsokRowChangeEvent(((GetOrderDetailsokRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GetOrderDetailsokRowDeleting != null)) {
                    this.GetOrderDetailsokRowDeleting(this, new GetOrderDetailsokRowChangeEvent(((GetOrderDetailsokRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGetOrderDetailsokRow(GetOrderDetailsokRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NorthwindSQLDataSet ds = new NorthwindSQLDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GetOrderDetailsokDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Search_CustomerDataTable : global::System.Data.TypedTableBase<Search_CustomerRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnSHIRKADA;
            
            private global::System.Data.DataColumn columnMAGACA_KUWAAD;
            
            private global::System.Data.DataColumn columnMAGACA_LABAAD;
            
            private global::System.Data.DataColumn columnEMAILKA;
            
            private global::System.Data.DataColumn columnTELKA;
            
            private global::System.Data.DataColumn columnAdrreska;
            
            private global::System.Data.DataColumn columnNOTES;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Search_CustomerDataTable() {
                this.TableName = "Search_Customer";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Search_CustomerDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Search_CustomerDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIRKADAColumn {
                get {
                    return this.columnSHIRKADA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAGACA_KUWAADColumn {
                get {
                    return this.columnMAGACA_KUWAAD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAGACA_LABAADColumn {
                get {
                    return this.columnMAGACA_LABAAD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMAILKAColumn {
                get {
                    return this.columnEMAILKA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TELKAColumn {
                get {
                    return this.columnTELKA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AdrreskaColumn {
                get {
                    return this.columnAdrreska;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NOTESColumn {
                get {
                    return this.columnNOTES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Search_CustomerRow this[int index] {
                get {
                    return ((Search_CustomerRow)(this.Rows[index]));
                }
            }
            
            public event Search_CustomerRowChangeEventHandler Search_CustomerRowChanging;
            
            public event Search_CustomerRowChangeEventHandler Search_CustomerRowChanged;
            
            public event Search_CustomerRowChangeEventHandler Search_CustomerRowDeleting;
            
            public event Search_CustomerRowChangeEventHandler Search_CustomerRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSearch_CustomerRow(Search_CustomerRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Search_CustomerRow AddSearch_CustomerRow(string SHIRKADA, string MAGACA_KUWAAD, string MAGACA_LABAAD, string EMAILKA, string TELKA, string Adrreska, string NOTES) {
                Search_CustomerRow rowSearch_CustomerRow = ((Search_CustomerRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        SHIRKADA,
                        MAGACA_KUWAAD,
                        MAGACA_LABAAD,
                        EMAILKA,
                        TELKA,
                        Adrreska,
                        NOTES};
                rowSearch_CustomerRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSearch_CustomerRow);
                return rowSearch_CustomerRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Search_CustomerRow FindByID(int ID) {
                return ((Search_CustomerRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Search_CustomerDataTable cln = ((Search_CustomerDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Search_CustomerDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnSHIRKADA = base.Columns["SHIRKADA"];
                this.columnMAGACA_KUWAAD = base.Columns["MAGACA KUWAAD"];
                this.columnMAGACA_LABAAD = base.Columns["MAGACA LABAAD"];
                this.columnEMAILKA = base.Columns["EMAILKA"];
                this.columnTELKA = base.Columns["TELKA"];
                this.columnAdrreska = base.Columns["Adrreska"];
                this.columnNOTES = base.Columns["NOTES"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnSHIRKADA = new global::System.Data.DataColumn("SHIRKADA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIRKADA);
                this.columnMAGACA_KUWAAD = new global::System.Data.DataColumn("MAGACA KUWAAD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAGACA_KUWAAD);
                this.columnMAGACA_LABAAD = new global::System.Data.DataColumn("MAGACA LABAAD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAGACA_LABAAD);
                this.columnEMAILKA = new global::System.Data.DataColumn("EMAILKA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMAILKA);
                this.columnTELKA = new global::System.Data.DataColumn("TELKA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTELKA);
                this.columnAdrreska = new global::System.Data.DataColumn("Adrreska", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdrreska);
                this.columnNOTES = new global::System.Data.DataColumn("NOTES", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOTES);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnSHIRKADA.MaxLength = 50;
                this.columnMAGACA_KUWAAD.MaxLength = 50;
                this.columnMAGACA_LABAAD.MaxLength = 50;
                this.columnEMAILKA.MaxLength = 50;
                this.columnTELKA.MaxLength = 25;
                this.columnAdrreska.MaxLength = 1073741823;
                this.columnNOTES.MaxLength = 1073741823;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Search_CustomerRow NewSearch_CustomerRow() {
                return ((Search_CustomerRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Search_CustomerRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Search_CustomerRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Search_CustomerRowChanged != null)) {
                    this.Search_CustomerRowChanged(this, new Search_CustomerRowChangeEvent(((Search_CustomerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Search_CustomerRowChanging != null)) {
                    this.Search_CustomerRowChanging(this, new Search_CustomerRowChangeEvent(((Search_CustomerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Search_CustomerRowDeleted != null)) {
                    this.Search_CustomerRowDeleted(this, new Search_CustomerRowChangeEvent(((Search_CustomerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Search_CustomerRowDeleting != null)) {
                    this.Search_CustomerRowDeleting(this, new Search_CustomerRowChangeEvent(((Search_CustomerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSearch_CustomerRow(Search_CustomerRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NorthwindSQLDataSet ds = new NorthwindSQLDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Search_CustomerDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SearchOrdersDataTable : global::System.Data.TypedTableBase<SearchOrdersRow> {
            
            private global::System.Data.DataColumn columnRAQMKA_DALABKA;
            
            private global::System.Data.DataColumn columnMAGACA_MACAAMILKA;
            
            private global::System.Data.DataColumn columnTAARIKHDA_DALABKA;
            
            private global::System.Data.DataColumn columnTAARIKHDA_BIXINTA;
            
            private global::System.Data.DataColumn columnMAGACA_GADAHA;
            
            private global::System.Data.DataColumn columnNOTE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SearchOrdersDataTable() {
                this.TableName = "SearchOrders";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SearchOrdersDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SearchOrdersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RAQMKA_DALABKAColumn {
                get {
                    return this.columnRAQMKA_DALABKA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAGACA_MACAAMILKAColumn {
                get {
                    return this.columnMAGACA_MACAAMILKA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TAARIKHDA_DALABKAColumn {
                get {
                    return this.columnTAARIKHDA_DALABKA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TAARIKHDA_BIXINTAColumn {
                get {
                    return this.columnTAARIKHDA_BIXINTA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAGACA_GADAHAColumn {
                get {
                    return this.columnMAGACA_GADAHA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NOTEColumn {
                get {
                    return this.columnNOTE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SearchOrdersRow this[int index] {
                get {
                    return ((SearchOrdersRow)(this.Rows[index]));
                }
            }
            
            public event SearchOrdersRowChangeEventHandler SearchOrdersRowChanging;
            
            public event SearchOrdersRowChangeEventHandler SearchOrdersRowChanged;
            
            public event SearchOrdersRowChangeEventHandler SearchOrdersRowDeleting;
            
            public event SearchOrdersRowChangeEventHandler SearchOrdersRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSearchOrdersRow(SearchOrdersRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SearchOrdersRow AddSearchOrdersRow(int RAQMKA_DALABKA, string MAGACA_MACAAMILKA, System.DateTime TAARIKHDA_DALABKA, System.DateTime TAARIKHDA_BIXINTA, string MAGACA_GADAHA, string NOTE) {
                SearchOrdersRow rowSearchOrdersRow = ((SearchOrdersRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RAQMKA_DALABKA,
                        MAGACA_MACAAMILKA,
                        TAARIKHDA_DALABKA,
                        TAARIKHDA_BIXINTA,
                        MAGACA_GADAHA,
                        NOTE};
                rowSearchOrdersRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSearchOrdersRow);
                return rowSearchOrdersRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SearchOrdersRow FindByRAQMKA_DALABKA(int RAQMKA_DALABKA) {
                return ((SearchOrdersRow)(this.Rows.Find(new object[] {
                            RAQMKA_DALABKA})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SearchOrdersDataTable cln = ((SearchOrdersDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SearchOrdersDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRAQMKA_DALABKA = base.Columns["RAQMKA DALABKA"];
                this.columnMAGACA_MACAAMILKA = base.Columns["MAGACA MACAAMILKA"];
                this.columnTAARIKHDA_DALABKA = base.Columns["TAARIKHDA DALABKA"];
                this.columnTAARIKHDA_BIXINTA = base.Columns["TAARIKHDA BIXINTA"];
                this.columnMAGACA_GADAHA = base.Columns["MAGACA GADAHA"];
                this.columnNOTE = base.Columns["NOTE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRAQMKA_DALABKA = new global::System.Data.DataColumn("RAQMKA DALABKA", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRAQMKA_DALABKA);
                this.columnMAGACA_MACAAMILKA = new global::System.Data.DataColumn("MAGACA MACAAMILKA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAGACA_MACAAMILKA);
                this.columnTAARIKHDA_DALABKA = new global::System.Data.DataColumn("TAARIKHDA DALABKA", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAARIKHDA_DALABKA);
                this.columnTAARIKHDA_BIXINTA = new global::System.Data.DataColumn("TAARIKHDA BIXINTA", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAARIKHDA_BIXINTA);
                this.columnMAGACA_GADAHA = new global::System.Data.DataColumn("MAGACA GADAHA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAGACA_GADAHA);
                this.columnNOTE = new global::System.Data.DataColumn("NOTE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOTE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRAQMKA_DALABKA}, true));
                this.columnRAQMKA_DALABKA.AllowDBNull = false;
                this.columnRAQMKA_DALABKA.Unique = true;
                this.columnMAGACA_MACAAMILKA.ReadOnly = true;
                this.columnMAGACA_MACAAMILKA.MaxLength = 101;
                this.columnMAGACA_GADAHA.MaxLength = 75;
                this.columnNOTE.MaxLength = 1073741823;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SearchOrdersRow NewSearchOrdersRow() {
                return ((SearchOrdersRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SearchOrdersRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SearchOrdersRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SearchOrdersRowChanged != null)) {
                    this.SearchOrdersRowChanged(this, new SearchOrdersRowChangeEvent(((SearchOrdersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SearchOrdersRowChanging != null)) {
                    this.SearchOrdersRowChanging(this, new SearchOrdersRowChangeEvent(((SearchOrdersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SearchOrdersRowDeleted != null)) {
                    this.SearchOrdersRowDeleted(this, new SearchOrdersRowChangeEvent(((SearchOrdersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SearchOrdersRowDeleting != null)) {
                    this.SearchOrdersRowDeleting(this, new SearchOrdersRowChangeEvent(((SearchOrdersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSearchOrdersRow(SearchOrdersRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NorthwindSQLDataSet ds = new NorthwindSQLDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SearchOrdersDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SearchOrders2DataTable : global::System.Data.TypedTableBase<SearchOrders2Row> {
            
            private global::System.Data.DataColumn columnRAQMKA_DALABKA;
            
            private global::System.Data.DataColumn columnMAGACA_MACAAMILKA;
            
            private global::System.Data.DataColumn columnTAARIKHDA_DALABKA;
            
            private global::System.Data.DataColumn columnTAARIKHDA_BIXINTA;
            
            private global::System.Data.DataColumn columnMAGACA_GADAHA;
            
            private global::System.Data.DataColumn columnNOTE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SearchOrders2DataTable() {
                this.TableName = "SearchOrders2";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SearchOrders2DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SearchOrders2DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RAQMKA_DALABKAColumn {
                get {
                    return this.columnRAQMKA_DALABKA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAGACA_MACAAMILKAColumn {
                get {
                    return this.columnMAGACA_MACAAMILKA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TAARIKHDA_DALABKAColumn {
                get {
                    return this.columnTAARIKHDA_DALABKA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TAARIKHDA_BIXINTAColumn {
                get {
                    return this.columnTAARIKHDA_BIXINTA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAGACA_GADAHAColumn {
                get {
                    return this.columnMAGACA_GADAHA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NOTEColumn {
                get {
                    return this.columnNOTE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SearchOrders2Row this[int index] {
                get {
                    return ((SearchOrders2Row)(this.Rows[index]));
                }
            }
            
            public event SearchOrders2RowChangeEventHandler SearchOrders2RowChanging;
            
            public event SearchOrders2RowChangeEventHandler SearchOrders2RowChanged;
            
            public event SearchOrders2RowChangeEventHandler SearchOrders2RowDeleting;
            
            public event SearchOrders2RowChangeEventHandler SearchOrders2RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSearchOrders2Row(SearchOrders2Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SearchOrders2Row AddSearchOrders2Row(int RAQMKA_DALABKA, string MAGACA_MACAAMILKA, System.DateTime TAARIKHDA_DALABKA, System.DateTime TAARIKHDA_BIXINTA, string MAGACA_GADAHA, string NOTE) {
                SearchOrders2Row rowSearchOrders2Row = ((SearchOrders2Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RAQMKA_DALABKA,
                        MAGACA_MACAAMILKA,
                        TAARIKHDA_DALABKA,
                        TAARIKHDA_BIXINTA,
                        MAGACA_GADAHA,
                        NOTE};
                rowSearchOrders2Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowSearchOrders2Row);
                return rowSearchOrders2Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SearchOrders2Row FindByRAQMKA_DALABKA(int RAQMKA_DALABKA) {
                return ((SearchOrders2Row)(this.Rows.Find(new object[] {
                            RAQMKA_DALABKA})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SearchOrders2DataTable cln = ((SearchOrders2DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SearchOrders2DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRAQMKA_DALABKA = base.Columns["RAQMKA DALABKA"];
                this.columnMAGACA_MACAAMILKA = base.Columns["MAGACA MACAAMILKA"];
                this.columnTAARIKHDA_DALABKA = base.Columns["TAARIKHDA DALABKA"];
                this.columnTAARIKHDA_BIXINTA = base.Columns["TAARIKHDA BIXINTA"];
                this.columnMAGACA_GADAHA = base.Columns["MAGACA GADAHA"];
                this.columnNOTE = base.Columns["NOTE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRAQMKA_DALABKA = new global::System.Data.DataColumn("RAQMKA DALABKA", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRAQMKA_DALABKA);
                this.columnMAGACA_MACAAMILKA = new global::System.Data.DataColumn("MAGACA MACAAMILKA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAGACA_MACAAMILKA);
                this.columnTAARIKHDA_DALABKA = new global::System.Data.DataColumn("TAARIKHDA DALABKA", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAARIKHDA_DALABKA);
                this.columnTAARIKHDA_BIXINTA = new global::System.Data.DataColumn("TAARIKHDA BIXINTA", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAARIKHDA_BIXINTA);
                this.columnMAGACA_GADAHA = new global::System.Data.DataColumn("MAGACA GADAHA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAGACA_GADAHA);
                this.columnNOTE = new global::System.Data.DataColumn("NOTE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOTE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRAQMKA_DALABKA}, true));
                this.columnRAQMKA_DALABKA.AllowDBNull = false;
                this.columnRAQMKA_DALABKA.Unique = true;
                this.columnMAGACA_MACAAMILKA.ReadOnly = true;
                this.columnMAGACA_MACAAMILKA.MaxLength = 101;
                this.columnMAGACA_GADAHA.MaxLength = 75;
                this.columnNOTE.MaxLength = 1073741823;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SearchOrders2Row NewSearchOrders2Row() {
                return ((SearchOrders2Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SearchOrders2Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SearchOrders2Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SearchOrders2RowChanged != null)) {
                    this.SearchOrders2RowChanged(this, new SearchOrders2RowChangeEvent(((SearchOrders2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SearchOrders2RowChanging != null)) {
                    this.SearchOrders2RowChanging(this, new SearchOrders2RowChangeEvent(((SearchOrders2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SearchOrders2RowDeleted != null)) {
                    this.SearchOrders2RowDeleted(this, new SearchOrders2RowChangeEvent(((SearchOrders2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SearchOrders2RowDeleting != null)) {
                    this.SearchOrders2RowDeleting(this, new SearchOrders2RowChangeEvent(((SearchOrders2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSearchOrders2Row(SearchOrders2Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NorthwindSQLDataSet ds = new NorthwindSQLDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SearchOrders2DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SearchOrders3DataTable : global::System.Data.TypedTableBase<SearchOrders3Row> {
            
            private global::System.Data.DataColumn columnRAQMKA_DALABKA;
            
            private global::System.Data.DataColumn columnMAGACA_MACAAMILKA;
            
            private global::System.Data.DataColumn columnTAARIKHDA_DALABKA;
            
            private global::System.Data.DataColumn columnTAARIKHDA_BIXINTA;
            
            private global::System.Data.DataColumn columnMAGACA_GADAHA;
            
            private global::System.Data.DataColumn columnNOTE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SearchOrders3DataTable() {
                this.TableName = "SearchOrders3";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SearchOrders3DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SearchOrders3DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RAQMKA_DALABKAColumn {
                get {
                    return this.columnRAQMKA_DALABKA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAGACA_MACAAMILKAColumn {
                get {
                    return this.columnMAGACA_MACAAMILKA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TAARIKHDA_DALABKAColumn {
                get {
                    return this.columnTAARIKHDA_DALABKA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TAARIKHDA_BIXINTAColumn {
                get {
                    return this.columnTAARIKHDA_BIXINTA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAGACA_GADAHAColumn {
                get {
                    return this.columnMAGACA_GADAHA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NOTEColumn {
                get {
                    return this.columnNOTE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SearchOrders3Row this[int index] {
                get {
                    return ((SearchOrders3Row)(this.Rows[index]));
                }
            }
            
            public event SearchOrders3RowChangeEventHandler SearchOrders3RowChanging;
            
            public event SearchOrders3RowChangeEventHandler SearchOrders3RowChanged;
            
            public event SearchOrders3RowChangeEventHandler SearchOrders3RowDeleting;
            
            public event SearchOrders3RowChangeEventHandler SearchOrders3RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSearchOrders3Row(SearchOrders3Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SearchOrders3Row AddSearchOrders3Row(int RAQMKA_DALABKA, string MAGACA_MACAAMILKA, System.DateTime TAARIKHDA_DALABKA, System.DateTime TAARIKHDA_BIXINTA, string MAGACA_GADAHA, string NOTE) {
                SearchOrders3Row rowSearchOrders3Row = ((SearchOrders3Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RAQMKA_DALABKA,
                        MAGACA_MACAAMILKA,
                        TAARIKHDA_DALABKA,
                        TAARIKHDA_BIXINTA,
                        MAGACA_GADAHA,
                        NOTE};
                rowSearchOrders3Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowSearchOrders3Row);
                return rowSearchOrders3Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SearchOrders3Row FindByRAQMKA_DALABKA(int RAQMKA_DALABKA) {
                return ((SearchOrders3Row)(this.Rows.Find(new object[] {
                            RAQMKA_DALABKA})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SearchOrders3DataTable cln = ((SearchOrders3DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SearchOrders3DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRAQMKA_DALABKA = base.Columns["RAQMKA DALABKA"];
                this.columnMAGACA_MACAAMILKA = base.Columns["MAGACA MACAAMILKA"];
                this.columnTAARIKHDA_DALABKA = base.Columns["TAARIKHDA DALABKA"];
                this.columnTAARIKHDA_BIXINTA = base.Columns["TAARIKHDA BIXINTA"];
                this.columnMAGACA_GADAHA = base.Columns["MAGACA GADAHA"];
                this.columnNOTE = base.Columns["NOTE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRAQMKA_DALABKA = new global::System.Data.DataColumn("RAQMKA DALABKA", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRAQMKA_DALABKA);
                this.columnMAGACA_MACAAMILKA = new global::System.Data.DataColumn("MAGACA MACAAMILKA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAGACA_MACAAMILKA);
                this.columnTAARIKHDA_DALABKA = new global::System.Data.DataColumn("TAARIKHDA DALABKA", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAARIKHDA_DALABKA);
                this.columnTAARIKHDA_BIXINTA = new global::System.Data.DataColumn("TAARIKHDA BIXINTA", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAARIKHDA_BIXINTA);
                this.columnMAGACA_GADAHA = new global::System.Data.DataColumn("MAGACA GADAHA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAGACA_GADAHA);
                this.columnNOTE = new global::System.Data.DataColumn("NOTE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOTE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRAQMKA_DALABKA}, true));
                this.columnRAQMKA_DALABKA.AllowDBNull = false;
                this.columnRAQMKA_DALABKA.Unique = true;
                this.columnMAGACA_MACAAMILKA.ReadOnly = true;
                this.columnMAGACA_MACAAMILKA.MaxLength = 101;
                this.columnMAGACA_GADAHA.MaxLength = 75;
                this.columnNOTE.MaxLength = 1073741823;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SearchOrders3Row NewSearchOrders3Row() {
                return ((SearchOrders3Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SearchOrders3Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SearchOrders3Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SearchOrders3RowChanged != null)) {
                    this.SearchOrders3RowChanged(this, new SearchOrders3RowChangeEvent(((SearchOrders3Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SearchOrders3RowChanging != null)) {
                    this.SearchOrders3RowChanging(this, new SearchOrders3RowChangeEvent(((SearchOrders3Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SearchOrders3RowDeleted != null)) {
                    this.SearchOrders3RowDeleted(this, new SearchOrders3RowChangeEvent(((SearchOrders3Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SearchOrders3RowDeleting != null)) {
                    this.SearchOrders3RowDeleting(this, new SearchOrders3RowChangeEvent(((SearchOrders3Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSearchOrders3Row(SearchOrders3Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NorthwindSQLDataSet ds = new NorthwindSQLDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SearchOrders3DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SearchProductDataTable : global::System.Data.TypedTableBase<SearchProductRow> {
            
            private global::System.Data.DataColumn columnRAQMKA;
            
            private global::System.Data.DataColumn columnCALAAMAD;
            
            private global::System.Data.DataColumn columnMAGACA;
            
            private global::System.Data.DataColumn columnFAAHFAAHIN;
            
            private global::System.Data.DataColumn columnQIIMHA;
            
            private global::System.Data.DataColumn columnLAGADAAYO;
            
            private global::System.Data.DataColumn columnXADKA_DALABKA;
            
            private global::System.Data.DataColumn columnXADKA_BUUXINTA;
            
            private global::System.Data.DataColumn columnCADADKA_XABADA;
            
            private global::System.Data.DataColumn columnQIIMA_DHIMIS;
            
            private global::System.Data.DataColumn columnCADADKA_UGU_YAR_DALABKA;
            
            private global::System.Data.DataColumn columnNOOCA;
            
            private global::System.Data.DataColumn columnGADAHA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SearchProductDataTable() {
                this.TableName = "SearchProduct";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SearchProductDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SearchProductDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RAQMKAColumn {
                get {
                    return this.columnRAQMKA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CALAAMADColumn {
                get {
                    return this.columnCALAAMAD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAGACAColumn {
                get {
                    return this.columnMAGACA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FAAHFAAHINColumn {
                get {
                    return this.columnFAAHFAAHIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QIIMHAColumn {
                get {
                    return this.columnQIIMHA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LAGADAAYOColumn {
                get {
                    return this.columnLAGADAAYO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn XADKA_DALABKAColumn {
                get {
                    return this.columnXADKA_DALABKA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn XADKA_BUUXINTAColumn {
                get {
                    return this.columnXADKA_BUUXINTA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CADADKA_XABADAColumn {
                get {
                    return this.columnCADADKA_XABADA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QIIMA_DHIMISColumn {
                get {
                    return this.columnQIIMA_DHIMIS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CADADKA_UGU_YAR_DALABKAColumn {
                get {
                    return this.columnCADADKA_UGU_YAR_DALABKA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NOOCAColumn {
                get {
                    return this.columnNOOCA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GADAHAColumn {
                get {
                    return this.columnGADAHA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SearchProductRow this[int index] {
                get {
                    return ((SearchProductRow)(this.Rows[index]));
                }
            }
            
            public event SearchProductRowChangeEventHandler SearchProductRowChanging;
            
            public event SearchProductRowChangeEventHandler SearchProductRowChanged;
            
            public event SearchProductRowChangeEventHandler SearchProductRowDeleting;
            
            public event SearchProductRowChangeEventHandler SearchProductRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSearchProductRow(SearchProductRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SearchProductRow AddSearchProductRow(string CALAAMAD, string MAGACA, string FAAHFAAHIN, decimal QIIMHA, decimal LAGADAAYO, short XADKA_DALABKA, int XADKA_BUUXINTA, string CADADKA_XABADA, bool QIIMA_DHIMIS, short CADADKA_UGU_YAR_DALABKA, string NOOCA, int GADAHA) {
                SearchProductRow rowSearchProductRow = ((SearchProductRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CALAAMAD,
                        MAGACA,
                        FAAHFAAHIN,
                        QIIMHA,
                        LAGADAAYO,
                        XADKA_DALABKA,
                        XADKA_BUUXINTA,
                        CADADKA_XABADA,
                        QIIMA_DHIMIS,
                        CADADKA_UGU_YAR_DALABKA,
                        NOOCA,
                        GADAHA};
                rowSearchProductRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSearchProductRow);
                return rowSearchProductRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SearchProductRow FindByRAQMKA(int RAQMKA) {
                return ((SearchProductRow)(this.Rows.Find(new object[] {
                            RAQMKA})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SearchProductDataTable cln = ((SearchProductDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SearchProductDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRAQMKA = base.Columns["RAQMKA"];
                this.columnCALAAMAD = base.Columns["CALAAMAD"];
                this.columnMAGACA = base.Columns["MAGACA"];
                this.columnFAAHFAAHIN = base.Columns["FAAHFAAHIN"];
                this.columnQIIMHA = base.Columns["QIIMHA"];
                this.columnLAGADAAYO = base.Columns["LAGADAAYO"];
                this.columnXADKA_DALABKA = base.Columns["XADKA DALABKA"];
                this.columnXADKA_BUUXINTA = base.Columns["XADKA BUUXINTA"];
                this.columnCADADKA_XABADA = base.Columns["CADADKA XABADA"];
                this.columnQIIMA_DHIMIS = base.Columns["QIIMA DHIMIS"];
                this.columnCADADKA_UGU_YAR_DALABKA = base.Columns["CADADKA UGU YAR DALABKA"];
                this.columnNOOCA = base.Columns["NOOCA"];
                this.columnGADAHA = base.Columns["GADAHA"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRAQMKA = new global::System.Data.DataColumn("RAQMKA", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRAQMKA);
                this.columnCALAAMAD = new global::System.Data.DataColumn("CALAAMAD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCALAAMAD);
                this.columnMAGACA = new global::System.Data.DataColumn("MAGACA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAGACA);
                this.columnFAAHFAAHIN = new global::System.Data.DataColumn("FAAHFAAHIN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFAAHFAAHIN);
                this.columnQIIMHA = new global::System.Data.DataColumn("QIIMHA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQIIMHA);
                this.columnLAGADAAYO = new global::System.Data.DataColumn("LAGADAAYO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAGADAAYO);
                this.columnXADKA_DALABKA = new global::System.Data.DataColumn("XADKA DALABKA", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXADKA_DALABKA);
                this.columnXADKA_BUUXINTA = new global::System.Data.DataColumn("XADKA BUUXINTA", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXADKA_BUUXINTA);
                this.columnCADADKA_XABADA = new global::System.Data.DataColumn("CADADKA XABADA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCADADKA_XABADA);
                this.columnQIIMA_DHIMIS = new global::System.Data.DataColumn("QIIMA DHIMIS", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQIIMA_DHIMIS);
                this.columnCADADKA_UGU_YAR_DALABKA = new global::System.Data.DataColumn("CADADKA UGU YAR DALABKA", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCADADKA_UGU_YAR_DALABKA);
                this.columnNOOCA = new global::System.Data.DataColumn("NOOCA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOOCA);
                this.columnGADAHA = new global::System.Data.DataColumn("GADAHA", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGADAHA);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRAQMKA}, true));
                this.columnRAQMKA.AutoIncrement = true;
                this.columnRAQMKA.AllowDBNull = false;
                this.columnRAQMKA.ReadOnly = true;
                this.columnRAQMKA.Unique = true;
                this.columnCALAAMAD.MaxLength = 25;
                this.columnMAGACA.MaxLength = 50;
                this.columnFAAHFAAHIN.MaxLength = 1073741823;
                this.columnQIIMHA.ReadOnly = true;
                this.columnLAGADAAYO.ReadOnly = true;
                this.columnXADKA_DALABKA.ReadOnly = true;
                this.columnXADKA_BUUXINTA.ReadOnly = true;
                this.columnCADADKA_XABADA.MaxLength = 50;
                this.columnCADADKA_UGU_YAR_DALABKA.ReadOnly = true;
                this.columnNOOCA.MaxLength = 50;
                this.columnGADAHA.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SearchProductRow NewSearchProductRow() {
                return ((SearchProductRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SearchProductRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SearchProductRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SearchProductRowChanged != null)) {
                    this.SearchProductRowChanged(this, new SearchProductRowChangeEvent(((SearchProductRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SearchProductRowChanging != null)) {
                    this.SearchProductRowChanging(this, new SearchProductRowChangeEvent(((SearchProductRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SearchProductRowDeleted != null)) {
                    this.SearchProductRowDeleted(this, new SearchProductRowChangeEvent(((SearchProductRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SearchProductRowDeleting != null)) {
                    this.SearchProductRowDeleting(this, new SearchProductRowChangeEvent(((SearchProductRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSearchProductRow(SearchProductRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NorthwindSQLDataSet ds = new NorthwindSQLDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SearchProductDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SearchUsersDataTable : global::System.Data.TypedTableBase<SearchUsersRow> {
            
            private global::System.Data.DataColumn columnMAGACA_ADEEGSADAHA;
            
            private global::System.Data.DataColumn columnMAGACA_OO_DHAN;
            
            private global::System.Data.DataColumn columnERAYGA_SIRTA_AH;
            
            private global::System.Data.DataColumn columnNOOCA_ADEEGSADAHA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SearchUsersDataTable() {
                this.TableName = "SearchUsers";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SearchUsersDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SearchUsersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAGACA_ADEEGSADAHAColumn {
                get {
                    return this.columnMAGACA_ADEEGSADAHA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAGACA_OO_DHANColumn {
                get {
                    return this.columnMAGACA_OO_DHAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ERAYGA_SIRTA_AHColumn {
                get {
                    return this.columnERAYGA_SIRTA_AH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NOOCA_ADEEGSADAHAColumn {
                get {
                    return this.columnNOOCA_ADEEGSADAHA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SearchUsersRow this[int index] {
                get {
                    return ((SearchUsersRow)(this.Rows[index]));
                }
            }
            
            public event SearchUsersRowChangeEventHandler SearchUsersRowChanging;
            
            public event SearchUsersRowChangeEventHandler SearchUsersRowChanged;
            
            public event SearchUsersRowChangeEventHandler SearchUsersRowDeleting;
            
            public event SearchUsersRowChangeEventHandler SearchUsersRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSearchUsersRow(SearchUsersRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SearchUsersRow AddSearchUsersRow(string MAGACA_ADEEGSADAHA, string MAGACA_OO_DHAN, string ERAYGA_SIRTA_AH, string NOOCA_ADEEGSADAHA) {
                SearchUsersRow rowSearchUsersRow = ((SearchUsersRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MAGACA_ADEEGSADAHA,
                        MAGACA_OO_DHAN,
                        ERAYGA_SIRTA_AH,
                        NOOCA_ADEEGSADAHA};
                rowSearchUsersRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSearchUsersRow);
                return rowSearchUsersRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SearchUsersRow FindByMAGACA_ADEEGSADAHA(string MAGACA_ADEEGSADAHA) {
                return ((SearchUsersRow)(this.Rows.Find(new object[] {
                            MAGACA_ADEEGSADAHA})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SearchUsersDataTable cln = ((SearchUsersDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SearchUsersDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMAGACA_ADEEGSADAHA = base.Columns["MAGACA ADEEGSADAHA"];
                this.columnMAGACA_OO_DHAN = base.Columns["MAGACA OO DHAN"];
                this.columnERAYGA_SIRTA_AH = base.Columns["ERAYGA SIRTA AH"];
                this.columnNOOCA_ADEEGSADAHA = base.Columns["NOOCA ADEEGSADAHA"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMAGACA_ADEEGSADAHA = new global::System.Data.DataColumn("MAGACA ADEEGSADAHA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAGACA_ADEEGSADAHA);
                this.columnMAGACA_OO_DHAN = new global::System.Data.DataColumn("MAGACA OO DHAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAGACA_OO_DHAN);
                this.columnERAYGA_SIRTA_AH = new global::System.Data.DataColumn("ERAYGA SIRTA AH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnERAYGA_SIRTA_AH);
                this.columnNOOCA_ADEEGSADAHA = new global::System.Data.DataColumn("NOOCA ADEEGSADAHA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOOCA_ADEEGSADAHA);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMAGACA_ADEEGSADAHA}, true));
                this.columnMAGACA_ADEEGSADAHA.AllowDBNull = false;
                this.columnMAGACA_ADEEGSADAHA.Unique = true;
                this.columnMAGACA_ADEEGSADAHA.MaxLength = 50;
                this.columnMAGACA_OO_DHAN.MaxLength = 50;
                this.columnERAYGA_SIRTA_AH.MaxLength = 50;
                this.columnNOOCA_ADEEGSADAHA.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SearchUsersRow NewSearchUsersRow() {
                return ((SearchUsersRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SearchUsersRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SearchUsersRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SearchUsersRowChanged != null)) {
                    this.SearchUsersRowChanged(this, new SearchUsersRowChangeEvent(((SearchUsersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SearchUsersRowChanging != null)) {
                    this.SearchUsersRowChanging(this, new SearchUsersRowChangeEvent(((SearchUsersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SearchUsersRowDeleted != null)) {
                    this.SearchUsersRowDeleted(this, new SearchUsersRowChangeEvent(((SearchUsersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SearchUsersRowDeleting != null)) {
                    this.SearchUsersRowDeleting(this, new SearchUsersRowChangeEvent(((SearchUsersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSearchUsersRow(SearchUsersRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NorthwindSQLDataSet ds = new NorthwindSQLDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SearchUsersDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SearchUsers2DataTable : global::System.Data.TypedTableBase<SearchUsers2Row> {
            
            private global::System.Data.DataColumn columnMAGACA_ADEEGSADAHA;
            
            private global::System.Data.DataColumn columnMAGACA_OO_DHAN;
            
            private global::System.Data.DataColumn columnERAYGA_SIRTA_AH;
            
            private global::System.Data.DataColumn columnNOOCA_ADEEGSADAHA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SearchUsers2DataTable() {
                this.TableName = "SearchUsers2";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SearchUsers2DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SearchUsers2DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAGACA_ADEEGSADAHAColumn {
                get {
                    return this.columnMAGACA_ADEEGSADAHA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAGACA_OO_DHANColumn {
                get {
                    return this.columnMAGACA_OO_DHAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ERAYGA_SIRTA_AHColumn {
                get {
                    return this.columnERAYGA_SIRTA_AH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NOOCA_ADEEGSADAHAColumn {
                get {
                    return this.columnNOOCA_ADEEGSADAHA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SearchUsers2Row this[int index] {
                get {
                    return ((SearchUsers2Row)(this.Rows[index]));
                }
            }
            
            public event SearchUsers2RowChangeEventHandler SearchUsers2RowChanging;
            
            public event SearchUsers2RowChangeEventHandler SearchUsers2RowChanged;
            
            public event SearchUsers2RowChangeEventHandler SearchUsers2RowDeleting;
            
            public event SearchUsers2RowChangeEventHandler SearchUsers2RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSearchUsers2Row(SearchUsers2Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SearchUsers2Row AddSearchUsers2Row(string MAGACA_ADEEGSADAHA, string MAGACA_OO_DHAN, string ERAYGA_SIRTA_AH, string NOOCA_ADEEGSADAHA) {
                SearchUsers2Row rowSearchUsers2Row = ((SearchUsers2Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MAGACA_ADEEGSADAHA,
                        MAGACA_OO_DHAN,
                        ERAYGA_SIRTA_AH,
                        NOOCA_ADEEGSADAHA};
                rowSearchUsers2Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowSearchUsers2Row);
                return rowSearchUsers2Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SearchUsers2Row FindByMAGACA_ADEEGSADAHA(string MAGACA_ADEEGSADAHA) {
                return ((SearchUsers2Row)(this.Rows.Find(new object[] {
                            MAGACA_ADEEGSADAHA})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SearchUsers2DataTable cln = ((SearchUsers2DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SearchUsers2DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMAGACA_ADEEGSADAHA = base.Columns["MAGACA ADEEGSADAHA"];
                this.columnMAGACA_OO_DHAN = base.Columns["MAGACA OO DHAN"];
                this.columnERAYGA_SIRTA_AH = base.Columns["ERAYGA SIRTA AH"];
                this.columnNOOCA_ADEEGSADAHA = base.Columns["NOOCA ADEEGSADAHA"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMAGACA_ADEEGSADAHA = new global::System.Data.DataColumn("MAGACA ADEEGSADAHA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAGACA_ADEEGSADAHA);
                this.columnMAGACA_OO_DHAN = new global::System.Data.DataColumn("MAGACA OO DHAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAGACA_OO_DHAN);
                this.columnERAYGA_SIRTA_AH = new global::System.Data.DataColumn("ERAYGA SIRTA AH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnERAYGA_SIRTA_AH);
                this.columnNOOCA_ADEEGSADAHA = new global::System.Data.DataColumn("NOOCA ADEEGSADAHA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOOCA_ADEEGSADAHA);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMAGACA_ADEEGSADAHA}, true));
                this.columnMAGACA_ADEEGSADAHA.AllowDBNull = false;
                this.columnMAGACA_ADEEGSADAHA.Unique = true;
                this.columnMAGACA_ADEEGSADAHA.MaxLength = 50;
                this.columnMAGACA_OO_DHAN.MaxLength = 50;
                this.columnERAYGA_SIRTA_AH.MaxLength = 50;
                this.columnNOOCA_ADEEGSADAHA.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SearchUsers2Row NewSearchUsers2Row() {
                return ((SearchUsers2Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SearchUsers2Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SearchUsers2Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SearchUsers2RowChanged != null)) {
                    this.SearchUsers2RowChanged(this, new SearchUsers2RowChangeEvent(((SearchUsers2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SearchUsers2RowChanging != null)) {
                    this.SearchUsers2RowChanging(this, new SearchUsers2RowChangeEvent(((SearchUsers2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SearchUsers2RowDeleted != null)) {
                    this.SearchUsers2RowDeleted(this, new SearchUsers2RowChangeEvent(((SearchUsers2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SearchUsers2RowDeleting != null)) {
                    this.SearchUsers2RowDeleting(this, new SearchUsers2RowChangeEvent(((SearchUsers2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSearchUsers2Row(SearchUsers2Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NorthwindSQLDataSet ds = new NorthwindSQLDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SearchUsers2DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SP_LOGIN2DataTable : global::System.Data.TypedTableBase<SP_LOGIN2Row> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnPWD;
            
            private global::System.Data.DataColumn columnUserType;
            
            private global::System.Data.DataColumn columnFullName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SP_LOGIN2DataTable() {
                this.TableName = "SP_LOGIN2";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SP_LOGIN2DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SP_LOGIN2DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PWDColumn {
                get {
                    return this.columnPWD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserTypeColumn {
                get {
                    return this.columnUserType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FullNameColumn {
                get {
                    return this.columnFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SP_LOGIN2Row this[int index] {
                get {
                    return ((SP_LOGIN2Row)(this.Rows[index]));
                }
            }
            
            public event SP_LOGIN2RowChangeEventHandler SP_LOGIN2RowChanging;
            
            public event SP_LOGIN2RowChangeEventHandler SP_LOGIN2RowChanged;
            
            public event SP_LOGIN2RowChangeEventHandler SP_LOGIN2RowDeleting;
            
            public event SP_LOGIN2RowChangeEventHandler SP_LOGIN2RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSP_LOGIN2Row(SP_LOGIN2Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SP_LOGIN2Row AddSP_LOGIN2Row(string ID, string PWD, string UserType, string FullName) {
                SP_LOGIN2Row rowSP_LOGIN2Row = ((SP_LOGIN2Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        PWD,
                        UserType,
                        FullName};
                rowSP_LOGIN2Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowSP_LOGIN2Row);
                return rowSP_LOGIN2Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SP_LOGIN2Row FindByID(string ID) {
                return ((SP_LOGIN2Row)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SP_LOGIN2DataTable cln = ((SP_LOGIN2DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SP_LOGIN2DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnPWD = base.Columns["PWD"];
                this.columnUserType = base.Columns["UserType"];
                this.columnFullName = base.Columns["FullName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnPWD = new global::System.Data.DataColumn("PWD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPWD);
                this.columnUserType = new global::System.Data.DataColumn("UserType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserType);
                this.columnFullName = new global::System.Data.DataColumn("FullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnID.MaxLength = 50;
                this.columnPWD.MaxLength = 50;
                this.columnUserType.MaxLength = 50;
                this.columnFullName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SP_LOGIN2Row NewSP_LOGIN2Row() {
                return ((SP_LOGIN2Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SP_LOGIN2Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SP_LOGIN2Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SP_LOGIN2RowChanged != null)) {
                    this.SP_LOGIN2RowChanged(this, new SP_LOGIN2RowChangeEvent(((SP_LOGIN2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SP_LOGIN2RowChanging != null)) {
                    this.SP_LOGIN2RowChanging(this, new SP_LOGIN2RowChangeEvent(((SP_LOGIN2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SP_LOGIN2RowDeleted != null)) {
                    this.SP_LOGIN2RowDeleted(this, new SP_LOGIN2RowChangeEvent(((SP_LOGIN2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SP_LOGIN2RowDeleting != null)) {
                    this.SP_LOGIN2RowDeleting(this, new SP_LOGIN2RowChangeEvent(((SP_LOGIN2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSP_LOGIN2Row(SP_LOGIN2Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NorthwindSQLDataSet ds = new NorthwindSQLDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SP_LOGIN2DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class VarifyQtyDataTable : global::System.Data.TypedTableBase<VarifyQtyRow> {
            
            private global::System.Data.DataColumn columnProduct_ID;
            
            private global::System.Data.DataColumn columnProduct_Name;
            
            private global::System.Data.DataColumn columnProduct_Code;
            
            private global::System.Data.DataColumn columnQty_Purchased;
            
            private global::System.Data.DataColumn columnQty_Sold;
            
            private global::System.Data.DataColumn columnQty_On_Hold;
            
            private global::System.Data.DataColumn columnQty_On_Hand;
            
            private global::System.Data.DataColumn columnQty_Available;
            
            private global::System.Data.DataColumn columnQty_On_Order;
            
            private global::System.Data.DataColumn columnQty_On_Back_Order;
            
            private global::System.Data.DataColumn columnReorder_Level;
            
            private global::System.Data.DataColumn columnTarget_Level;
            
            private global::System.Data.DataColumn columnQty_Below_Target_Level;
            
            private global::System.Data.DataColumn columnCurrent_Level;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VarifyQtyDataTable() {
                this.TableName = "VarifyQty";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal VarifyQtyDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected VarifyQtyDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Product_IDColumn {
                get {
                    return this.columnProduct_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Product_NameColumn {
                get {
                    return this.columnProduct_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Product_CodeColumn {
                get {
                    return this.columnProduct_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Qty_PurchasedColumn {
                get {
                    return this.columnQty_Purchased;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Qty_SoldColumn {
                get {
                    return this.columnQty_Sold;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Qty_On_HoldColumn {
                get {
                    return this.columnQty_On_Hold;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Qty_On_HandColumn {
                get {
                    return this.columnQty_On_Hand;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Qty_AvailableColumn {
                get {
                    return this.columnQty_Available;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Qty_On_OrderColumn {
                get {
                    return this.columnQty_On_Order;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Qty_On_Back_OrderColumn {
                get {
                    return this.columnQty_On_Back_Order;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Reorder_LevelColumn {
                get {
                    return this.columnReorder_Level;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Target_LevelColumn {
                get {
                    return this.columnTarget_Level;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Qty_Below_Target_LevelColumn {
                get {
                    return this.columnQty_Below_Target_Level;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Current_LevelColumn {
                get {
                    return this.columnCurrent_Level;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VarifyQtyRow this[int index] {
                get {
                    return ((VarifyQtyRow)(this.Rows[index]));
                }
            }
            
            public event VarifyQtyRowChangeEventHandler VarifyQtyRowChanging;
            
            public event VarifyQtyRowChangeEventHandler VarifyQtyRowChanged;
            
            public event VarifyQtyRowChangeEventHandler VarifyQtyRowDeleting;
            
            public event VarifyQtyRowChangeEventHandler VarifyQtyRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddVarifyQtyRow(VarifyQtyRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VarifyQtyRow AddVarifyQtyRow(int Product_ID, string Product_Name, string Product_Code, int Qty_Purchased, int Qty_Sold, int Qty_On_Hold, int Qty_On_Hand, int Qty_Available, decimal Qty_On_Order, decimal Qty_On_Back_Order, short Reorder_Level, int Target_Level, decimal Qty_Below_Target_Level, decimal Current_Level) {
                VarifyQtyRow rowVarifyQtyRow = ((VarifyQtyRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Product_ID,
                        Product_Name,
                        Product_Code,
                        Qty_Purchased,
                        Qty_Sold,
                        Qty_On_Hold,
                        Qty_On_Hand,
                        Qty_Available,
                        Qty_On_Order,
                        Qty_On_Back_Order,
                        Reorder_Level,
                        Target_Level,
                        Qty_Below_Target_Level,
                        Current_Level};
                rowVarifyQtyRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowVarifyQtyRow);
                return rowVarifyQtyRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VarifyQtyRow FindByProduct_ID(int Product_ID) {
                return ((VarifyQtyRow)(this.Rows.Find(new object[] {
                            Product_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                VarifyQtyDataTable cln = ((VarifyQtyDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new VarifyQtyDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProduct_ID = base.Columns["Product ID"];
                this.columnProduct_Name = base.Columns["Product Name"];
                this.columnProduct_Code = base.Columns["Product Code"];
                this.columnQty_Purchased = base.Columns["Qty Purchased"];
                this.columnQty_Sold = base.Columns["Qty Sold"];
                this.columnQty_On_Hold = base.Columns["Qty On Hold"];
                this.columnQty_On_Hand = base.Columns["Qty On Hand"];
                this.columnQty_Available = base.Columns["Qty Available"];
                this.columnQty_On_Order = base.Columns["Qty On Order"];
                this.columnQty_On_Back_Order = base.Columns["Qty On Back Order"];
                this.columnReorder_Level = base.Columns["Reorder Level"];
                this.columnTarget_Level = base.Columns["Target Level"];
                this.columnQty_Below_Target_Level = base.Columns["Qty Below Target Level"];
                this.columnCurrent_Level = base.Columns["Current Level"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProduct_ID = new global::System.Data.DataColumn("Product ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProduct_ID);
                this.columnProduct_Name = new global::System.Data.DataColumn("Product Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProduct_Name);
                this.columnProduct_Code = new global::System.Data.DataColumn("Product Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProduct_Code);
                this.columnQty_Purchased = new global::System.Data.DataColumn("Qty Purchased", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty_Purchased);
                this.columnQty_Sold = new global::System.Data.DataColumn("Qty Sold", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty_Sold);
                this.columnQty_On_Hold = new global::System.Data.DataColumn("Qty On Hold", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty_On_Hold);
                this.columnQty_On_Hand = new global::System.Data.DataColumn("Qty On Hand", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty_On_Hand);
                this.columnQty_Available = new global::System.Data.DataColumn("Qty Available", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty_Available);
                this.columnQty_On_Order = new global::System.Data.DataColumn("Qty On Order", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty_On_Order);
                this.columnQty_On_Back_Order = new global::System.Data.DataColumn("Qty On Back Order", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty_On_Back_Order);
                this.columnReorder_Level = new global::System.Data.DataColumn("Reorder Level", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReorder_Level);
                this.columnTarget_Level = new global::System.Data.DataColumn("Target Level", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTarget_Level);
                this.columnQty_Below_Target_Level = new global::System.Data.DataColumn("Qty Below Target Level", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty_Below_Target_Level);
                this.columnCurrent_Level = new global::System.Data.DataColumn("Current Level", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrent_Level);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnProduct_ID}, true));
                this.columnProduct_ID.AllowDBNull = false;
                this.columnProduct_ID.Unique = true;
                this.columnProduct_Name.MaxLength = 50;
                this.columnProduct_Code.MaxLength = 25;
                this.columnQty_Purchased.ReadOnly = true;
                this.columnQty_Sold.ReadOnly = true;
                this.columnQty_On_Hold.ReadOnly = true;
                this.columnQty_On_Hand.ReadOnly = true;
                this.columnQty_Available.ReadOnly = true;
                this.columnQty_On_Order.ReadOnly = true;
                this.columnQty_On_Back_Order.ReadOnly = true;
                this.columnQty_Below_Target_Level.ReadOnly = true;
                this.columnCurrent_Level.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VarifyQtyRow NewVarifyQtyRow() {
                return ((VarifyQtyRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new VarifyQtyRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(VarifyQtyRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.VarifyQtyRowChanged != null)) {
                    this.VarifyQtyRowChanged(this, new VarifyQtyRowChangeEvent(((VarifyQtyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.VarifyQtyRowChanging != null)) {
                    this.VarifyQtyRowChanging(this, new VarifyQtyRowChangeEvent(((VarifyQtyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.VarifyQtyRowDeleted != null)) {
                    this.VarifyQtyRowDeleted(this, new VarifyQtyRowChangeEvent(((VarifyQtyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.VarifyQtyRowDeleting != null)) {
                    this.VarifyQtyRowDeleting(this, new VarifyQtyRowChangeEvent(((VarifyQtyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveVarifyQtyRow(VarifyQtyRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NorthwindSQLDataSet ds = new NorthwindSQLDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "VarifyQtyDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class VerifyProductIDDataTable : global::System.Data.TypedTableBase<VerifyProductIDRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnProduct_Code;
            
            private global::System.Data.DataColumn columnProduct_Name;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnStandard_Cost;
            
            private global::System.Data.DataColumn columnList_Price;
            
            private global::System.Data.DataColumn columnReorder_Level;
            
            private global::System.Data.DataColumn columnTarget_Level;
            
            private global::System.Data.DataColumn columnQuantity_Per_Unit;
            
            private global::System.Data.DataColumn columnDiscontinued;
            
            private global::System.Data.DataColumn columnMinimum_Reorder_Quantity;
            
            private global::System.Data.DataColumn columnCategory;
            
            private global::System.Data.DataColumn columnSupplier_IDs;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VerifyProductIDDataTable() {
                this.TableName = "VerifyProductID";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal VerifyProductIDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected VerifyProductIDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Product_CodeColumn {
                get {
                    return this.columnProduct_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Product_NameColumn {
                get {
                    return this.columnProduct_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Standard_CostColumn {
                get {
                    return this.columnStandard_Cost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn List_PriceColumn {
                get {
                    return this.columnList_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Reorder_LevelColumn {
                get {
                    return this.columnReorder_Level;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Target_LevelColumn {
                get {
                    return this.columnTarget_Level;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Quantity_Per_UnitColumn {
                get {
                    return this.columnQuantity_Per_Unit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscontinuedColumn {
                get {
                    return this.columnDiscontinued;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Minimum_Reorder_QuantityColumn {
                get {
                    return this.columnMinimum_Reorder_Quantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CategoryColumn {
                get {
                    return this.columnCategory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Supplier_IDsColumn {
                get {
                    return this.columnSupplier_IDs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VerifyProductIDRow this[int index] {
                get {
                    return ((VerifyProductIDRow)(this.Rows[index]));
                }
            }
            
            public event VerifyProductIDRowChangeEventHandler VerifyProductIDRowChanging;
            
            public event VerifyProductIDRowChangeEventHandler VerifyProductIDRowChanged;
            
            public event VerifyProductIDRowChangeEventHandler VerifyProductIDRowDeleting;
            
            public event VerifyProductIDRowChangeEventHandler VerifyProductIDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddVerifyProductIDRow(VerifyProductIDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VerifyProductIDRow AddVerifyProductIDRow(string Product_Code, string Product_Name, string Description, decimal Standard_Cost, decimal List_Price, short Reorder_Level, int Target_Level, string Quantity_Per_Unit, bool Discontinued, short Minimum_Reorder_Quantity, string Category, int Supplier_IDs) {
                VerifyProductIDRow rowVerifyProductIDRow = ((VerifyProductIDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Product_Code,
                        Product_Name,
                        Description,
                        Standard_Cost,
                        List_Price,
                        Reorder_Level,
                        Target_Level,
                        Quantity_Per_Unit,
                        Discontinued,
                        Minimum_Reorder_Quantity,
                        Category,
                        Supplier_IDs};
                rowVerifyProductIDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowVerifyProductIDRow);
                return rowVerifyProductIDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VerifyProductIDRow FindByID(int ID) {
                return ((VerifyProductIDRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                VerifyProductIDDataTable cln = ((VerifyProductIDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new VerifyProductIDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnProduct_Code = base.Columns["Product Code"];
                this.columnProduct_Name = base.Columns["Product Name"];
                this.columnDescription = base.Columns["Description"];
                this.columnStandard_Cost = base.Columns["Standard Cost"];
                this.columnList_Price = base.Columns["List Price"];
                this.columnReorder_Level = base.Columns["Reorder Level"];
                this.columnTarget_Level = base.Columns["Target Level"];
                this.columnQuantity_Per_Unit = base.Columns["Quantity Per Unit"];
                this.columnDiscontinued = base.Columns["Discontinued"];
                this.columnMinimum_Reorder_Quantity = base.Columns["Minimum Reorder Quantity"];
                this.columnCategory = base.Columns["Category"];
                this.columnSupplier_IDs = base.Columns["Supplier IDs"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnProduct_Code = new global::System.Data.DataColumn("Product Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProduct_Code);
                this.columnProduct_Name = new global::System.Data.DataColumn("Product Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProduct_Name);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnStandard_Cost = new global::System.Data.DataColumn("Standard Cost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStandard_Cost);
                this.columnList_Price = new global::System.Data.DataColumn("List Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnList_Price);
                this.columnReorder_Level = new global::System.Data.DataColumn("Reorder Level", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReorder_Level);
                this.columnTarget_Level = new global::System.Data.DataColumn("Target Level", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTarget_Level);
                this.columnQuantity_Per_Unit = new global::System.Data.DataColumn("Quantity Per Unit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity_Per_Unit);
                this.columnDiscontinued = new global::System.Data.DataColumn("Discontinued", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscontinued);
                this.columnMinimum_Reorder_Quantity = new global::System.Data.DataColumn("Minimum Reorder Quantity", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMinimum_Reorder_Quantity);
                this.columnCategory = new global::System.Data.DataColumn("Category", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategory);
                this.columnSupplier_IDs = new global::System.Data.DataColumn("Supplier IDs", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplier_IDs);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnProduct_Code.MaxLength = 25;
                this.columnProduct_Name.MaxLength = 50;
                this.columnDescription.MaxLength = 1073741823;
                this.columnQuantity_Per_Unit.MaxLength = 50;
                this.columnCategory.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VerifyProductIDRow NewVerifyProductIDRow() {
                return ((VerifyProductIDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new VerifyProductIDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(VerifyProductIDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.VerifyProductIDRowChanged != null)) {
                    this.VerifyProductIDRowChanged(this, new VerifyProductIDRowChangeEvent(((VerifyProductIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.VerifyProductIDRowChanging != null)) {
                    this.VerifyProductIDRowChanging(this, new VerifyProductIDRowChangeEvent(((VerifyProductIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.VerifyProductIDRowDeleted != null)) {
                    this.VerifyProductIDRowDeleted(this, new VerifyProductIDRowChangeEvent(((VerifyProductIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.VerifyProductIDRowDeleting != null)) {
                    this.VerifyProductIDRowDeleting(this, new VerifyProductIDRowChangeEvent(((VerifyProductIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveVerifyProductIDRow(VerifyProductIDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NorthwindSQLDataSet ds = new NorthwindSQLDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "VerifyProductIDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GET_ALL_CUSTOMERSRow : global::System.Data.DataRow {
            
            private GET_ALL_CUSTOMERSDataTable tableGET_ALL_CUSTOMERS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GET_ALL_CUSTOMERSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGET_ALL_CUSTOMERS = ((GET_ALL_CUSTOMERSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableGET_ALL_CUSTOMERS.IDColumn]));
                }
                set {
                    this[this.tableGET_ALL_CUSTOMERS.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIRKADA {
                get {
                    try {
                        return ((string)(this[this.tableGET_ALL_CUSTOMERS.SHIRKADAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SHIRKADA\' in table \'GET_ALL_CUSTOMERS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGET_ALL_CUSTOMERS.SHIRKADAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAGACA_KUWAAD {
                get {
                    try {
                        return ((string)(this[this.tableGET_ALL_CUSTOMERS.MAGACA_KUWAADColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAGACA KUWAAD\' in table \'GET_ALL_CUSTOMERS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGET_ALL_CUSTOMERS.MAGACA_KUWAADColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAGACA_LABAAD {
                get {
                    try {
                        return ((string)(this[this.tableGET_ALL_CUSTOMERS.MAGACA_LABAADColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAGACA LABAAD\' in table \'GET_ALL_CUSTOMERS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGET_ALL_CUSTOMERS.MAGACA_LABAADColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMAILKA {
                get {
                    try {
                        return ((string)(this[this.tableGET_ALL_CUSTOMERS.EMAILKAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMAILKA\' in table \'GET_ALL_CUSTOMERS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGET_ALL_CUSTOMERS.EMAILKAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TELKA {
                get {
                    try {
                        return ((string)(this[this.tableGET_ALL_CUSTOMERS.TELKAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TELKA\' in table \'GET_ALL_CUSTOMERS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGET_ALL_CUSTOMERS.TELKAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Adrreska {
                get {
                    try {
                        return ((string)(this[this.tableGET_ALL_CUSTOMERS.AdrreskaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Adrreska\' in table \'GET_ALL_CUSTOMERS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGET_ALL_CUSTOMERS.AdrreskaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NOTES {
                get {
                    try {
                        return ((string)(this[this.tableGET_ALL_CUSTOMERS.NOTESColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NOTES\' in table \'GET_ALL_CUSTOMERS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGET_ALL_CUSTOMERS.NOTESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSHIRKADANull() {
                return this.IsNull(this.tableGET_ALL_CUSTOMERS.SHIRKADAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSHIRKADANull() {
                this[this.tableGET_ALL_CUSTOMERS.SHIRKADAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAGACA_KUWAADNull() {
                return this.IsNull(this.tableGET_ALL_CUSTOMERS.MAGACA_KUWAADColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAGACA_KUWAADNull() {
                this[this.tableGET_ALL_CUSTOMERS.MAGACA_KUWAADColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAGACA_LABAADNull() {
                return this.IsNull(this.tableGET_ALL_CUSTOMERS.MAGACA_LABAADColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAGACA_LABAADNull() {
                this[this.tableGET_ALL_CUSTOMERS.MAGACA_LABAADColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMAILKANull() {
                return this.IsNull(this.tableGET_ALL_CUSTOMERS.EMAILKAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMAILKANull() {
                this[this.tableGET_ALL_CUSTOMERS.EMAILKAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTELKANull() {
                return this.IsNull(this.tableGET_ALL_CUSTOMERS.TELKAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTELKANull() {
                this[this.tableGET_ALL_CUSTOMERS.TELKAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdrreskaNull() {
                return this.IsNull(this.tableGET_ALL_CUSTOMERS.AdrreskaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdrreskaNull() {
                this[this.tableGET_ALL_CUSTOMERS.AdrreskaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNOTESNull() {
                return this.IsNull(this.tableGET_ALL_CUSTOMERS.NOTESColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNOTESNull() {
                this[this.tableGET_ALL_CUSTOMERS.NOTESColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GET_ALL_PRODUCTSRow : global::System.Data.DataRow {
            
            private GET_ALL_PRODUCTSDataTable tableGET_ALL_PRODUCTS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GET_ALL_PRODUCTSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGET_ALL_PRODUCTS = ((GET_ALL_PRODUCTSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RAQMKA {
                get {
                    return ((int)(this[this.tableGET_ALL_PRODUCTS.RAQMKAColumn]));
                }
                set {
                    this[this.tableGET_ALL_PRODUCTS.RAQMKAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CALAAMAD {
                get {
                    try {
                        return ((string)(this[this.tableGET_ALL_PRODUCTS.CALAAMADColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CALAAMAD\' in table \'GET_ALL_PRODUCTS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGET_ALL_PRODUCTS.CALAAMADColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAGACA {
                get {
                    try {
                        return ((string)(this[this.tableGET_ALL_PRODUCTS.MAGACAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAGACA\' in table \'GET_ALL_PRODUCTS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGET_ALL_PRODUCTS.MAGACAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FAAHFAAHIN {
                get {
                    try {
                        return ((string)(this[this.tableGET_ALL_PRODUCTS.FAAHFAAHINColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FAAHFAAHIN\' in table \'GET_ALL_PRODUCTS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGET_ALL_PRODUCTS.FAAHFAAHINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal QIIMHA {
                get {
                    try {
                        return ((decimal)(this[this.tableGET_ALL_PRODUCTS.QIIMHAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QIIMHA\' in table \'GET_ALL_PRODUCTS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGET_ALL_PRODUCTS.QIIMHAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LAGADAAYO {
                get {
                    try {
                        return ((decimal)(this[this.tableGET_ALL_PRODUCTS.LAGADAAYOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LAGADAAYO\' in table \'GET_ALL_PRODUCTS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGET_ALL_PRODUCTS.LAGADAAYOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short XADKA_DALABKA {
                get {
                    try {
                        return ((short)(this[this.tableGET_ALL_PRODUCTS.XADKA_DALABKAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'XADKA DALABKA\' in table \'GET_ALL_PRODUCTS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGET_ALL_PRODUCTS.XADKA_DALABKAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int XADKA_BUUXINTA {
                get {
                    try {
                        return ((int)(this[this.tableGET_ALL_PRODUCTS.XADKA_BUUXINTAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'XADKA BUUXINTA\' in table \'GET_ALL_PRODUCTS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGET_ALL_PRODUCTS.XADKA_BUUXINTAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CADADKA_XABADA {
                get {
                    try {
                        return ((string)(this[this.tableGET_ALL_PRODUCTS.CADADKA_XABADAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CADADKA XABADA\' in table \'GET_ALL_PRODUCTS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGET_ALL_PRODUCTS.CADADKA_XABADAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool QIIMA_DHIMIS {
                get {
                    try {
                        return ((bool)(this[this.tableGET_ALL_PRODUCTS.QIIMA_DHIMISColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QIIMA DHIMIS\' in table \'GET_ALL_PRODUCTS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGET_ALL_PRODUCTS.QIIMA_DHIMISColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short CADADKA_UGU_YAR_DALABKA {
                get {
                    try {
                        return ((short)(this[this.tableGET_ALL_PRODUCTS.CADADKA_UGU_YAR_DALABKAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CADADKA UGU YAR DALABKA\' in table \'GET_ALL_PRODUCTS\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableGET_ALL_PRODUCTS.CADADKA_UGU_YAR_DALABKAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NOOCA {
                get {
                    try {
                        return ((string)(this[this.tableGET_ALL_PRODUCTS.NOOCAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NOOCA\' in table \'GET_ALL_PRODUCTS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGET_ALL_PRODUCTS.NOOCAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GADAHA {
                get {
                    try {
                        return ((int)(this[this.tableGET_ALL_PRODUCTS.GADAHAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GADAHA\' in table \'GET_ALL_PRODUCTS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGET_ALL_PRODUCTS.GADAHAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCALAAMADNull() {
                return this.IsNull(this.tableGET_ALL_PRODUCTS.CALAAMADColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCALAAMADNull() {
                this[this.tableGET_ALL_PRODUCTS.CALAAMADColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAGACANull() {
                return this.IsNull(this.tableGET_ALL_PRODUCTS.MAGACAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAGACANull() {
                this[this.tableGET_ALL_PRODUCTS.MAGACAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFAAHFAAHINNull() {
                return this.IsNull(this.tableGET_ALL_PRODUCTS.FAAHFAAHINColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFAAHFAAHINNull() {
                this[this.tableGET_ALL_PRODUCTS.FAAHFAAHINColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQIIMHANull() {
                return this.IsNull(this.tableGET_ALL_PRODUCTS.QIIMHAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQIIMHANull() {
                this[this.tableGET_ALL_PRODUCTS.QIIMHAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLAGADAAYONull() {
                return this.IsNull(this.tableGET_ALL_PRODUCTS.LAGADAAYOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLAGADAAYONull() {
                this[this.tableGET_ALL_PRODUCTS.LAGADAAYOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsXADKA_DALABKANull() {
                return this.IsNull(this.tableGET_ALL_PRODUCTS.XADKA_DALABKAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetXADKA_DALABKANull() {
                this[this.tableGET_ALL_PRODUCTS.XADKA_DALABKAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsXADKA_BUUXINTANull() {
                return this.IsNull(this.tableGET_ALL_PRODUCTS.XADKA_BUUXINTAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetXADKA_BUUXINTANull() {
                this[this.tableGET_ALL_PRODUCTS.XADKA_BUUXINTAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCADADKA_XABADANull() {
                return this.IsNull(this.tableGET_ALL_PRODUCTS.CADADKA_XABADAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCADADKA_XABADANull() {
                this[this.tableGET_ALL_PRODUCTS.CADADKA_XABADAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQIIMA_DHIMISNull() {
                return this.IsNull(this.tableGET_ALL_PRODUCTS.QIIMA_DHIMISColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQIIMA_DHIMISNull() {
                this[this.tableGET_ALL_PRODUCTS.QIIMA_DHIMISColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCADADKA_UGU_YAR_DALABKANull() {
                return this.IsNull(this.tableGET_ALL_PRODUCTS.CADADKA_UGU_YAR_DALABKAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCADADKA_UGU_YAR_DALABKANull() {
                this[this.tableGET_ALL_PRODUCTS.CADADKA_UGU_YAR_DALABKAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNOOCANull() {
                return this.IsNull(this.tableGET_ALL_PRODUCTS.NOOCAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNOOCANull() {
                this[this.tableGET_ALL_PRODUCTS.NOOCAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGADAHANull() {
                return this.IsNull(this.tableGET_ALL_PRODUCTS.GADAHAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGADAHANull() {
                this[this.tableGET_ALL_PRODUCTS.GADAHAColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GET_ALL_SuppliersRow : global::System.Data.DataRow {
            
            private GET_ALL_SuppliersDataTable tableGET_ALL_Suppliers;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GET_ALL_SuppliersRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGET_ALL_Suppliers = ((GET_ALL_SuppliersDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableGET_ALL_Suppliers.IDColumn]));
                }
                set {
                    this[this.tableGET_ALL_Suppliers.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Company {
                get {
                    try {
                        return ((string)(this[this.tableGET_ALL_Suppliers.CompanyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Company\' in table \'GET_ALL_Suppliers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGET_ALL_Suppliers.CompanyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyNull() {
                return this.IsNull(this.tableGET_ALL_Suppliers.CompanyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyNull() {
                this[this.tableGET_ALL_Suppliers.CompanyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GET_ALL_Suppliers2Row : global::System.Data.DataRow {
            
            private GET_ALL_Suppliers2DataTable tableGET_ALL_Suppliers2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GET_ALL_Suppliers2Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGET_ALL_Suppliers2 = ((GET_ALL_Suppliers2DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableGET_ALL_Suppliers2.IDColumn]));
                }
                set {
                    this[this.tableGET_ALL_Suppliers2.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Company {
                get {
                    try {
                        return ((string)(this[this.tableGET_ALL_Suppliers2.CompanyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Company\' in table \'GET_ALL_Suppliers2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGET_ALL_Suppliers2.CompanyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string First_Name {
                get {
                    try {
                        return ((string)(this[this.tableGET_ALL_Suppliers2.First_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'First Name\' in table \'GET_ALL_Suppliers2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGET_ALL_Suppliers2.First_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Last_Name {
                get {
                    try {
                        return ((string)(this[this.tableGET_ALL_Suppliers2.Last_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Last Name\' in table \'GET_ALL_Suppliers2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGET_ALL_Suppliers2.Last_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mobile_Phone {
                get {
                    try {
                        return ((string)(this[this.tableGET_ALL_Suppliers2.Mobile_PhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mobile Phone\' in table \'GET_ALL_Suppliers2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGET_ALL_Suppliers2.Mobile_PhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _E_mail_Address {
                get {
                    try {
                        return ((string)(this[this.tableGET_ALL_Suppliers2._E_mail_AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'E-mail Address\' in table \'GET_ALL_Suppliers2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGET_ALL_Suppliers2._E_mail_AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Notes {
                get {
                    try {
                        return ((string)(this[this.tableGET_ALL_Suppliers2.NotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Notes\' in table \'GET_ALL_Suppliers2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGET_ALL_Suppliers2.NotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyNull() {
                return this.IsNull(this.tableGET_ALL_Suppliers2.CompanyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyNull() {
                this[this.tableGET_ALL_Suppliers2.CompanyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFirst_NameNull() {
                return this.IsNull(this.tableGET_ALL_Suppliers2.First_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFirst_NameNull() {
                this[this.tableGET_ALL_Suppliers2.First_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLast_NameNull() {
                return this.IsNull(this.tableGET_ALL_Suppliers2.Last_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLast_NameNull() {
                this[this.tableGET_ALL_Suppliers2.Last_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMobile_PhoneNull() {
                return this.IsNull(this.tableGET_ALL_Suppliers2.Mobile_PhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMobile_PhoneNull() {
                this[this.tableGET_ALL_Suppliers2.Mobile_PhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_E_mail_AddressNull() {
                return this.IsNull(this.tableGET_ALL_Suppliers2._E_mail_AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_E_mail_AddressNull() {
                this[this.tableGET_ALL_Suppliers2._E_mail_AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNotesNull() {
                return this.IsNull(this.tableGET_ALL_Suppliers2.NotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNotesNull() {
                this[this.tableGET_ALL_Suppliers2.NotesColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GET_LAST_ORDER_FOR_PRINTRow : global::System.Data.DataRow {
            
            private GET_LAST_ORDER_FOR_PRINTDataTable tableGET_LAST_ORDER_FOR_PRINT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GET_LAST_ORDER_FOR_PRINTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGET_LAST_ORDER_FOR_PRINT = ((GET_LAST_ORDER_FOR_PRINTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Column1 {
                get {
                    try {
                        return ((int)(this[this.tableGET_LAST_ORDER_FOR_PRINT.Column1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Column1\' in table \'GET_LAST_ORDER_FOR_PRINT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGET_LAST_ORDER_FOR_PRINT.Column1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsColumn1Null() {
                return this.IsNull(this.tableGET_LAST_ORDER_FOR_PRINT.Column1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetColumn1Null() {
                this[this.tableGET_LAST_ORDER_FOR_PRINT.Column1Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GET_LAST_ORDER_IDRow : global::System.Data.DataRow {
            
            private GET_LAST_ORDER_IDDataTable tableGET_LAST_ORDER_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GET_LAST_ORDER_IDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGET_LAST_ORDER_ID = ((GET_LAST_ORDER_IDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Column1 {
                get {
                    try {
                        return ((int)(this[this.tableGET_LAST_ORDER_ID.Column1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Column1\' in table \'GET_LAST_ORDER_ID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGET_LAST_ORDER_ID.Column1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsColumn1Null() {
                return this.IsNull(this.tableGET_LAST_ORDER_ID.Column1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetColumn1Null() {
                this[this.tableGET_LAST_ORDER_ID.Column1Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GET_LAST_PurchaseORDER_IDRow : global::System.Data.DataRow {
            
            private GET_LAST_PurchaseORDER_IDDataTable tableGET_LAST_PurchaseORDER_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GET_LAST_PurchaseORDER_IDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGET_LAST_PurchaseORDER_ID = ((GET_LAST_PurchaseORDER_IDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Column1 {
                get {
                    try {
                        return ((int)(this[this.tableGET_LAST_PurchaseORDER_ID.Column1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Column1\' in table \'GET_LAST_PurchaseORDER_ID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGET_LAST_PurchaseORDER_ID.Column1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsColumn1Null() {
                return this.IsNull(this.tableGET_LAST_PurchaseORDER_ID.Column1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetColumn1Null() {
                this[this.tableGET_LAST_PurchaseORDER_ID.Column1Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GET_LAST_Transaction_IDRow : global::System.Data.DataRow {
            
            private GET_LAST_Transaction_IDDataTable tableGET_LAST_Transaction_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GET_LAST_Transaction_IDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGET_LAST_Transaction_ID = ((GET_LAST_Transaction_IDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Column1 {
                get {
                    try {
                        return ((int)(this[this.tableGET_LAST_Transaction_ID.Column1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Column1\' in table \'GET_LAST_Transaction_ID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGET_LAST_Transaction_ID.Column1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsColumn1Null() {
                return this.IsNull(this.tableGET_LAST_Transaction_ID.Column1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetColumn1Null() {
                this[this.tableGET_LAST_Transaction_ID.Column1Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GET_SINGLE_PRODUCTRow : global::System.Data.DataRow {
            
            private GET_SINGLE_PRODUCTDataTable tableGET_SINGLE_PRODUCT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GET_SINGLE_PRODUCTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGET_SINGLE_PRODUCT = ((GET_SINGLE_PRODUCTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableGET_SINGLE_PRODUCT.IDColumn]));
                }
                set {
                    this[this.tableGET_SINGLE_PRODUCT.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Product_Code {
                get {
                    try {
                        return ((string)(this[this.tableGET_SINGLE_PRODUCT.Product_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Product Code\' in table \'GET_SINGLE_PRODUCT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGET_SINGLE_PRODUCT.Product_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Product_Name {
                get {
                    try {
                        return ((string)(this[this.tableGET_SINGLE_PRODUCT.Product_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Product Name\' in table \'GET_SINGLE_PRODUCT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGET_SINGLE_PRODUCT.Product_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableGET_SINGLE_PRODUCT.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'GET_SINGLE_PRODUCT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGET_SINGLE_PRODUCT.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Standard_Cost {
                get {
                    try {
                        return ((decimal)(this[this.tableGET_SINGLE_PRODUCT.Standard_CostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Standard Cost\' in table \'GET_SINGLE_PRODUCT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGET_SINGLE_PRODUCT.Standard_CostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal List_Price {
                get {
                    try {
                        return ((decimal)(this[this.tableGET_SINGLE_PRODUCT.List_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'List Price\' in table \'GET_SINGLE_PRODUCT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGET_SINGLE_PRODUCT.List_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Reorder_Level {
                get {
                    try {
                        return ((short)(this[this.tableGET_SINGLE_PRODUCT.Reorder_LevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Reorder Level\' in table \'GET_SINGLE_PRODUCT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGET_SINGLE_PRODUCT.Reorder_LevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Target_Level {
                get {
                    try {
                        return ((int)(this[this.tableGET_SINGLE_PRODUCT.Target_LevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Target Level\' in table \'GET_SINGLE_PRODUCT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGET_SINGLE_PRODUCT.Target_LevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Quantity_Per_Unit {
                get {
                    try {
                        return ((string)(this[this.tableGET_SINGLE_PRODUCT.Quantity_Per_UnitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity Per Unit\' in table \'GET_SINGLE_PRODUCT\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableGET_SINGLE_PRODUCT.Quantity_Per_UnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Discontinued {
                get {
                    try {
                        return ((bool)(this[this.tableGET_SINGLE_PRODUCT.DiscontinuedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Discontinued\' in table \'GET_SINGLE_PRODUCT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGET_SINGLE_PRODUCT.DiscontinuedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Minimum_Reorder_Quantity {
                get {
                    try {
                        return ((short)(this[this.tableGET_SINGLE_PRODUCT.Minimum_Reorder_QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Minimum Reorder Quantity\' in table \'GET_SINGLE_PRODUCT\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGET_SINGLE_PRODUCT.Minimum_Reorder_QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Category {
                get {
                    try {
                        return ((string)(this[this.tableGET_SINGLE_PRODUCT.CategoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Category\' in table \'GET_SINGLE_PRODUCT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGET_SINGLE_PRODUCT.CategoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Supplier_IDs {
                get {
                    try {
                        return ((int)(this[this.tableGET_SINGLE_PRODUCT.Supplier_IDsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supplier IDs\' in table \'GET_SINGLE_PRODUCT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGET_SINGLE_PRODUCT.Supplier_IDsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProduct_CodeNull() {
                return this.IsNull(this.tableGET_SINGLE_PRODUCT.Product_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProduct_CodeNull() {
                this[this.tableGET_SINGLE_PRODUCT.Product_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProduct_NameNull() {
                return this.IsNull(this.tableGET_SINGLE_PRODUCT.Product_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProduct_NameNull() {
                this[this.tableGET_SINGLE_PRODUCT.Product_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableGET_SINGLE_PRODUCT.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableGET_SINGLE_PRODUCT.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStandard_CostNull() {
                return this.IsNull(this.tableGET_SINGLE_PRODUCT.Standard_CostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStandard_CostNull() {
                this[this.tableGET_SINGLE_PRODUCT.Standard_CostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsList_PriceNull() {
                return this.IsNull(this.tableGET_SINGLE_PRODUCT.List_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetList_PriceNull() {
                this[this.tableGET_SINGLE_PRODUCT.List_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReorder_LevelNull() {
                return this.IsNull(this.tableGET_SINGLE_PRODUCT.Reorder_LevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReorder_LevelNull() {
                this[this.tableGET_SINGLE_PRODUCT.Reorder_LevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTarget_LevelNull() {
                return this.IsNull(this.tableGET_SINGLE_PRODUCT.Target_LevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTarget_LevelNull() {
                this[this.tableGET_SINGLE_PRODUCT.Target_LevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantity_Per_UnitNull() {
                return this.IsNull(this.tableGET_SINGLE_PRODUCT.Quantity_Per_UnitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantity_Per_UnitNull() {
                this[this.tableGET_SINGLE_PRODUCT.Quantity_Per_UnitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscontinuedNull() {
                return this.IsNull(this.tableGET_SINGLE_PRODUCT.DiscontinuedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscontinuedNull() {
                this[this.tableGET_SINGLE_PRODUCT.DiscontinuedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMinimum_Reorder_QuantityNull() {
                return this.IsNull(this.tableGET_SINGLE_PRODUCT.Minimum_Reorder_QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMinimum_Reorder_QuantityNull() {
                this[this.tableGET_SINGLE_PRODUCT.Minimum_Reorder_QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCategoryNull() {
                return this.IsNull(this.tableGET_SINGLE_PRODUCT.CategoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCategoryNull() {
                this[this.tableGET_SINGLE_PRODUCT.CategoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplier_IDsNull() {
                return this.IsNull(this.tableGET_SINGLE_PRODUCT.Supplier_IDsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplier_IDsNull() {
                this[this.tableGET_SINGLE_PRODUCT.Supplier_IDsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GetOrderDetailsRow : global::System.Data.DataRow {
            
            private GetOrderDetailsDataTable tableGetOrderDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GetOrderDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGetOrderDetails = ((GetOrderDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RAQAMKA_AGABKA {
                get {
                    try {
                        return ((int)(this[this.tableGetOrderDetails.RAQAMKA_AGABKAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RAQAMKA AGABKA\' in table \'GetOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetOrderDetails.RAQAMKA_AGABKAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RAQAMKA_DALABKA {
                get {
                    try {
                        return ((int)(this[this.tableGetOrderDetails.RAQAMKA_DALABKAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RAQAMKA DALABKA\' in table \'GetOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetOrderDetails.RAQAMKA_DALABKAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CADADKA {
                get {
                    try {
                        return ((decimal)(this[this.tableGetOrderDetails.CADADKAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CADADKA\' in table \'GetOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetOrderDetails.CADADKAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal QIIMAHA {
                get {
                    try {
                        return ((decimal)(this[this.tableGetOrderDetails.QIIMAHAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QIIMAHA\' in table \'GetOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetOrderDetails.QIIMAHAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double KADHIMID {
                get {
                    try {
                        return ((double)(this[this.tableGetOrderDetails.KADHIMIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KADHIMID\' in table \'GetOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetOrderDetails.KADHIMIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal QIIMAHA_KULI {
                get {
                    try {
                        return ((decimal)(this[this.tableGetOrderDetails.QIIMAHA_KULIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QIIMAHA KULI\' in table \'GetOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetOrderDetails.QIIMAHA_KULIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal QIIMAHA_UGU_DAMBEEYO {
                get {
                    try {
                        return ((decimal)(this[this.tableGetOrderDetails.QIIMAHA_UGU_DAMBEEYOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QIIMAHA UGU DAMBEEYO\' in table \'GetOrderDetails\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableGetOrderDetails.QIIMAHA_UGU_DAMBEEYOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TAARIIQDA_DALABKA {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGetOrderDetails.TAARIIQDA_DALABKAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TAARIIQDA DALABKA\' in table \'GetOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetOrderDetails.TAARIIQDA_DALABKAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GADAHA {
                get {
                    try {
                        return ((string)(this[this.tableGetOrderDetails.GADAHAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GADAHA\' in table \'GetOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetOrderDetails.GADAHAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RAQAMKA_MACAAMILKA {
                get {
                    return ((int)(this[this.tableGetOrderDetails.RAQAMKA_MACAAMILKAColumn]));
                }
                set {
                    this[this.tableGetOrderDetails.RAQAMKA_MACAAMILKAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAGACA_MACAAMILKA {
                get {
                    try {
                        return ((string)(this[this.tableGetOrderDetails.MAGACA_MACAAMILKAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAGACA MACAAMILKA\' in table \'GetOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetOrderDetails.MAGACA_MACAAMILKAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TELKA {
                get {
                    try {
                        return ((string)(this[this.tableGetOrderDetails.TELKAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TELKA\' in table \'GetOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetOrderDetails.TELKAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMAILKA {
                get {
                    try {
                        return ((string)(this[this.tableGetOrderDetails.EMAILKAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMAILKA\' in table \'GetOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetOrderDetails.EMAILKAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAGACA_AGABKA {
                get {
                    try {
                        return ((string)(this[this.tableGetOrderDetails.MAGACA_AGABKAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAGACA AGABKA\' in table \'GetOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetOrderDetails.MAGACA_AGABKAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRAQAMKA_AGABKANull() {
                return this.IsNull(this.tableGetOrderDetails.RAQAMKA_AGABKAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRAQAMKA_AGABKANull() {
                this[this.tableGetOrderDetails.RAQAMKA_AGABKAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRAQAMKA_DALABKANull() {
                return this.IsNull(this.tableGetOrderDetails.RAQAMKA_DALABKAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRAQAMKA_DALABKANull() {
                this[this.tableGetOrderDetails.RAQAMKA_DALABKAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCADADKANull() {
                return this.IsNull(this.tableGetOrderDetails.CADADKAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCADADKANull() {
                this[this.tableGetOrderDetails.CADADKAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQIIMAHANull() {
                return this.IsNull(this.tableGetOrderDetails.QIIMAHAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQIIMAHANull() {
                this[this.tableGetOrderDetails.QIIMAHAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKADHIMIDNull() {
                return this.IsNull(this.tableGetOrderDetails.KADHIMIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKADHIMIDNull() {
                this[this.tableGetOrderDetails.KADHIMIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQIIMAHA_KULINull() {
                return this.IsNull(this.tableGetOrderDetails.QIIMAHA_KULIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQIIMAHA_KULINull() {
                this[this.tableGetOrderDetails.QIIMAHA_KULIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQIIMAHA_UGU_DAMBEEYONull() {
                return this.IsNull(this.tableGetOrderDetails.QIIMAHA_UGU_DAMBEEYOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQIIMAHA_UGU_DAMBEEYONull() {
                this[this.tableGetOrderDetails.QIIMAHA_UGU_DAMBEEYOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTAARIIQDA_DALABKANull() {
                return this.IsNull(this.tableGetOrderDetails.TAARIIQDA_DALABKAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTAARIIQDA_DALABKANull() {
                this[this.tableGetOrderDetails.TAARIIQDA_DALABKAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGADAHANull() {
                return this.IsNull(this.tableGetOrderDetails.GADAHAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGADAHANull() {
                this[this.tableGetOrderDetails.GADAHAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAGACA_MACAAMILKANull() {
                return this.IsNull(this.tableGetOrderDetails.MAGACA_MACAAMILKAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAGACA_MACAAMILKANull() {
                this[this.tableGetOrderDetails.MAGACA_MACAAMILKAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTELKANull() {
                return this.IsNull(this.tableGetOrderDetails.TELKAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTELKANull() {
                this[this.tableGetOrderDetails.TELKAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMAILKANull() {
                return this.IsNull(this.tableGetOrderDetails.EMAILKAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMAILKANull() {
                this[this.tableGetOrderDetails.EMAILKAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAGACA_AGABKANull() {
                return this.IsNull(this.tableGetOrderDetails.MAGACA_AGABKAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAGACA_AGABKANull() {
                this[this.tableGetOrderDetails.MAGACA_AGABKAColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GetOrderDetailsForPrintRow : global::System.Data.DataRow {
            
            private GetOrderDetailsForPrintDataTable tableGetOrderDetailsForPrint;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GetOrderDetailsForPrintRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGetOrderDetailsForPrint = ((GetOrderDetailsForPrintDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RAQAMKA_AGABKA {
                get {
                    try {
                        return ((int)(this[this.tableGetOrderDetailsForPrint.RAQAMKA_AGABKAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RAQAMKA AGABKA\' in table \'GetOrderDetailsForPrint\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableGetOrderDetailsForPrint.RAQAMKA_AGABKAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RAQAMKA_DALABKA {
                get {
                    try {
                        return ((int)(this[this.tableGetOrderDetailsForPrint.RAQAMKA_DALABKAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RAQAMKA DALABKA\' in table \'GetOrderDetailsForPrint\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableGetOrderDetailsForPrint.RAQAMKA_DALABKAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CADADKA {
                get {
                    try {
                        return ((decimal)(this[this.tableGetOrderDetailsForPrint.CADADKAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CADADKA\' in table \'GetOrderDetailsForPrint\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetOrderDetailsForPrint.CADADKAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal QIIMAHA {
                get {
                    try {
                        return ((decimal)(this[this.tableGetOrderDetailsForPrint.QIIMAHAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QIIMAHA\' in table \'GetOrderDetailsForPrint\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetOrderDetailsForPrint.QIIMAHAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double KADHIMID {
                get {
                    try {
                        return ((double)(this[this.tableGetOrderDetailsForPrint.KADHIMIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KADHIMID\' in table \'GetOrderDetailsForPrint\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetOrderDetailsForPrint.KADHIMIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal QIIMAHA_KULI {
                get {
                    try {
                        return ((decimal)(this[this.tableGetOrderDetailsForPrint.QIIMAHA_KULIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QIIMAHA KULI\' in table \'GetOrderDetailsForPrint\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableGetOrderDetailsForPrint.QIIMAHA_KULIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal QIIMAHA_UGU_DAMBEEYO {
                get {
                    try {
                        return ((decimal)(this[this.tableGetOrderDetailsForPrint.QIIMAHA_UGU_DAMBEEYOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QIIMAHA UGU DAMBEEYO\' in table \'GetOrderDetailsForPrint\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetOrderDetailsForPrint.QIIMAHA_UGU_DAMBEEYOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TAARIIQDA_DALABKA {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGetOrderDetailsForPrint.TAARIIQDA_DALABKAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TAARIIQDA DALABKA\' in table \'GetOrderDetailsForPrint\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableGetOrderDetailsForPrint.TAARIIQDA_DALABKAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GADAHA {
                get {
                    try {
                        return ((string)(this[this.tableGetOrderDetailsForPrint.GADAHAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GADAHA\' in table \'GetOrderDetailsForPrint\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetOrderDetailsForPrint.GADAHAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RAQAMKA_MACAAMILKA {
                get {
                    return ((int)(this[this.tableGetOrderDetailsForPrint.RAQAMKA_MACAAMILKAColumn]));
                }
                set {
                    this[this.tableGetOrderDetailsForPrint.RAQAMKA_MACAAMILKAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAGACA_MACAAMILKA {
                get {
                    try {
                        return ((string)(this[this.tableGetOrderDetailsForPrint.MAGACA_MACAAMILKAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAGACA MACAAMILKA\' in table \'GetOrderDetailsForPrint\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableGetOrderDetailsForPrint.MAGACA_MACAAMILKAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TELKA {
                get {
                    try {
                        return ((string)(this[this.tableGetOrderDetailsForPrint.TELKAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TELKA\' in table \'GetOrderDetailsForPrint\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetOrderDetailsForPrint.TELKAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMAILKA {
                get {
                    try {
                        return ((string)(this[this.tableGetOrderDetailsForPrint.EMAILKAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMAILKA\' in table \'GetOrderDetailsForPrint\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetOrderDetailsForPrint.EMAILKAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAGACA_AGABKA {
                get {
                    try {
                        return ((string)(this[this.tableGetOrderDetailsForPrint.MAGACA_AGABKAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAGACA AGABKA\' in table \'GetOrderDetailsForPrint\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableGetOrderDetailsForPrint.MAGACA_AGABKAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRAQAMKA_AGABKANull() {
                return this.IsNull(this.tableGetOrderDetailsForPrint.RAQAMKA_AGABKAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRAQAMKA_AGABKANull() {
                this[this.tableGetOrderDetailsForPrint.RAQAMKA_AGABKAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRAQAMKA_DALABKANull() {
                return this.IsNull(this.tableGetOrderDetailsForPrint.RAQAMKA_DALABKAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRAQAMKA_DALABKANull() {
                this[this.tableGetOrderDetailsForPrint.RAQAMKA_DALABKAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCADADKANull() {
                return this.IsNull(this.tableGetOrderDetailsForPrint.CADADKAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCADADKANull() {
                this[this.tableGetOrderDetailsForPrint.CADADKAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQIIMAHANull() {
                return this.IsNull(this.tableGetOrderDetailsForPrint.QIIMAHAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQIIMAHANull() {
                this[this.tableGetOrderDetailsForPrint.QIIMAHAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKADHIMIDNull() {
                return this.IsNull(this.tableGetOrderDetailsForPrint.KADHIMIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKADHIMIDNull() {
                this[this.tableGetOrderDetailsForPrint.KADHIMIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQIIMAHA_KULINull() {
                return this.IsNull(this.tableGetOrderDetailsForPrint.QIIMAHA_KULIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQIIMAHA_KULINull() {
                this[this.tableGetOrderDetailsForPrint.QIIMAHA_KULIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQIIMAHA_UGU_DAMBEEYONull() {
                return this.IsNull(this.tableGetOrderDetailsForPrint.QIIMAHA_UGU_DAMBEEYOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQIIMAHA_UGU_DAMBEEYONull() {
                this[this.tableGetOrderDetailsForPrint.QIIMAHA_UGU_DAMBEEYOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTAARIIQDA_DALABKANull() {
                return this.IsNull(this.tableGetOrderDetailsForPrint.TAARIIQDA_DALABKAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTAARIIQDA_DALABKANull() {
                this[this.tableGetOrderDetailsForPrint.TAARIIQDA_DALABKAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGADAHANull() {
                return this.IsNull(this.tableGetOrderDetailsForPrint.GADAHAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGADAHANull() {
                this[this.tableGetOrderDetailsForPrint.GADAHAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAGACA_MACAAMILKANull() {
                return this.IsNull(this.tableGetOrderDetailsForPrint.MAGACA_MACAAMILKAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAGACA_MACAAMILKANull() {
                this[this.tableGetOrderDetailsForPrint.MAGACA_MACAAMILKAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTELKANull() {
                return this.IsNull(this.tableGetOrderDetailsForPrint.TELKAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTELKANull() {
                this[this.tableGetOrderDetailsForPrint.TELKAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMAILKANull() {
                return this.IsNull(this.tableGetOrderDetailsForPrint.EMAILKAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMAILKANull() {
                this[this.tableGetOrderDetailsForPrint.EMAILKAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAGACA_AGABKANull() {
                return this.IsNull(this.tableGetOrderDetailsForPrint.MAGACA_AGABKAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAGACA_AGABKANull() {
                this[this.tableGetOrderDetailsForPrint.MAGACA_AGABKAColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GetOrderDetailsokRow : global::System.Data.DataRow {
            
            private GetOrderDetailsokDataTable tableGetOrderDetailsok;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GetOrderDetailsokRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGetOrderDetailsok = ((GetOrderDetailsokDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RAQAMKA_AGABKA {
                get {
                    try {
                        return ((int)(this[this.tableGetOrderDetailsok.RAQAMKA_AGABKAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RAQAMKA AGABKA\' in table \'GetOrderDetailsok\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetOrderDetailsok.RAQAMKA_AGABKAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RAQAMKA_DALABKA {
                get {
                    try {
                        return ((int)(this[this.tableGetOrderDetailsok.RAQAMKA_DALABKAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RAQAMKA DALABKA\' in table \'GetOrderDetailsok\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetOrderDetailsok.RAQAMKA_DALABKAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CADADKA {
                get {
                    try {
                        return ((decimal)(this[this.tableGetOrderDetailsok.CADADKAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CADADKA\' in table \'GetOrderDetailsok\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetOrderDetailsok.CADADKAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal QIIMAHA {
                get {
                    try {
                        return ((decimal)(this[this.tableGetOrderDetailsok.QIIMAHAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QIIMAHA\' in table \'GetOrderDetailsok\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetOrderDetailsok.QIIMAHAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double KADHIMID {
                get {
                    try {
                        return ((double)(this[this.tableGetOrderDetailsok.KADHIMIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KADHIMID\' in table \'GetOrderDetailsok\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetOrderDetailsok.KADHIMIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal QIIMAHA_KULI {
                get {
                    try {
                        return ((decimal)(this[this.tableGetOrderDetailsok.QIIMAHA_KULIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QIIMAHA KULI\' in table \'GetOrderDetailsok\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetOrderDetailsok.QIIMAHA_KULIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal QIIMAHA_UGU_DAMBEEYO {
                get {
                    try {
                        return ((decimal)(this[this.tableGetOrderDetailsok.QIIMAHA_UGU_DAMBEEYOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QIIMAHA UGU DAMBEEYO\' in table \'GetOrderDetailsok\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableGetOrderDetailsok.QIIMAHA_UGU_DAMBEEYOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TAARIIQDA_DALABKA {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGetOrderDetailsok.TAARIIQDA_DALABKAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TAARIIQDA DALABKA\' in table \'GetOrderDetailsok\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetOrderDetailsok.TAARIIQDA_DALABKAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GADAHA {
                get {
                    try {
                        return ((string)(this[this.tableGetOrderDetailsok.GADAHAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GADAHA\' in table \'GetOrderDetailsok\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetOrderDetailsok.GADAHAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RAQAMKA_MACAAMILKA {
                get {
                    return ((int)(this[this.tableGetOrderDetailsok.RAQAMKA_MACAAMILKAColumn]));
                }
                set {
                    this[this.tableGetOrderDetailsok.RAQAMKA_MACAAMILKAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAGACA_MACAAMILKA {
                get {
                    try {
                        return ((string)(this[this.tableGetOrderDetailsok.MAGACA_MACAAMILKAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAGACA MACAAMILKA\' in table \'GetOrderDetailsok\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetOrderDetailsok.MAGACA_MACAAMILKAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TELKA {
                get {
                    try {
                        return ((string)(this[this.tableGetOrderDetailsok.TELKAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TELKA\' in table \'GetOrderDetailsok\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetOrderDetailsok.TELKAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMAILKA {
                get {
                    try {
                        return ((string)(this[this.tableGetOrderDetailsok.EMAILKAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMAILKA\' in table \'GetOrderDetailsok\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetOrderDetailsok.EMAILKAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAGACA_AGABKA {
                get {
                    try {
                        return ((string)(this[this.tableGetOrderDetailsok.MAGACA_AGABKAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAGACA AGABKA\' in table \'GetOrderDetailsok\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetOrderDetailsok.MAGACA_AGABKAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRAQAMKA_AGABKANull() {
                return this.IsNull(this.tableGetOrderDetailsok.RAQAMKA_AGABKAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRAQAMKA_AGABKANull() {
                this[this.tableGetOrderDetailsok.RAQAMKA_AGABKAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRAQAMKA_DALABKANull() {
                return this.IsNull(this.tableGetOrderDetailsok.RAQAMKA_DALABKAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRAQAMKA_DALABKANull() {
                this[this.tableGetOrderDetailsok.RAQAMKA_DALABKAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCADADKANull() {
                return this.IsNull(this.tableGetOrderDetailsok.CADADKAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCADADKANull() {
                this[this.tableGetOrderDetailsok.CADADKAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQIIMAHANull() {
                return this.IsNull(this.tableGetOrderDetailsok.QIIMAHAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQIIMAHANull() {
                this[this.tableGetOrderDetailsok.QIIMAHAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKADHIMIDNull() {
                return this.IsNull(this.tableGetOrderDetailsok.KADHIMIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKADHIMIDNull() {
                this[this.tableGetOrderDetailsok.KADHIMIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQIIMAHA_KULINull() {
                return this.IsNull(this.tableGetOrderDetailsok.QIIMAHA_KULIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQIIMAHA_KULINull() {
                this[this.tableGetOrderDetailsok.QIIMAHA_KULIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQIIMAHA_UGU_DAMBEEYONull() {
                return this.IsNull(this.tableGetOrderDetailsok.QIIMAHA_UGU_DAMBEEYOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQIIMAHA_UGU_DAMBEEYONull() {
                this[this.tableGetOrderDetailsok.QIIMAHA_UGU_DAMBEEYOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTAARIIQDA_DALABKANull() {
                return this.IsNull(this.tableGetOrderDetailsok.TAARIIQDA_DALABKAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTAARIIQDA_DALABKANull() {
                this[this.tableGetOrderDetailsok.TAARIIQDA_DALABKAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGADAHANull() {
                return this.IsNull(this.tableGetOrderDetailsok.GADAHAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGADAHANull() {
                this[this.tableGetOrderDetailsok.GADAHAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAGACA_MACAAMILKANull() {
                return this.IsNull(this.tableGetOrderDetailsok.MAGACA_MACAAMILKAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAGACA_MACAAMILKANull() {
                this[this.tableGetOrderDetailsok.MAGACA_MACAAMILKAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTELKANull() {
                return this.IsNull(this.tableGetOrderDetailsok.TELKAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTELKANull() {
                this[this.tableGetOrderDetailsok.TELKAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMAILKANull() {
                return this.IsNull(this.tableGetOrderDetailsok.EMAILKAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMAILKANull() {
                this[this.tableGetOrderDetailsok.EMAILKAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAGACA_AGABKANull() {
                return this.IsNull(this.tableGetOrderDetailsok.MAGACA_AGABKAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAGACA_AGABKANull() {
                this[this.tableGetOrderDetailsok.MAGACA_AGABKAColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Search_CustomerRow : global::System.Data.DataRow {
            
            private Search_CustomerDataTable tableSearch_Customer;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Search_CustomerRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSearch_Customer = ((Search_CustomerDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableSearch_Customer.IDColumn]));
                }
                set {
                    this[this.tableSearch_Customer.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIRKADA {
                get {
                    try {
                        return ((string)(this[this.tableSearch_Customer.SHIRKADAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SHIRKADA\' in table \'Search_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSearch_Customer.SHIRKADAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAGACA_KUWAAD {
                get {
                    try {
                        return ((string)(this[this.tableSearch_Customer.MAGACA_KUWAADColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAGACA KUWAAD\' in table \'Search_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSearch_Customer.MAGACA_KUWAADColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAGACA_LABAAD {
                get {
                    try {
                        return ((string)(this[this.tableSearch_Customer.MAGACA_LABAADColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAGACA LABAAD\' in table \'Search_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSearch_Customer.MAGACA_LABAADColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMAILKA {
                get {
                    try {
                        return ((string)(this[this.tableSearch_Customer.EMAILKAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMAILKA\' in table \'Search_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSearch_Customer.EMAILKAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TELKA {
                get {
                    try {
                        return ((string)(this[this.tableSearch_Customer.TELKAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TELKA\' in table \'Search_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSearch_Customer.TELKAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Adrreska {
                get {
                    try {
                        return ((string)(this[this.tableSearch_Customer.AdrreskaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Adrreska\' in table \'Search_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSearch_Customer.AdrreskaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NOTES {
                get {
                    try {
                        return ((string)(this[this.tableSearch_Customer.NOTESColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NOTES\' in table \'Search_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSearch_Customer.NOTESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSHIRKADANull() {
                return this.IsNull(this.tableSearch_Customer.SHIRKADAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSHIRKADANull() {
                this[this.tableSearch_Customer.SHIRKADAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAGACA_KUWAADNull() {
                return this.IsNull(this.tableSearch_Customer.MAGACA_KUWAADColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAGACA_KUWAADNull() {
                this[this.tableSearch_Customer.MAGACA_KUWAADColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAGACA_LABAADNull() {
                return this.IsNull(this.tableSearch_Customer.MAGACA_LABAADColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAGACA_LABAADNull() {
                this[this.tableSearch_Customer.MAGACA_LABAADColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMAILKANull() {
                return this.IsNull(this.tableSearch_Customer.EMAILKAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMAILKANull() {
                this[this.tableSearch_Customer.EMAILKAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTELKANull() {
                return this.IsNull(this.tableSearch_Customer.TELKAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTELKANull() {
                this[this.tableSearch_Customer.TELKAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdrreskaNull() {
                return this.IsNull(this.tableSearch_Customer.AdrreskaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdrreskaNull() {
                this[this.tableSearch_Customer.AdrreskaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNOTESNull() {
                return this.IsNull(this.tableSearch_Customer.NOTESColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNOTESNull() {
                this[this.tableSearch_Customer.NOTESColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SearchOrdersRow : global::System.Data.DataRow {
            
            private SearchOrdersDataTable tableSearchOrders;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SearchOrdersRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSearchOrders = ((SearchOrdersDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RAQMKA_DALABKA {
                get {
                    return ((int)(this[this.tableSearchOrders.RAQMKA_DALABKAColumn]));
                }
                set {
                    this[this.tableSearchOrders.RAQMKA_DALABKAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAGACA_MACAAMILKA {
                get {
                    try {
                        return ((string)(this[this.tableSearchOrders.MAGACA_MACAAMILKAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAGACA MACAAMILKA\' in table \'SearchOrders\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSearchOrders.MAGACA_MACAAMILKAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TAARIKHDA_DALABKA {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSearchOrders.TAARIKHDA_DALABKAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TAARIKHDA DALABKA\' in table \'SearchOrders\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSearchOrders.TAARIKHDA_DALABKAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TAARIKHDA_BIXINTA {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSearchOrders.TAARIKHDA_BIXINTAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TAARIKHDA BIXINTA\' in table \'SearchOrders\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSearchOrders.TAARIKHDA_BIXINTAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAGACA_GADAHA {
                get {
                    try {
                        return ((string)(this[this.tableSearchOrders.MAGACA_GADAHAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAGACA GADAHA\' in table \'SearchOrders\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSearchOrders.MAGACA_GADAHAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NOTE {
                get {
                    try {
                        return ((string)(this[this.tableSearchOrders.NOTEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NOTE\' in table \'SearchOrders\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSearchOrders.NOTEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAGACA_MACAAMILKANull() {
                return this.IsNull(this.tableSearchOrders.MAGACA_MACAAMILKAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAGACA_MACAAMILKANull() {
                this[this.tableSearchOrders.MAGACA_MACAAMILKAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTAARIKHDA_DALABKANull() {
                return this.IsNull(this.tableSearchOrders.TAARIKHDA_DALABKAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTAARIKHDA_DALABKANull() {
                this[this.tableSearchOrders.TAARIKHDA_DALABKAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTAARIKHDA_BIXINTANull() {
                return this.IsNull(this.tableSearchOrders.TAARIKHDA_BIXINTAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTAARIKHDA_BIXINTANull() {
                this[this.tableSearchOrders.TAARIKHDA_BIXINTAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAGACA_GADAHANull() {
                return this.IsNull(this.tableSearchOrders.MAGACA_GADAHAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAGACA_GADAHANull() {
                this[this.tableSearchOrders.MAGACA_GADAHAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNOTENull() {
                return this.IsNull(this.tableSearchOrders.NOTEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNOTENull() {
                this[this.tableSearchOrders.NOTEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SearchOrders2Row : global::System.Data.DataRow {
            
            private SearchOrders2DataTable tableSearchOrders2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SearchOrders2Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSearchOrders2 = ((SearchOrders2DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RAQMKA_DALABKA {
                get {
                    return ((int)(this[this.tableSearchOrders2.RAQMKA_DALABKAColumn]));
                }
                set {
                    this[this.tableSearchOrders2.RAQMKA_DALABKAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAGACA_MACAAMILKA {
                get {
                    try {
                        return ((string)(this[this.tableSearchOrders2.MAGACA_MACAAMILKAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAGACA MACAAMILKA\' in table \'SearchOrders2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSearchOrders2.MAGACA_MACAAMILKAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TAARIKHDA_DALABKA {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSearchOrders2.TAARIKHDA_DALABKAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TAARIKHDA DALABKA\' in table \'SearchOrders2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSearchOrders2.TAARIKHDA_DALABKAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TAARIKHDA_BIXINTA {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSearchOrders2.TAARIKHDA_BIXINTAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TAARIKHDA BIXINTA\' in table \'SearchOrders2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSearchOrders2.TAARIKHDA_BIXINTAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAGACA_GADAHA {
                get {
                    try {
                        return ((string)(this[this.tableSearchOrders2.MAGACA_GADAHAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAGACA GADAHA\' in table \'SearchOrders2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSearchOrders2.MAGACA_GADAHAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NOTE {
                get {
                    try {
                        return ((string)(this[this.tableSearchOrders2.NOTEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NOTE\' in table \'SearchOrders2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSearchOrders2.NOTEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAGACA_MACAAMILKANull() {
                return this.IsNull(this.tableSearchOrders2.MAGACA_MACAAMILKAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAGACA_MACAAMILKANull() {
                this[this.tableSearchOrders2.MAGACA_MACAAMILKAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTAARIKHDA_DALABKANull() {
                return this.IsNull(this.tableSearchOrders2.TAARIKHDA_DALABKAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTAARIKHDA_DALABKANull() {
                this[this.tableSearchOrders2.TAARIKHDA_DALABKAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTAARIKHDA_BIXINTANull() {
                return this.IsNull(this.tableSearchOrders2.TAARIKHDA_BIXINTAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTAARIKHDA_BIXINTANull() {
                this[this.tableSearchOrders2.TAARIKHDA_BIXINTAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAGACA_GADAHANull() {
                return this.IsNull(this.tableSearchOrders2.MAGACA_GADAHAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAGACA_GADAHANull() {
                this[this.tableSearchOrders2.MAGACA_GADAHAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNOTENull() {
                return this.IsNull(this.tableSearchOrders2.NOTEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNOTENull() {
                this[this.tableSearchOrders2.NOTEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SearchOrders3Row : global::System.Data.DataRow {
            
            private SearchOrders3DataTable tableSearchOrders3;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SearchOrders3Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSearchOrders3 = ((SearchOrders3DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RAQMKA_DALABKA {
                get {
                    return ((int)(this[this.tableSearchOrders3.RAQMKA_DALABKAColumn]));
                }
                set {
                    this[this.tableSearchOrders3.RAQMKA_DALABKAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAGACA_MACAAMILKA {
                get {
                    try {
                        return ((string)(this[this.tableSearchOrders3.MAGACA_MACAAMILKAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAGACA MACAAMILKA\' in table \'SearchOrders3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSearchOrders3.MAGACA_MACAAMILKAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TAARIKHDA_DALABKA {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSearchOrders3.TAARIKHDA_DALABKAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TAARIKHDA DALABKA\' in table \'SearchOrders3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSearchOrders3.TAARIKHDA_DALABKAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TAARIKHDA_BIXINTA {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSearchOrders3.TAARIKHDA_BIXINTAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TAARIKHDA BIXINTA\' in table \'SearchOrders3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSearchOrders3.TAARIKHDA_BIXINTAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAGACA_GADAHA {
                get {
                    try {
                        return ((string)(this[this.tableSearchOrders3.MAGACA_GADAHAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAGACA GADAHA\' in table \'SearchOrders3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSearchOrders3.MAGACA_GADAHAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NOTE {
                get {
                    try {
                        return ((string)(this[this.tableSearchOrders3.NOTEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NOTE\' in table \'SearchOrders3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSearchOrders3.NOTEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAGACA_MACAAMILKANull() {
                return this.IsNull(this.tableSearchOrders3.MAGACA_MACAAMILKAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAGACA_MACAAMILKANull() {
                this[this.tableSearchOrders3.MAGACA_MACAAMILKAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTAARIKHDA_DALABKANull() {
                return this.IsNull(this.tableSearchOrders3.TAARIKHDA_DALABKAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTAARIKHDA_DALABKANull() {
                this[this.tableSearchOrders3.TAARIKHDA_DALABKAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTAARIKHDA_BIXINTANull() {
                return this.IsNull(this.tableSearchOrders3.TAARIKHDA_BIXINTAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTAARIKHDA_BIXINTANull() {
                this[this.tableSearchOrders3.TAARIKHDA_BIXINTAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAGACA_GADAHANull() {
                return this.IsNull(this.tableSearchOrders3.MAGACA_GADAHAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAGACA_GADAHANull() {
                this[this.tableSearchOrders3.MAGACA_GADAHAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNOTENull() {
                return this.IsNull(this.tableSearchOrders3.NOTEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNOTENull() {
                this[this.tableSearchOrders3.NOTEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SearchProductRow : global::System.Data.DataRow {
            
            private SearchProductDataTable tableSearchProduct;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SearchProductRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSearchProduct = ((SearchProductDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RAQMKA {
                get {
                    return ((int)(this[this.tableSearchProduct.RAQMKAColumn]));
                }
                set {
                    this[this.tableSearchProduct.RAQMKAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CALAAMAD {
                get {
                    try {
                        return ((string)(this[this.tableSearchProduct.CALAAMADColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CALAAMAD\' in table \'SearchProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSearchProduct.CALAAMADColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAGACA {
                get {
                    try {
                        return ((string)(this[this.tableSearchProduct.MAGACAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAGACA\' in table \'SearchProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSearchProduct.MAGACAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FAAHFAAHIN {
                get {
                    try {
                        return ((string)(this[this.tableSearchProduct.FAAHFAAHINColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FAAHFAAHIN\' in table \'SearchProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSearchProduct.FAAHFAAHINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal QIIMHA {
                get {
                    try {
                        return ((decimal)(this[this.tableSearchProduct.QIIMHAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QIIMHA\' in table \'SearchProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSearchProduct.QIIMHAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LAGADAAYO {
                get {
                    try {
                        return ((decimal)(this[this.tableSearchProduct.LAGADAAYOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LAGADAAYO\' in table \'SearchProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSearchProduct.LAGADAAYOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short XADKA_DALABKA {
                get {
                    try {
                        return ((short)(this[this.tableSearchProduct.XADKA_DALABKAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'XADKA DALABKA\' in table \'SearchProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSearchProduct.XADKA_DALABKAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int XADKA_BUUXINTA {
                get {
                    try {
                        return ((int)(this[this.tableSearchProduct.XADKA_BUUXINTAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'XADKA BUUXINTA\' in table \'SearchProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSearchProduct.XADKA_BUUXINTAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CADADKA_XABADA {
                get {
                    try {
                        return ((string)(this[this.tableSearchProduct.CADADKA_XABADAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CADADKA XABADA\' in table \'SearchProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSearchProduct.CADADKA_XABADAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool QIIMA_DHIMIS {
                get {
                    try {
                        return ((bool)(this[this.tableSearchProduct.QIIMA_DHIMISColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QIIMA DHIMIS\' in table \'SearchProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSearchProduct.QIIMA_DHIMISColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short CADADKA_UGU_YAR_DALABKA {
                get {
                    try {
                        return ((short)(this[this.tableSearchProduct.CADADKA_UGU_YAR_DALABKAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CADADKA UGU YAR DALABKA\' in table \'SearchProduct\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableSearchProduct.CADADKA_UGU_YAR_DALABKAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NOOCA {
                get {
                    try {
                        return ((string)(this[this.tableSearchProduct.NOOCAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NOOCA\' in table \'SearchProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSearchProduct.NOOCAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GADAHA {
                get {
                    try {
                        return ((int)(this[this.tableSearchProduct.GADAHAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GADAHA\' in table \'SearchProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSearchProduct.GADAHAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCALAAMADNull() {
                return this.IsNull(this.tableSearchProduct.CALAAMADColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCALAAMADNull() {
                this[this.tableSearchProduct.CALAAMADColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAGACANull() {
                return this.IsNull(this.tableSearchProduct.MAGACAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAGACANull() {
                this[this.tableSearchProduct.MAGACAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFAAHFAAHINNull() {
                return this.IsNull(this.tableSearchProduct.FAAHFAAHINColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFAAHFAAHINNull() {
                this[this.tableSearchProduct.FAAHFAAHINColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQIIMHANull() {
                return this.IsNull(this.tableSearchProduct.QIIMHAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQIIMHANull() {
                this[this.tableSearchProduct.QIIMHAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLAGADAAYONull() {
                return this.IsNull(this.tableSearchProduct.LAGADAAYOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLAGADAAYONull() {
                this[this.tableSearchProduct.LAGADAAYOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsXADKA_DALABKANull() {
                return this.IsNull(this.tableSearchProduct.XADKA_DALABKAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetXADKA_DALABKANull() {
                this[this.tableSearchProduct.XADKA_DALABKAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsXADKA_BUUXINTANull() {
                return this.IsNull(this.tableSearchProduct.XADKA_BUUXINTAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetXADKA_BUUXINTANull() {
                this[this.tableSearchProduct.XADKA_BUUXINTAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCADADKA_XABADANull() {
                return this.IsNull(this.tableSearchProduct.CADADKA_XABADAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCADADKA_XABADANull() {
                this[this.tableSearchProduct.CADADKA_XABADAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQIIMA_DHIMISNull() {
                return this.IsNull(this.tableSearchProduct.QIIMA_DHIMISColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQIIMA_DHIMISNull() {
                this[this.tableSearchProduct.QIIMA_DHIMISColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCADADKA_UGU_YAR_DALABKANull() {
                return this.IsNull(this.tableSearchProduct.CADADKA_UGU_YAR_DALABKAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCADADKA_UGU_YAR_DALABKANull() {
                this[this.tableSearchProduct.CADADKA_UGU_YAR_DALABKAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNOOCANull() {
                return this.IsNull(this.tableSearchProduct.NOOCAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNOOCANull() {
                this[this.tableSearchProduct.NOOCAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGADAHANull() {
                return this.IsNull(this.tableSearchProduct.GADAHAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGADAHANull() {
                this[this.tableSearchProduct.GADAHAColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SearchUsersRow : global::System.Data.DataRow {
            
            private SearchUsersDataTable tableSearchUsers;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SearchUsersRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSearchUsers = ((SearchUsersDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAGACA_ADEEGSADAHA {
                get {
                    return ((string)(this[this.tableSearchUsers.MAGACA_ADEEGSADAHAColumn]));
                }
                set {
                    this[this.tableSearchUsers.MAGACA_ADEEGSADAHAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAGACA_OO_DHAN {
                get {
                    try {
                        return ((string)(this[this.tableSearchUsers.MAGACA_OO_DHANColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAGACA OO DHAN\' in table \'SearchUsers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSearchUsers.MAGACA_OO_DHANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ERAYGA_SIRTA_AH {
                get {
                    try {
                        return ((string)(this[this.tableSearchUsers.ERAYGA_SIRTA_AHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ERAYGA SIRTA AH\' in table \'SearchUsers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSearchUsers.ERAYGA_SIRTA_AHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NOOCA_ADEEGSADAHA {
                get {
                    try {
                        return ((string)(this[this.tableSearchUsers.NOOCA_ADEEGSADAHAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NOOCA ADEEGSADAHA\' in table \'SearchUsers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSearchUsers.NOOCA_ADEEGSADAHAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAGACA_OO_DHANNull() {
                return this.IsNull(this.tableSearchUsers.MAGACA_OO_DHANColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAGACA_OO_DHANNull() {
                this[this.tableSearchUsers.MAGACA_OO_DHANColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsERAYGA_SIRTA_AHNull() {
                return this.IsNull(this.tableSearchUsers.ERAYGA_SIRTA_AHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetERAYGA_SIRTA_AHNull() {
                this[this.tableSearchUsers.ERAYGA_SIRTA_AHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNOOCA_ADEEGSADAHANull() {
                return this.IsNull(this.tableSearchUsers.NOOCA_ADEEGSADAHAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNOOCA_ADEEGSADAHANull() {
                this[this.tableSearchUsers.NOOCA_ADEEGSADAHAColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SearchUsers2Row : global::System.Data.DataRow {
            
            private SearchUsers2DataTable tableSearchUsers2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SearchUsers2Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSearchUsers2 = ((SearchUsers2DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAGACA_ADEEGSADAHA {
                get {
                    return ((string)(this[this.tableSearchUsers2.MAGACA_ADEEGSADAHAColumn]));
                }
                set {
                    this[this.tableSearchUsers2.MAGACA_ADEEGSADAHAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAGACA_OO_DHAN {
                get {
                    try {
                        return ((string)(this[this.tableSearchUsers2.MAGACA_OO_DHANColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAGACA OO DHAN\' in table \'SearchUsers2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSearchUsers2.MAGACA_OO_DHANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ERAYGA_SIRTA_AH {
                get {
                    try {
                        return ((string)(this[this.tableSearchUsers2.ERAYGA_SIRTA_AHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ERAYGA SIRTA AH\' in table \'SearchUsers2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSearchUsers2.ERAYGA_SIRTA_AHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NOOCA_ADEEGSADAHA {
                get {
                    try {
                        return ((string)(this[this.tableSearchUsers2.NOOCA_ADEEGSADAHAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NOOCA ADEEGSADAHA\' in table \'SearchUsers2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSearchUsers2.NOOCA_ADEEGSADAHAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAGACA_OO_DHANNull() {
                return this.IsNull(this.tableSearchUsers2.MAGACA_OO_DHANColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAGACA_OO_DHANNull() {
                this[this.tableSearchUsers2.MAGACA_OO_DHANColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsERAYGA_SIRTA_AHNull() {
                return this.IsNull(this.tableSearchUsers2.ERAYGA_SIRTA_AHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetERAYGA_SIRTA_AHNull() {
                this[this.tableSearchUsers2.ERAYGA_SIRTA_AHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNOOCA_ADEEGSADAHANull() {
                return this.IsNull(this.tableSearchUsers2.NOOCA_ADEEGSADAHAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNOOCA_ADEEGSADAHANull() {
                this[this.tableSearchUsers2.NOOCA_ADEEGSADAHAColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SP_LOGIN2Row : global::System.Data.DataRow {
            
            private SP_LOGIN2DataTable tableSP_LOGIN2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SP_LOGIN2Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSP_LOGIN2 = ((SP_LOGIN2DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ID {
                get {
                    return ((string)(this[this.tableSP_LOGIN2.IDColumn]));
                }
                set {
                    this[this.tableSP_LOGIN2.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PWD {
                get {
                    try {
                        return ((string)(this[this.tableSP_LOGIN2.PWDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PWD\' in table \'SP_LOGIN2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_LOGIN2.PWDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserType {
                get {
                    try {
                        return ((string)(this[this.tableSP_LOGIN2.UserTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserType\' in table \'SP_LOGIN2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_LOGIN2.UserTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FullName {
                get {
                    try {
                        return ((string)(this[this.tableSP_LOGIN2.FullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FullName\' in table \'SP_LOGIN2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_LOGIN2.FullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPWDNull() {
                return this.IsNull(this.tableSP_LOGIN2.PWDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPWDNull() {
                this[this.tableSP_LOGIN2.PWDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserTypeNull() {
                return this.IsNull(this.tableSP_LOGIN2.UserTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserTypeNull() {
                this[this.tableSP_LOGIN2.UserTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFullNameNull() {
                return this.IsNull(this.tableSP_LOGIN2.FullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFullNameNull() {
                this[this.tableSP_LOGIN2.FullNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class VarifyQtyRow : global::System.Data.DataRow {
            
            private VarifyQtyDataTable tableVarifyQty;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal VarifyQtyRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVarifyQty = ((VarifyQtyDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Product_ID {
                get {
                    return ((int)(this[this.tableVarifyQty.Product_IDColumn]));
                }
                set {
                    this[this.tableVarifyQty.Product_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Product_Name {
                get {
                    try {
                        return ((string)(this[this.tableVarifyQty.Product_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Product Name\' in table \'VarifyQty\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVarifyQty.Product_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Product_Code {
                get {
                    try {
                        return ((string)(this[this.tableVarifyQty.Product_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Product Code\' in table \'VarifyQty\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVarifyQty.Product_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Qty_Purchased {
                get {
                    try {
                        return ((int)(this[this.tableVarifyQty.Qty_PurchasedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty Purchased\' in table \'VarifyQty\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVarifyQty.Qty_PurchasedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Qty_Sold {
                get {
                    try {
                        return ((int)(this[this.tableVarifyQty.Qty_SoldColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty Sold\' in table \'VarifyQty\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVarifyQty.Qty_SoldColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Qty_On_Hold {
                get {
                    try {
                        return ((int)(this[this.tableVarifyQty.Qty_On_HoldColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty On Hold\' in table \'VarifyQty\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVarifyQty.Qty_On_HoldColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Qty_On_Hand {
                get {
                    try {
                        return ((int)(this[this.tableVarifyQty.Qty_On_HandColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty On Hand\' in table \'VarifyQty\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVarifyQty.Qty_On_HandColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Qty_Available {
                get {
                    try {
                        return ((int)(this[this.tableVarifyQty.Qty_AvailableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty Available\' in table \'VarifyQty\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVarifyQty.Qty_AvailableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Qty_On_Order {
                get {
                    try {
                        return ((decimal)(this[this.tableVarifyQty.Qty_On_OrderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty On Order\' in table \'VarifyQty\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVarifyQty.Qty_On_OrderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Qty_On_Back_Order {
                get {
                    try {
                        return ((decimal)(this[this.tableVarifyQty.Qty_On_Back_OrderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty On Back Order\' in table \'VarifyQty\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVarifyQty.Qty_On_Back_OrderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Reorder_Level {
                get {
                    try {
                        return ((short)(this[this.tableVarifyQty.Reorder_LevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Reorder Level\' in table \'VarifyQty\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVarifyQty.Reorder_LevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Target_Level {
                get {
                    try {
                        return ((int)(this[this.tableVarifyQty.Target_LevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Target Level\' in table \'VarifyQty\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVarifyQty.Target_LevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Qty_Below_Target_Level {
                get {
                    try {
                        return ((decimal)(this[this.tableVarifyQty.Qty_Below_Target_LevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty Below Target Level\' in table \'VarifyQty\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVarifyQty.Qty_Below_Target_LevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Current_Level {
                get {
                    try {
                        return ((decimal)(this[this.tableVarifyQty.Current_LevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Current Level\' in table \'VarifyQty\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVarifyQty.Current_LevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProduct_NameNull() {
                return this.IsNull(this.tableVarifyQty.Product_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProduct_NameNull() {
                this[this.tableVarifyQty.Product_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProduct_CodeNull() {
                return this.IsNull(this.tableVarifyQty.Product_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProduct_CodeNull() {
                this[this.tableVarifyQty.Product_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQty_PurchasedNull() {
                return this.IsNull(this.tableVarifyQty.Qty_PurchasedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQty_PurchasedNull() {
                this[this.tableVarifyQty.Qty_PurchasedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQty_SoldNull() {
                return this.IsNull(this.tableVarifyQty.Qty_SoldColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQty_SoldNull() {
                this[this.tableVarifyQty.Qty_SoldColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQty_On_HoldNull() {
                return this.IsNull(this.tableVarifyQty.Qty_On_HoldColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQty_On_HoldNull() {
                this[this.tableVarifyQty.Qty_On_HoldColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQty_On_HandNull() {
                return this.IsNull(this.tableVarifyQty.Qty_On_HandColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQty_On_HandNull() {
                this[this.tableVarifyQty.Qty_On_HandColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQty_AvailableNull() {
                return this.IsNull(this.tableVarifyQty.Qty_AvailableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQty_AvailableNull() {
                this[this.tableVarifyQty.Qty_AvailableColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQty_On_OrderNull() {
                return this.IsNull(this.tableVarifyQty.Qty_On_OrderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQty_On_OrderNull() {
                this[this.tableVarifyQty.Qty_On_OrderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQty_On_Back_OrderNull() {
                return this.IsNull(this.tableVarifyQty.Qty_On_Back_OrderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQty_On_Back_OrderNull() {
                this[this.tableVarifyQty.Qty_On_Back_OrderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReorder_LevelNull() {
                return this.IsNull(this.tableVarifyQty.Reorder_LevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReorder_LevelNull() {
                this[this.tableVarifyQty.Reorder_LevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTarget_LevelNull() {
                return this.IsNull(this.tableVarifyQty.Target_LevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTarget_LevelNull() {
                this[this.tableVarifyQty.Target_LevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQty_Below_Target_LevelNull() {
                return this.IsNull(this.tableVarifyQty.Qty_Below_Target_LevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQty_Below_Target_LevelNull() {
                this[this.tableVarifyQty.Qty_Below_Target_LevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCurrent_LevelNull() {
                return this.IsNull(this.tableVarifyQty.Current_LevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCurrent_LevelNull() {
                this[this.tableVarifyQty.Current_LevelColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class VerifyProductIDRow : global::System.Data.DataRow {
            
            private VerifyProductIDDataTable tableVerifyProductID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal VerifyProductIDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVerifyProductID = ((VerifyProductIDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableVerifyProductID.IDColumn]));
                }
                set {
                    this[this.tableVerifyProductID.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Product_Code {
                get {
                    try {
                        return ((string)(this[this.tableVerifyProductID.Product_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Product Code\' in table \'VerifyProductID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVerifyProductID.Product_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Product_Name {
                get {
                    try {
                        return ((string)(this[this.tableVerifyProductID.Product_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Product Name\' in table \'VerifyProductID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVerifyProductID.Product_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableVerifyProductID.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'VerifyProductID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVerifyProductID.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Standard_Cost {
                get {
                    try {
                        return ((decimal)(this[this.tableVerifyProductID.Standard_CostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Standard Cost\' in table \'VerifyProductID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVerifyProductID.Standard_CostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal List_Price {
                get {
                    try {
                        return ((decimal)(this[this.tableVerifyProductID.List_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'List Price\' in table \'VerifyProductID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVerifyProductID.List_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Reorder_Level {
                get {
                    try {
                        return ((short)(this[this.tableVerifyProductID.Reorder_LevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Reorder Level\' in table \'VerifyProductID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVerifyProductID.Reorder_LevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Target_Level {
                get {
                    try {
                        return ((int)(this[this.tableVerifyProductID.Target_LevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Target Level\' in table \'VerifyProductID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVerifyProductID.Target_LevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Quantity_Per_Unit {
                get {
                    try {
                        return ((string)(this[this.tableVerifyProductID.Quantity_Per_UnitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity Per Unit\' in table \'VerifyProductID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVerifyProductID.Quantity_Per_UnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Discontinued {
                get {
                    try {
                        return ((bool)(this[this.tableVerifyProductID.DiscontinuedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Discontinued\' in table \'VerifyProductID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVerifyProductID.DiscontinuedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Minimum_Reorder_Quantity {
                get {
                    try {
                        return ((short)(this[this.tableVerifyProductID.Minimum_Reorder_QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Minimum Reorder Quantity\' in table \'VerifyProductID\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableVerifyProductID.Minimum_Reorder_QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Category {
                get {
                    try {
                        return ((string)(this[this.tableVerifyProductID.CategoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Category\' in table \'VerifyProductID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVerifyProductID.CategoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Supplier_IDs {
                get {
                    try {
                        return ((int)(this[this.tableVerifyProductID.Supplier_IDsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supplier IDs\' in table \'VerifyProductID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVerifyProductID.Supplier_IDsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProduct_CodeNull() {
                return this.IsNull(this.tableVerifyProductID.Product_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProduct_CodeNull() {
                this[this.tableVerifyProductID.Product_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProduct_NameNull() {
                return this.IsNull(this.tableVerifyProductID.Product_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProduct_NameNull() {
                this[this.tableVerifyProductID.Product_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableVerifyProductID.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableVerifyProductID.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStandard_CostNull() {
                return this.IsNull(this.tableVerifyProductID.Standard_CostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStandard_CostNull() {
                this[this.tableVerifyProductID.Standard_CostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsList_PriceNull() {
                return this.IsNull(this.tableVerifyProductID.List_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetList_PriceNull() {
                this[this.tableVerifyProductID.List_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReorder_LevelNull() {
                return this.IsNull(this.tableVerifyProductID.Reorder_LevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReorder_LevelNull() {
                this[this.tableVerifyProductID.Reorder_LevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTarget_LevelNull() {
                return this.IsNull(this.tableVerifyProductID.Target_LevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTarget_LevelNull() {
                this[this.tableVerifyProductID.Target_LevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantity_Per_UnitNull() {
                return this.IsNull(this.tableVerifyProductID.Quantity_Per_UnitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantity_Per_UnitNull() {
                this[this.tableVerifyProductID.Quantity_Per_UnitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscontinuedNull() {
                return this.IsNull(this.tableVerifyProductID.DiscontinuedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscontinuedNull() {
                this[this.tableVerifyProductID.DiscontinuedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMinimum_Reorder_QuantityNull() {
                return this.IsNull(this.tableVerifyProductID.Minimum_Reorder_QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMinimum_Reorder_QuantityNull() {
                this[this.tableVerifyProductID.Minimum_Reorder_QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCategoryNull() {
                return this.IsNull(this.tableVerifyProductID.CategoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCategoryNull() {
                this[this.tableVerifyProductID.CategoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplier_IDsNull() {
                return this.IsNull(this.tableVerifyProductID.Supplier_IDsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplier_IDsNull() {
                this[this.tableVerifyProductID.Supplier_IDsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GET_ALL_CUSTOMERSRowChangeEvent : global::System.EventArgs {
            
            private GET_ALL_CUSTOMERSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_ALL_CUSTOMERSRowChangeEvent(GET_ALL_CUSTOMERSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_ALL_CUSTOMERSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GET_ALL_PRODUCTSRowChangeEvent : global::System.EventArgs {
            
            private GET_ALL_PRODUCTSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_ALL_PRODUCTSRowChangeEvent(GET_ALL_PRODUCTSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_ALL_PRODUCTSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GET_ALL_SuppliersRowChangeEvent : global::System.EventArgs {
            
            private GET_ALL_SuppliersRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_ALL_SuppliersRowChangeEvent(GET_ALL_SuppliersRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_ALL_SuppliersRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GET_ALL_Suppliers2RowChangeEvent : global::System.EventArgs {
            
            private GET_ALL_Suppliers2Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_ALL_Suppliers2RowChangeEvent(GET_ALL_Suppliers2Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_ALL_Suppliers2Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GET_LAST_ORDER_FOR_PRINTRowChangeEvent : global::System.EventArgs {
            
            private GET_LAST_ORDER_FOR_PRINTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_LAST_ORDER_FOR_PRINTRowChangeEvent(GET_LAST_ORDER_FOR_PRINTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_LAST_ORDER_FOR_PRINTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GET_LAST_ORDER_IDRowChangeEvent : global::System.EventArgs {
            
            private GET_LAST_ORDER_IDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_LAST_ORDER_IDRowChangeEvent(GET_LAST_ORDER_IDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_LAST_ORDER_IDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GET_LAST_PurchaseORDER_IDRowChangeEvent : global::System.EventArgs {
            
            private GET_LAST_PurchaseORDER_IDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_LAST_PurchaseORDER_IDRowChangeEvent(GET_LAST_PurchaseORDER_IDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_LAST_PurchaseORDER_IDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GET_LAST_Transaction_IDRowChangeEvent : global::System.EventArgs {
            
            private GET_LAST_Transaction_IDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_LAST_Transaction_IDRowChangeEvent(GET_LAST_Transaction_IDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_LAST_Transaction_IDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GET_SINGLE_PRODUCTRowChangeEvent : global::System.EventArgs {
            
            private GET_SINGLE_PRODUCTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_SINGLE_PRODUCTRowChangeEvent(GET_SINGLE_PRODUCTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GET_SINGLE_PRODUCTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GetOrderDetailsRowChangeEvent : global::System.EventArgs {
            
            private GetOrderDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetOrderDetailsRowChangeEvent(GetOrderDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetOrderDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GetOrderDetailsForPrintRowChangeEvent : global::System.EventArgs {
            
            private GetOrderDetailsForPrintRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetOrderDetailsForPrintRowChangeEvent(GetOrderDetailsForPrintRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetOrderDetailsForPrintRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GetOrderDetailsokRowChangeEvent : global::System.EventArgs {
            
            private GetOrderDetailsokRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetOrderDetailsokRowChangeEvent(GetOrderDetailsokRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetOrderDetailsokRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Search_CustomerRowChangeEvent : global::System.EventArgs {
            
            private Search_CustomerRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Search_CustomerRowChangeEvent(Search_CustomerRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Search_CustomerRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SearchOrdersRowChangeEvent : global::System.EventArgs {
            
            private SearchOrdersRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SearchOrdersRowChangeEvent(SearchOrdersRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SearchOrdersRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SearchOrders2RowChangeEvent : global::System.EventArgs {
            
            private SearchOrders2Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SearchOrders2RowChangeEvent(SearchOrders2Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SearchOrders2Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SearchOrders3RowChangeEvent : global::System.EventArgs {
            
            private SearchOrders3Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SearchOrders3RowChangeEvent(SearchOrders3Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SearchOrders3Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SearchProductRowChangeEvent : global::System.EventArgs {
            
            private SearchProductRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SearchProductRowChangeEvent(SearchProductRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SearchProductRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SearchUsersRowChangeEvent : global::System.EventArgs {
            
            private SearchUsersRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SearchUsersRowChangeEvent(SearchUsersRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SearchUsersRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SearchUsers2RowChangeEvent : global::System.EventArgs {
            
            private SearchUsers2Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SearchUsers2RowChangeEvent(SearchUsers2Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SearchUsers2Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SP_LOGIN2RowChangeEvent : global::System.EventArgs {
            
            private SP_LOGIN2Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SP_LOGIN2RowChangeEvent(SP_LOGIN2Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SP_LOGIN2Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class VarifyQtyRowChangeEvent : global::System.EventArgs {
            
            private VarifyQtyRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VarifyQtyRowChangeEvent(VarifyQtyRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VarifyQtyRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class VerifyProductIDRowChangeEvent : global::System.EventArgs {
            
            private VerifyProductIDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VerifyProductIDRowChangeEvent(VerifyProductIDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VerifyProductIDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace products_Management.NorthwindSQLDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GET_ALL_CUSTOMERSTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public GET_ALL_CUSTOMERSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GET_ALL_CUSTOMERS";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("SHIRKADA", "SHIRKADA");
            tableMapping.ColumnMappings.Add("MAGACA KUWAAD", "MAGACA KUWAAD");
            tableMapping.ColumnMappings.Add("MAGACA LABAAD", "MAGACA LABAAD");
            tableMapping.ColumnMappings.Add("EMAILKA", "EMAILKA");
            tableMapping.ColumnMappings.Add("TELKA", "TELKA");
            tableMapping.ColumnMappings.Add("Adrreska", "Adrreska");
            tableMapping.ColumnMappings.Add("NOTES", "NOTES");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::products_Management.Properties.Settings.Default.NorthwindSQLConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.GET_ALL_CUSTOMERS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NorthwindSQLDataSet.GET_ALL_CUSTOMERSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NorthwindSQLDataSet.GET_ALL_CUSTOMERSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            NorthwindSQLDataSet.GET_ALL_CUSTOMERSDataTable dataTable = new NorthwindSQLDataSet.GET_ALL_CUSTOMERSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GET_ALL_PRODUCTSTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public GET_ALL_PRODUCTSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GET_ALL_PRODUCTS";
            tableMapping.ColumnMappings.Add("RAQMKA", "RAQMKA");
            tableMapping.ColumnMappings.Add("CALAAMAD", "CALAAMAD");
            tableMapping.ColumnMappings.Add("MAGACA", "MAGACA");
            tableMapping.ColumnMappings.Add("FAAHFAAHIN", "FAAHFAAHIN");
            tableMapping.ColumnMappings.Add("QIIMHA", "QIIMHA");
            tableMapping.ColumnMappings.Add("LAGADAAYO", "LAGADAAYO");
            tableMapping.ColumnMappings.Add("XADKA DALABKA", "XADKA DALABKA");
            tableMapping.ColumnMappings.Add("XADKA BUUXINTA", "XADKA BUUXINTA");
            tableMapping.ColumnMappings.Add("CADADKA XABADA", "CADADKA XABADA");
            tableMapping.ColumnMappings.Add("QIIMA DHIMIS", "QIIMA DHIMIS");
            tableMapping.ColumnMappings.Add("CADADKA UGU YAR DALABKA", "CADADKA UGU YAR DALABKA");
            tableMapping.ColumnMappings.Add("NOOCA", "NOOCA");
            tableMapping.ColumnMappings.Add("GADAHA", "GADAHA");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::products_Management.Properties.Settings.Default.NorthwindSQLConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.GET_ALL_PRODUCTS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NorthwindSQLDataSet.GET_ALL_PRODUCTSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NorthwindSQLDataSet.GET_ALL_PRODUCTSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            NorthwindSQLDataSet.GET_ALL_PRODUCTSDataTable dataTable = new NorthwindSQLDataSet.GET_ALL_PRODUCTSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GET_ALL_SuppliersTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public GET_ALL_SuppliersTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GET_ALL_Suppliers";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Company", "Company");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::products_Management.Properties.Settings.Default.NorthwindSQLConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.GET_ALL_Suppliers";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NorthwindSQLDataSet.GET_ALL_SuppliersDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NorthwindSQLDataSet.GET_ALL_SuppliersDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            NorthwindSQLDataSet.GET_ALL_SuppliersDataTable dataTable = new NorthwindSQLDataSet.GET_ALL_SuppliersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GET_ALL_Suppliers2TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public GET_ALL_Suppliers2TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GET_ALL_Suppliers2";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Company", "Company");
            tableMapping.ColumnMappings.Add("First Name", "First Name");
            tableMapping.ColumnMappings.Add("Last Name", "Last Name");
            tableMapping.ColumnMappings.Add("Mobile Phone", "Mobile Phone");
            tableMapping.ColumnMappings.Add("E-mail Address", "E-mail Address");
            tableMapping.ColumnMappings.Add("Notes", "Notes");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::products_Management.Properties.Settings.Default.NorthwindSQLConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.GET_ALL_Suppliers2";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NorthwindSQLDataSet.GET_ALL_Suppliers2DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NorthwindSQLDataSet.GET_ALL_Suppliers2DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            NorthwindSQLDataSet.GET_ALL_Suppliers2DataTable dataTable = new NorthwindSQLDataSet.GET_ALL_Suppliers2DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GET_LAST_ORDER_FOR_PRINTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public GET_LAST_ORDER_FOR_PRINTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GET_LAST_ORDER_FOR_PRINT";
            tableMapping.ColumnMappings.Add("Column1", "Column1");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::products_Management.Properties.Settings.Default.NorthwindSQLConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.GET_LAST_ORDER_FOR_PRINT";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NorthwindSQLDataSet.GET_LAST_ORDER_FOR_PRINTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NorthwindSQLDataSet.GET_LAST_ORDER_FOR_PRINTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            NorthwindSQLDataSet.GET_LAST_ORDER_FOR_PRINTDataTable dataTable = new NorthwindSQLDataSet.GET_LAST_ORDER_FOR_PRINTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GET_LAST_ORDER_IDTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public GET_LAST_ORDER_IDTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GET_LAST_ORDER_ID";
            tableMapping.ColumnMappings.Add("Column1", "Column1");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::products_Management.Properties.Settings.Default.NorthwindSQLConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.GET_LAST_ORDER_ID";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NorthwindSQLDataSet.GET_LAST_ORDER_IDDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NorthwindSQLDataSet.GET_LAST_ORDER_IDDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            NorthwindSQLDataSet.GET_LAST_ORDER_IDDataTable dataTable = new NorthwindSQLDataSet.GET_LAST_ORDER_IDDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GET_LAST_PurchaseORDER_IDTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public GET_LAST_PurchaseORDER_IDTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GET_LAST_PurchaseORDER_ID";
            tableMapping.ColumnMappings.Add("Column1", "Column1");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::products_Management.Properties.Settings.Default.NorthwindSQLConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.GET_LAST_PurchaseORDER_ID";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NorthwindSQLDataSet.GET_LAST_PurchaseORDER_IDDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NorthwindSQLDataSet.GET_LAST_PurchaseORDER_IDDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            NorthwindSQLDataSet.GET_LAST_PurchaseORDER_IDDataTable dataTable = new NorthwindSQLDataSet.GET_LAST_PurchaseORDER_IDDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GET_LAST_Transaction_IDTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public GET_LAST_Transaction_IDTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GET_LAST_Transaction_ID";
            tableMapping.ColumnMappings.Add("Column1", "Column1");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::products_Management.Properties.Settings.Default.NorthwindSQLConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.GET_LAST_Transaction_ID";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NorthwindSQLDataSet.GET_LAST_Transaction_IDDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NorthwindSQLDataSet.GET_LAST_Transaction_IDDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            NorthwindSQLDataSet.GET_LAST_Transaction_IDDataTable dataTable = new NorthwindSQLDataSet.GET_LAST_Transaction_IDDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GET_SINGLE_PRODUCTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public GET_SINGLE_PRODUCTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GET_SINGLE_PRODUCT";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Product Code", "Product Code");
            tableMapping.ColumnMappings.Add("Product Name", "Product Name");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("Standard Cost", "Standard Cost");
            tableMapping.ColumnMappings.Add("List Price", "List Price");
            tableMapping.ColumnMappings.Add("Reorder Level", "Reorder Level");
            tableMapping.ColumnMappings.Add("Target Level", "Target Level");
            tableMapping.ColumnMappings.Add("Quantity Per Unit", "Quantity Per Unit");
            tableMapping.ColumnMappings.Add("Discontinued", "Discontinued");
            tableMapping.ColumnMappings.Add("Minimum Reorder Quantity", "Minimum Reorder Quantity");
            tableMapping.ColumnMappings.Add("Category", "Category");
            tableMapping.ColumnMappings.Add("Supplier IDs", "Supplier IDs");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::products_Management.Properties.Settings.Default.NorthwindSQLConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.GET_SINGLE_PRODUCT";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NorthwindSQLDataSet.GET_SINGLE_PRODUCTDataTable dataTable, global::System.Nullable<int> ID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((ID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(ID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NorthwindSQLDataSet.GET_SINGLE_PRODUCTDataTable GetData(global::System.Nullable<int> ID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((ID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(ID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            NorthwindSQLDataSet.GET_SINGLE_PRODUCTDataTable dataTable = new NorthwindSQLDataSet.GET_SINGLE_PRODUCTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GetOrderDetailsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public GetOrderDetailsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GetOrderDetails";
            tableMapping.ColumnMappings.Add("RAQAMKA AGABKA", "RAQAMKA AGABKA");
            tableMapping.ColumnMappings.Add("RAQAMKA DALABKA", "RAQAMKA DALABKA");
            tableMapping.ColumnMappings.Add("CADADKA", "CADADKA");
            tableMapping.ColumnMappings.Add("QIIMAHA", "QIIMAHA");
            tableMapping.ColumnMappings.Add("KADHIMID", "KADHIMID");
            tableMapping.ColumnMappings.Add("QIIMAHA KULI", "QIIMAHA KULI");
            tableMapping.ColumnMappings.Add("QIIMAHA UGU DAMBEEYO", "QIIMAHA UGU DAMBEEYO");
            tableMapping.ColumnMappings.Add("TAARIIQDA DALABKA", "TAARIIQDA DALABKA");
            tableMapping.ColumnMappings.Add("GADAHA", "GADAHA");
            tableMapping.ColumnMappings.Add("RAQAMKA MACAAMILKA", "RAQAMKA MACAAMILKA");
            tableMapping.ColumnMappings.Add("MAGACA MACAAMILKA", "MAGACA MACAAMILKA");
            tableMapping.ColumnMappings.Add("TELKA", "TELKA");
            tableMapping.ColumnMappings.Add("EMAILKA", "EMAILKA");
            tableMapping.ColumnMappings.Add("MAGACA AGABKA", "MAGACA AGABKA");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::products_Management.Properties.Settings.Default.NorthwindSQLConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.GetOrderDetails";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_ORDER", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NorthwindSQLDataSet.GetOrderDetailsDataTable dataTable, global::System.Nullable<int> ID_ORDER) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((ID_ORDER.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(ID_ORDER.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NorthwindSQLDataSet.GetOrderDetailsDataTable GetData(global::System.Nullable<int> ID_ORDER) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((ID_ORDER.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(ID_ORDER.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            NorthwindSQLDataSet.GetOrderDetailsDataTable dataTable = new NorthwindSQLDataSet.GetOrderDetailsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GetOrderDetailsForPrintTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public GetOrderDetailsForPrintTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GetOrderDetailsForPrint";
            tableMapping.ColumnMappings.Add("RAQAMKA AGABKA", "RAQAMKA AGABKA");
            tableMapping.ColumnMappings.Add("RAQAMKA DALABKA", "RAQAMKA DALABKA");
            tableMapping.ColumnMappings.Add("CADADKA", "CADADKA");
            tableMapping.ColumnMappings.Add("QIIMAHA", "QIIMAHA");
            tableMapping.ColumnMappings.Add("KADHIMID", "KADHIMID");
            tableMapping.ColumnMappings.Add("QIIMAHA KULI", "QIIMAHA KULI");
            tableMapping.ColumnMappings.Add("QIIMAHA UGU DAMBEEYO", "QIIMAHA UGU DAMBEEYO");
            tableMapping.ColumnMappings.Add("TAARIIQDA DALABKA", "TAARIIQDA DALABKA");
            tableMapping.ColumnMappings.Add("GADAHA", "GADAHA");
            tableMapping.ColumnMappings.Add("RAQAMKA MACAAMILKA", "RAQAMKA MACAAMILKA");
            tableMapping.ColumnMappings.Add("MAGACA MACAAMILKA", "MAGACA MACAAMILKA");
            tableMapping.ColumnMappings.Add("TELKA", "TELKA");
            tableMapping.ColumnMappings.Add("EMAILKA", "EMAILKA");
            tableMapping.ColumnMappings.Add("MAGACA AGABKA", "MAGACA AGABKA");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::products_Management.Properties.Settings.Default.NorthwindSQLConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.GetOrderDetailsForPrint";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NorthwindSQLDataSet.GetOrderDetailsForPrintDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NorthwindSQLDataSet.GetOrderDetailsForPrintDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            NorthwindSQLDataSet.GetOrderDetailsForPrintDataTable dataTable = new NorthwindSQLDataSet.GetOrderDetailsForPrintDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GetOrderDetailsokTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public GetOrderDetailsokTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GetOrderDetailsok";
            tableMapping.ColumnMappings.Add("RAQAMKA AGABKA", "RAQAMKA AGABKA");
            tableMapping.ColumnMappings.Add("RAQAMKA DALABKA", "RAQAMKA DALABKA");
            tableMapping.ColumnMappings.Add("CADADKA", "CADADKA");
            tableMapping.ColumnMappings.Add("QIIMAHA", "QIIMAHA");
            tableMapping.ColumnMappings.Add("KADHIMID", "KADHIMID");
            tableMapping.ColumnMappings.Add("QIIMAHA KULI", "QIIMAHA KULI");
            tableMapping.ColumnMappings.Add("QIIMAHA UGU DAMBEEYO", "QIIMAHA UGU DAMBEEYO");
            tableMapping.ColumnMappings.Add("TAARIIQDA DALABKA", "TAARIIQDA DALABKA");
            tableMapping.ColumnMappings.Add("GADAHA", "GADAHA");
            tableMapping.ColumnMappings.Add("RAQAMKA MACAAMILKA", "RAQAMKA MACAAMILKA");
            tableMapping.ColumnMappings.Add("MAGACA MACAAMILKA", "MAGACA MACAAMILKA");
            tableMapping.ColumnMappings.Add("TELKA", "TELKA");
            tableMapping.ColumnMappings.Add("EMAILKA", "EMAILKA");
            tableMapping.ColumnMappings.Add("MAGACA AGABKA", "MAGACA AGABKA");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::products_Management.Properties.Settings.Default.NorthwindSQLConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.GetOrderDetailsok";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_ORDER", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NorthwindSQLDataSet.GetOrderDetailsokDataTable dataTable, global::System.Nullable<int> ID_ORDER) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((ID_ORDER.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(ID_ORDER.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NorthwindSQLDataSet.GetOrderDetailsokDataTable GetData(global::System.Nullable<int> ID_ORDER) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((ID_ORDER.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(ID_ORDER.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            NorthwindSQLDataSet.GetOrderDetailsokDataTable dataTable = new NorthwindSQLDataSet.GetOrderDetailsokDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Search_CustomerTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Search_CustomerTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Search_Customer";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("SHIRKADA", "SHIRKADA");
            tableMapping.ColumnMappings.Add("MAGACA KUWAAD", "MAGACA KUWAAD");
            tableMapping.ColumnMappings.Add("MAGACA LABAAD", "MAGACA LABAAD");
            tableMapping.ColumnMappings.Add("EMAILKA", "EMAILKA");
            tableMapping.ColumnMappings.Add("TELKA", "TELKA");
            tableMapping.ColumnMappings.Add("Adrreska", "Adrreska");
            tableMapping.ColumnMappings.Add("NOTES", "NOTES");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::products_Management.Properties.Settings.Default.NorthwindSQLConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.Search_Customer";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Criterion", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NorthwindSQLDataSet.Search_CustomerDataTable dataTable, string Criterion) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Criterion == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(Criterion));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NorthwindSQLDataSet.Search_CustomerDataTable GetData(string Criterion) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Criterion == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(Criterion));
            }
            NorthwindSQLDataSet.Search_CustomerDataTable dataTable = new NorthwindSQLDataSet.Search_CustomerDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SearchOrdersTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SearchOrdersTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SearchOrders";
            tableMapping.ColumnMappings.Add("RAQMKA DALABKA", "RAQMKA DALABKA");
            tableMapping.ColumnMappings.Add("MAGACA MACAAMILKA", "MAGACA MACAAMILKA");
            tableMapping.ColumnMappings.Add("TAARIKHDA DALABKA", "TAARIKHDA DALABKA");
            tableMapping.ColumnMappings.Add("TAARIKHDA BIXINTA", "TAARIKHDA BIXINTA");
            tableMapping.ColumnMappings.Add("MAGACA GADAHA", "MAGACA GADAHA");
            tableMapping.ColumnMappings.Add("NOTE", "NOTE");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::products_Management.Properties.Settings.Default.NorthwindSQLConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.SearchOrders";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Criterion", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NorthwindSQLDataSet.SearchOrdersDataTable dataTable, string Criterion) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Criterion == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(Criterion));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NorthwindSQLDataSet.SearchOrdersDataTable GetData(string Criterion) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Criterion == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(Criterion));
            }
            NorthwindSQLDataSet.SearchOrdersDataTable dataTable = new NorthwindSQLDataSet.SearchOrdersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SearchOrders2TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SearchOrders2TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SearchOrders2";
            tableMapping.ColumnMappings.Add("RAQMKA DALABKA", "RAQMKA DALABKA");
            tableMapping.ColumnMappings.Add("MAGACA MACAAMILKA", "MAGACA MACAAMILKA");
            tableMapping.ColumnMappings.Add("TAARIKHDA DALABKA", "TAARIKHDA DALABKA");
            tableMapping.ColumnMappings.Add("TAARIKHDA BIXINTA", "TAARIKHDA BIXINTA");
            tableMapping.ColumnMappings.Add("MAGACA GADAHA", "MAGACA GADAHA");
            tableMapping.ColumnMappings.Add("NOTE", "NOTE");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::products_Management.Properties.Settings.Default.NorthwindSQLConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.SearchOrders2";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NorthwindSQLDataSet.SearchOrders2DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NorthwindSQLDataSet.SearchOrders2DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            NorthwindSQLDataSet.SearchOrders2DataTable dataTable = new NorthwindSQLDataSet.SearchOrders2DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SearchOrders3TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SearchOrders3TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SearchOrders3";
            tableMapping.ColumnMappings.Add("RAQMKA DALABKA", "RAQMKA DALABKA");
            tableMapping.ColumnMappings.Add("MAGACA MACAAMILKA", "MAGACA MACAAMILKA");
            tableMapping.ColumnMappings.Add("TAARIKHDA DALABKA", "TAARIKHDA DALABKA");
            tableMapping.ColumnMappings.Add("TAARIKHDA BIXINTA", "TAARIKHDA BIXINTA");
            tableMapping.ColumnMappings.Add("MAGACA GADAHA", "MAGACA GADAHA");
            tableMapping.ColumnMappings.Add("NOTE", "NOTE");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::products_Management.Properties.Settings.Default.NorthwindSQLConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.SearchOrders3";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Criterion", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NorthwindSQLDataSet.SearchOrders3DataTable dataTable, string Criterion) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Criterion == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(Criterion));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NorthwindSQLDataSet.SearchOrders3DataTable GetData(string Criterion) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Criterion == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(Criterion));
            }
            NorthwindSQLDataSet.SearchOrders3DataTable dataTable = new NorthwindSQLDataSet.SearchOrders3DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SearchProductTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SearchProductTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SearchProduct";
            tableMapping.ColumnMappings.Add("RAQMKA", "RAQMKA");
            tableMapping.ColumnMappings.Add("CALAAMAD", "CALAAMAD");
            tableMapping.ColumnMappings.Add("MAGACA", "MAGACA");
            tableMapping.ColumnMappings.Add("FAAHFAAHIN", "FAAHFAAHIN");
            tableMapping.ColumnMappings.Add("QIIMHA", "QIIMHA");
            tableMapping.ColumnMappings.Add("LAGADAAYO", "LAGADAAYO");
            tableMapping.ColumnMappings.Add("XADKA DALABKA", "XADKA DALABKA");
            tableMapping.ColumnMappings.Add("XADKA BUUXINTA", "XADKA BUUXINTA");
            tableMapping.ColumnMappings.Add("CADADKA XABADA", "CADADKA XABADA");
            tableMapping.ColumnMappings.Add("QIIMA DHIMIS", "QIIMA DHIMIS");
            tableMapping.ColumnMappings.Add("CADADKA UGU YAR DALABKA", "CADADKA UGU YAR DALABKA");
            tableMapping.ColumnMappings.Add("NOOCA", "NOOCA");
            tableMapping.ColumnMappings.Add("GADAHA", "GADAHA");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::products_Management.Properties.Settings.Default.NorthwindSQLConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.SearchProduct";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NorthwindSQLDataSet.SearchProductDataTable dataTable, string ID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((ID == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(ID));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NorthwindSQLDataSet.SearchProductDataTable GetData(string ID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((ID == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(ID));
            }
            NorthwindSQLDataSet.SearchProductDataTable dataTable = new NorthwindSQLDataSet.SearchProductDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SearchUsersTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SearchUsersTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SearchUsers";
            tableMapping.ColumnMappings.Add("MAGACA ADEEGSADAHA", "MAGACA ADEEGSADAHA");
            tableMapping.ColumnMappings.Add("MAGACA OO DHAN", "MAGACA OO DHAN");
            tableMapping.ColumnMappings.Add("ERAYGA SIRTA AH", "ERAYGA SIRTA AH");
            tableMapping.ColumnMappings.Add("NOOCA ADEEGSADAHA", "NOOCA ADEEGSADAHA");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::products_Management.Properties.Settings.Default.NorthwindSQLConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.SearchUsers";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Criterion", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NorthwindSQLDataSet.SearchUsersDataTable dataTable, string Criterion) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Criterion == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(Criterion));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NorthwindSQLDataSet.SearchUsersDataTable GetData(string Criterion) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Criterion == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(Criterion));
            }
            NorthwindSQLDataSet.SearchUsersDataTable dataTable = new NorthwindSQLDataSet.SearchUsersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SearchUsers2TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SearchUsers2TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SearchUsers2";
            tableMapping.ColumnMappings.Add("MAGACA ADEEGSADAHA", "MAGACA ADEEGSADAHA");
            tableMapping.ColumnMappings.Add("MAGACA OO DHAN", "MAGACA OO DHAN");
            tableMapping.ColumnMappings.Add("ERAYGA SIRTA AH", "ERAYGA SIRTA AH");
            tableMapping.ColumnMappings.Add("NOOCA ADEEGSADAHA", "NOOCA ADEEGSADAHA");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::products_Management.Properties.Settings.Default.NorthwindSQLConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.SearchUsers2";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Criterion", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NorthwindSQLDataSet.SearchUsers2DataTable dataTable, string Criterion) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Criterion == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(Criterion));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NorthwindSQLDataSet.SearchUsers2DataTable GetData(string Criterion) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Criterion == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(Criterion));
            }
            NorthwindSQLDataSet.SearchUsers2DataTable dataTable = new NorthwindSQLDataSet.SearchUsers2DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SP_LOGIN2TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SP_LOGIN2TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SP_LOGIN2";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("PWD", "PWD");
            tableMapping.ColumnMappings.Add("UserType", "UserType");
            tableMapping.ColumnMappings.Add("FullName", "FullName");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::products_Management.Properties.Settings.Default.NorthwindSQLConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.SP_LOGIN2";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PWD", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NorthwindSQLDataSet.SP_LOGIN2DataTable dataTable, string ID, string PWD) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((ID == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(ID));
            }
            if ((PWD == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(PWD));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NorthwindSQLDataSet.SP_LOGIN2DataTable GetData(string ID, string PWD) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((ID == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(ID));
            }
            if ((PWD == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(PWD));
            }
            NorthwindSQLDataSet.SP_LOGIN2DataTable dataTable = new NorthwindSQLDataSet.SP_LOGIN2DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class VarifyQtyTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public VarifyQtyTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "VarifyQty";
            tableMapping.ColumnMappings.Add("Product ID", "Product ID");
            tableMapping.ColumnMappings.Add("Product Name", "Product Name");
            tableMapping.ColumnMappings.Add("Product Code", "Product Code");
            tableMapping.ColumnMappings.Add("Qty Purchased", "Qty Purchased");
            tableMapping.ColumnMappings.Add("Qty Sold", "Qty Sold");
            tableMapping.ColumnMappings.Add("Qty On Hold", "Qty On Hold");
            tableMapping.ColumnMappings.Add("Qty On Hand", "Qty On Hand");
            tableMapping.ColumnMappings.Add("Qty Available", "Qty Available");
            tableMapping.ColumnMappings.Add("Qty On Order", "Qty On Order");
            tableMapping.ColumnMappings.Add("Qty On Back Order", "Qty On Back Order");
            tableMapping.ColumnMappings.Add("Reorder Level", "Reorder Level");
            tableMapping.ColumnMappings.Add("Target Level", "Target Level");
            tableMapping.ColumnMappings.Add("Qty Below Target Level", "Qty Below Target Level");
            tableMapping.ColumnMappings.Add("Current Level", "Current Level");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::products_Management.Properties.Settings.Default.NorthwindSQLConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.VarifyQty";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Qty_Entered", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NorthwindSQLDataSet.VarifyQtyDataTable dataTable, global::System.Nullable<int> ID, global::System.Nullable<int> Qty_Entered) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((ID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(ID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Qty_Entered.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(Qty_Entered.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NorthwindSQLDataSet.VarifyQtyDataTable GetData(global::System.Nullable<int> ID, global::System.Nullable<int> Qty_Entered) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((ID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(ID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Qty_Entered.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(Qty_Entered.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            NorthwindSQLDataSet.VarifyQtyDataTable dataTable = new NorthwindSQLDataSet.VarifyQtyDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class VerifyProductIDTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public VerifyProductIDTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "VerifyProductID";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Product Code", "Product Code");
            tableMapping.ColumnMappings.Add("Product Name", "Product Name");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("Standard Cost", "Standard Cost");
            tableMapping.ColumnMappings.Add("List Price", "List Price");
            tableMapping.ColumnMappings.Add("Reorder Level", "Reorder Level");
            tableMapping.ColumnMappings.Add("Target Level", "Target Level");
            tableMapping.ColumnMappings.Add("Quantity Per Unit", "Quantity Per Unit");
            tableMapping.ColumnMappings.Add("Discontinued", "Discontinued");
            tableMapping.ColumnMappings.Add("Minimum Reorder Quantity", "Minimum Reorder Quantity");
            tableMapping.ColumnMappings.Add("Category", "Category");
            tableMapping.ColumnMappings.Add("Supplier IDs", "Supplier IDs");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::products_Management.Properties.Settings.Default.NorthwindSQLConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.VerifyProductID";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod", global::System.Data.SqlDbType.NVarChar, 25, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NorthwindSQLDataSet.VerifyProductIDDataTable dataTable, string Cod) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Cod == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(Cod));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NorthwindSQLDataSet.VerifyProductIDDataTable GetData(string Cod) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Cod == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(Cod));
            }
            NorthwindSQLDataSet.VerifyProductIDDataTable dataTable = new NorthwindSQLDataSet.VerifyProductIDDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class QueriesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.IDbCommand[] _commandCollection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.IDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.IDbCommand[18];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).Connection = new global::System.Data.SqlClient.SqlConnection(global::products_Management.Properties.Settings.Default.NorthwindSQLConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).CommandText = "dbo.ADD_CUSTOMER";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Company", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@First_Name", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Last_Name", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Email_Address", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mobile_Phone", global::System.Data.SqlDbType.NVarChar, 25, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Address", global::System.Data.SqlDbType.NText, 1073741823, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Notes", global::System.Data.SqlDbType.NText, 1073741823, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).Connection = new global::System.Data.SqlClient.SqlConnection(global::products_Management.Properties.Settings.Default.NorthwindSQLConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).CommandText = "dbo.ADD_ORDER";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_ORDER", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUSTOMER_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATE_ORDER", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALESMAN", global::System.Data.SqlDbType.VarChar, 75, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Notes", global::System.Data.SqlDbType.NText, 1073741823, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).Connection = new global::System.Data.SqlClient.SqlConnection(global::products_Management.Properties.Settings.Default.NorthwindSQLConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).CommandText = "dbo.ADD_ORDER_DETAILS";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_ORDER", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_PRODUCT", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QTE", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRICE", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DIISCOUNT", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 53, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMOUNT", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOTAL_AMOUNT", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMOUNT_DUE", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inventory_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[3])).Connection = new global::System.Data.SqlClient.SqlConnection(global::products_Management.Properties.Settings.Default.NorthwindSQLConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[3])).CommandText = "dbo.ADD_ORDER2";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[3])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[3])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[3])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_ORDER", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[3])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATE_ORDER", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[3])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALESMAN", global::System.Data.SqlDbType.VarChar, 75, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[3])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Notes", global::System.Data.SqlDbType.NText, 1073741823, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[4])).Connection = new global::System.Data.SqlClient.SqlConnection(global::products_Management.Properties.Settings.Default.NorthwindSQLConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[4])).CommandText = "dbo.ADD_PRODUCT";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[4])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[4])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[4])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Product_Code", global::System.Data.SqlDbType.NVarChar, 25, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[4])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Product_Name", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[4])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.NText, 1073741823, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[4])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Standard_Cost", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[4])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@List_Price", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[4])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reorder_Level", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 5, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[4])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Target_Level", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[4])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Quantity_Per_Unit", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[4])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Discontinued", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[4])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Minimum_Reorder_Quantity", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 5, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[4])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Category", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[4])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Supplier_IDs", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[5])).Connection = new global::System.Data.SqlClient.SqlConnection(global::products_Management.Properties.Settings.Default.NorthwindSQLConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[5])).CommandText = "dbo.ADD_Purchase_Order_Details";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[5])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[5])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[5])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_ORDER", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[5])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_PRODUCT", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[5])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QTE", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[5])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRICE", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[5])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOTAL_AMOUNT", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[5])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date_Received", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[5])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Posted_To_Inventory", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[5])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inventory_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[6])).Connection = new global::System.Data.SqlClient.SqlConnection(global::products_Management.Properties.Settings.Default.NorthwindSQLConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[6])).CommandText = "dbo.ADD_Purchase_Orders";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[6])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[6])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[6])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_ORDER", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[6])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUSTOMER_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[6])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATE_ORDER", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[6])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALESMAN", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[6])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Notes", global::System.Data.SqlDbType.NText, 1073741823, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[7] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[7])).Connection = new global::System.Data.SqlClient.SqlConnection(global::products_Management.Properties.Settings.Default.NorthwindSQLConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[7])).CommandText = "dbo.ADD_Suppliers";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[7])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[7])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[7])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Company", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[7])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@First_Name", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[7])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Last_Name", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[7])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mobile_Phone", global::System.Data.SqlDbType.NVarChar, 25, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[7])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Email_Address", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[7])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Notes", global::System.Data.SqlDbType.NText, 1073741823, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[8])).Connection = new global::System.Data.SqlClient.SqlConnection(global::products_Management.Properties.Settings.Default.NorthwindSQLConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[8])).CommandText = "dbo.ADD_USER";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[8])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[8])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[8])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[8])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FullName", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[8])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PWD", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[8])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserType", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[9] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[9])).Connection = new global::System.Data.SqlClient.SqlConnection(global::products_Management.Properties.Settings.Default.NorthwindSQLConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[9])).CommandText = "dbo.DELETE_CUSTOMER";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[9])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[9])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[9])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[10])).Connection = new global::System.Data.SqlClient.SqlConnection(global::products_Management.Properties.Settings.Default.NorthwindSQLConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[10])).CommandText = "dbo.DELETE_Suppliers";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[10])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[10])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[10])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[11] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[11])).Connection = new global::System.Data.SqlClient.SqlConnection(global::products_Management.Properties.Settings.Default.NorthwindSQLConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[11])).CommandText = "dbo.DELETE_USER";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[11])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[11])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[11])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[12] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[12])).Connection = new global::System.Data.SqlClient.SqlConnection(global::products_Management.Properties.Settings.Default.NorthwindSQLConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[12])).CommandText = "dbo.DeleteProduct";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[12])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[12])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[12])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[13] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[13])).Connection = new global::System.Data.SqlClient.SqlConnection(global::products_Management.Properties.Settings.Default.NorthwindSQLConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[13])).CommandText = "dbo.EDIT__Suppliers";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[13])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[13])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[13])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[13])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Company", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[13])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@First_Name", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[13])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Last_Name", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[13])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mobile_Phone", global::System.Data.SqlDbType.NVarChar, 25, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[13])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Email_Address", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[13])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Notes", global::System.Data.SqlDbType.NText, 1073741823, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[14] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[14])).Connection = new global::System.Data.SqlClient.SqlConnection(global::products_Management.Properties.Settings.Default.NorthwindSQLConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[14])).CommandText = "dbo.EDIT_CUSTOMER";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[14])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[14])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[14])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[14])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Company", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[14])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@First_Name", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[14])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Last_Name", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[14])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Email_Address", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[14])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mobile_Phone", global::System.Data.SqlDbType.NVarChar, 25, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[14])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Address", global::System.Data.SqlDbType.NText, 1073741823, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[14])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Notes", global::System.Data.SqlDbType.NText, 1073741823, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[15] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[15])).Connection = new global::System.Data.SqlClient.SqlConnection(global::products_Management.Properties.Settings.Default.NorthwindSQLConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[15])).CommandText = "dbo.EDIT_USER";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[15])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[15])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[15])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[15])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FullName", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[15])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PWD", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[15])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserType", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[16] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[16])).Connection = new global::System.Data.SqlClient.SqlConnection(global::products_Management.Properties.Settings.Default.NorthwindSQLConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[16])).CommandText = "dbo.Inventory_Transactions";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[16])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[16])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[16])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[16])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Transaction_Type", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 5, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[16])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Transaction_Created_Date", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[16])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_PRODUCT", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[16])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QTE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[16])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purchase_Order_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[16])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_ORDER", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[16])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Criterion", global::System.Data.SqlDbType.VarChar, 25, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[17] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[17])).Connection = new global::System.Data.SqlClient.SqlConnection(global::products_Management.Properties.Settings.Default.NorthwindSQLConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[17])).CommandText = "dbo.UPDATE_PRDUCT";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[17])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[17])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[17])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[17])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Product_Code", global::System.Data.SqlDbType.NVarChar, 25, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[17])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Product_Name", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[17])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.NText, 1073741823, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[17])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Standard_Cost", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[17])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@List_Price", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[17])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reorder_Level", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 5, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[17])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Target_Level", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[17])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Quantity_Per_Unit", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[17])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Discontinued", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[17])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Minimum_Reorder_Quantity", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 5, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[17])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Category", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[17])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Supplier_IDs", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int ADD_CUSTOMER(string Company, string First_Name, string Last_Name, string Email_Address, string Mobile_Phone, string Address, string Notes) {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[0]));
            if ((Company == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(Company));
            }
            if ((First_Name == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(First_Name));
            }
            if ((Last_Name == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(Last_Name));
            }
            if ((Email_Address == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(Email_Address));
            }
            if ((Mobile_Phone == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(Mobile_Phone));
            }
            if ((Address == null)) {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(Address));
            }
            if ((Notes == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(Notes));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int ADD_ORDER(global::System.Nullable<int> ID_ORDER, global::System.Nullable<int> CUSTOMER_ID, global::System.Nullable<global::System.DateTime> DATE_ORDER, string SALESMAN, string Notes) {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[1]));
            if ((ID_ORDER.HasValue == true)) {
                command.Parameters[1].Value = ((int)(ID_ORDER.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((CUSTOMER_ID.HasValue == true)) {
                command.Parameters[2].Value = ((int)(CUSTOMER_ID.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((DATE_ORDER.HasValue == true)) {
                command.Parameters[3].Value = ((System.DateTime)(DATE_ORDER.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((SALESMAN == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(SALESMAN));
            }
            if ((Notes == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(Notes));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int ADD_ORDER_DETAILS(global::System.Nullable<int> ID_ORDER, global::System.Nullable<int> ID_PRODUCT, global::System.Nullable<decimal> QTE, global::System.Nullable<decimal> PRICE, global::System.Nullable<double> DIISCOUNT, global::System.Nullable<decimal> AMOUNT, global::System.Nullable<decimal> TOTAL_AMOUNT, global::System.Nullable<decimal> AMOUNT_DUE, global::System.Nullable<int> Inventory_ID) {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[2]));
            if ((ID_ORDER.HasValue == true)) {
                command.Parameters[1].Value = ((int)(ID_ORDER.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ID_PRODUCT.HasValue == true)) {
                command.Parameters[2].Value = ((int)(ID_PRODUCT.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((QTE.HasValue == true)) {
                command.Parameters[3].Value = ((decimal)(QTE.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((PRICE.HasValue == true)) {
                command.Parameters[4].Value = ((decimal)(PRICE.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((DIISCOUNT.HasValue == true)) {
                command.Parameters[5].Value = ((double)(DIISCOUNT.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((AMOUNT.HasValue == true)) {
                command.Parameters[6].Value = ((decimal)(AMOUNT.Value));
            }
            else {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((TOTAL_AMOUNT.HasValue == true)) {
                command.Parameters[7].Value = ((decimal)(TOTAL_AMOUNT.Value));
            }
            else {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((AMOUNT_DUE.HasValue == true)) {
                command.Parameters[8].Value = ((decimal)(AMOUNT_DUE.Value));
            }
            else {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Inventory_ID.HasValue == true)) {
                command.Parameters[9].Value = ((int)(Inventory_ID.Value));
            }
            else {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int ADD_ORDER2(global::System.Nullable<int> ID_ORDER, global::System.Nullable<global::System.DateTime> DATE_ORDER, string SALESMAN, string Notes) {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[3]));
            if ((ID_ORDER.HasValue == true)) {
                command.Parameters[1].Value = ((int)(ID_ORDER.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((DATE_ORDER.HasValue == true)) {
                command.Parameters[2].Value = ((System.DateTime)(DATE_ORDER.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((SALESMAN == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(SALESMAN));
            }
            if ((Notes == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(Notes));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int ADD_PRODUCT(string Product_Code, string Product_Name, string Description, global::System.Nullable<decimal> Standard_Cost, global::System.Nullable<decimal> List_Price, global::System.Nullable<short> Reorder_Level, global::System.Nullable<int> Target_Level, string Quantity_Per_Unit, global::System.Nullable<bool> Discontinued, global::System.Nullable<short> Minimum_Reorder_Quantity, string Category, global::System.Nullable<int> Supplier_IDs) {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[4]));
            if ((Product_Code == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(Product_Code));
            }
            if ((Product_Name == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(Product_Name));
            }
            if ((Description == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(Description));
            }
            if ((Standard_Cost.HasValue == true)) {
                command.Parameters[4].Value = ((decimal)(Standard_Cost.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((List_Price.HasValue == true)) {
                command.Parameters[5].Value = ((decimal)(List_Price.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Reorder_Level.HasValue == true)) {
                command.Parameters[6].Value = ((short)(Reorder_Level.Value));
            }
            else {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Target_Level.HasValue == true)) {
                command.Parameters[7].Value = ((int)(Target_Level.Value));
            }
            else {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Quantity_Per_Unit == null)) {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[8].Value = ((string)(Quantity_Per_Unit));
            }
            if ((Discontinued.HasValue == true)) {
                command.Parameters[9].Value = ((bool)(Discontinued.Value));
            }
            else {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Minimum_Reorder_Quantity.HasValue == true)) {
                command.Parameters[10].Value = ((short)(Minimum_Reorder_Quantity.Value));
            }
            else {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Category == null)) {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[11].Value = ((string)(Category));
            }
            if ((Supplier_IDs.HasValue == true)) {
                command.Parameters[12].Value = ((int)(Supplier_IDs.Value));
            }
            else {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int ADD_Purchase_Order_Details(global::System.Nullable<int> ID_ORDER, global::System.Nullable<int> ID_PRODUCT, global::System.Nullable<decimal> QTE, global::System.Nullable<decimal> PRICE, global::System.Nullable<decimal> TOTAL_AMOUNT, global::System.Nullable<global::System.DateTime> Date_Received, global::System.Nullable<bool> Posted_To_Inventory, global::System.Nullable<int> Inventory_ID) {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[5]));
            if ((ID_ORDER.HasValue == true)) {
                command.Parameters[1].Value = ((int)(ID_ORDER.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ID_PRODUCT.HasValue == true)) {
                command.Parameters[2].Value = ((int)(ID_PRODUCT.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((QTE.HasValue == true)) {
                command.Parameters[3].Value = ((decimal)(QTE.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((PRICE.HasValue == true)) {
                command.Parameters[4].Value = ((decimal)(PRICE.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((TOTAL_AMOUNT.HasValue == true)) {
                command.Parameters[5].Value = ((decimal)(TOTAL_AMOUNT.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Date_Received.HasValue == true)) {
                command.Parameters[6].Value = ((System.DateTime)(Date_Received.Value));
            }
            else {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Posted_To_Inventory.HasValue == true)) {
                command.Parameters[7].Value = ((bool)(Posted_To_Inventory.Value));
            }
            else {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Inventory_ID.HasValue == true)) {
                command.Parameters[8].Value = ((int)(Inventory_ID.Value));
            }
            else {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int ADD_Purchase_Orders(global::System.Nullable<int> ID_ORDER, global::System.Nullable<int> CUSTOMER_ID, global::System.Nullable<global::System.DateTime> DATE_ORDER, string SALESMAN, string Notes) {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[6]));
            if ((ID_ORDER.HasValue == true)) {
                command.Parameters[1].Value = ((int)(ID_ORDER.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((CUSTOMER_ID.HasValue == true)) {
                command.Parameters[2].Value = ((int)(CUSTOMER_ID.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((DATE_ORDER.HasValue == true)) {
                command.Parameters[3].Value = ((System.DateTime)(DATE_ORDER.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((SALESMAN == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(SALESMAN));
            }
            if ((Notes == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(Notes));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int ADD_Suppliers(string Company, string First_Name, string Last_Name, string Mobile_Phone, string Email_Address, string Notes) {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[7]));
            if ((Company == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(Company));
            }
            if ((First_Name == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(First_Name));
            }
            if ((Last_Name == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(Last_Name));
            }
            if ((Mobile_Phone == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(Mobile_Phone));
            }
            if ((Email_Address == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(Email_Address));
            }
            if ((Notes == null)) {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(Notes));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int ADD_USER(string ID, string FullName, string PWD, string UserType) {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[8]));
            if ((ID == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(ID));
            }
            if ((FullName == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(FullName));
            }
            if ((PWD == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(PWD));
            }
            if ((UserType == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(UserType));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int DELETE_CUSTOMER(global::System.Nullable<int> ID) {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[9]));
            if ((ID.HasValue == true)) {
                command.Parameters[1].Value = ((int)(ID.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int DELETE_Suppliers(global::System.Nullable<int> ID) {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[10]));
            if ((ID.HasValue == true)) {
                command.Parameters[1].Value = ((int)(ID.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int DELETE_USER(string ID) {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[11]));
            if ((ID == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(ID));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int DeleteProduct(global::System.Nullable<int> ID) {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[12]));
            if ((ID.HasValue == true)) {
                command.Parameters[1].Value = ((int)(ID.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int EDIT__Suppliers(global::System.Nullable<int> ID, string Company, string First_Name, string Last_Name, string Mobile_Phone, string Email_Address, string Notes) {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[13]));
            if ((ID.HasValue == true)) {
                command.Parameters[1].Value = ((int)(ID.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Company == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(Company));
            }
            if ((First_Name == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(First_Name));
            }
            if ((Last_Name == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(Last_Name));
            }
            if ((Mobile_Phone == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(Mobile_Phone));
            }
            if ((Email_Address == null)) {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(Email_Address));
            }
            if ((Notes == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(Notes));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int EDIT_CUSTOMER(global::System.Nullable<int> ID, string Company, string First_Name, string Last_Name, string Email_Address, string Mobile_Phone, string Address, string Notes) {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[14]));
            if ((ID.HasValue == true)) {
                command.Parameters[1].Value = ((int)(ID.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Company == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(Company));
            }
            if ((First_Name == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(First_Name));
            }
            if ((Last_Name == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(Last_Name));
            }
            if ((Email_Address == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(Email_Address));
            }
            if ((Mobile_Phone == null)) {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(Mobile_Phone));
            }
            if ((Address == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(Address));
            }
            if ((Notes == null)) {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[8].Value = ((string)(Notes));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int EDIT_USER(string ID, string FullName, string PWD, string UserType) {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[15]));
            if ((ID == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(ID));
            }
            if ((FullName == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(FullName));
            }
            if ((PWD == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(PWD));
            }
            if ((UserType == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(UserType));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Inventory_Transactions(global::System.Nullable<int> ID, global::System.Nullable<short> Transaction_Type, global::System.Nullable<global::System.DateTime> Transaction_Created_Date, global::System.Nullable<int> ID_PRODUCT, global::System.Nullable<int> QTE, global::System.Nullable<int> Purchase_Order_ID, global::System.Nullable<int> ID_ORDER, string Criterion) {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[16]));
            if ((ID.HasValue == true)) {
                command.Parameters[1].Value = ((int)(ID.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Transaction_Type.HasValue == true)) {
                command.Parameters[2].Value = ((short)(Transaction_Type.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Transaction_Created_Date.HasValue == true)) {
                command.Parameters[3].Value = ((System.DateTime)(Transaction_Created_Date.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((ID_PRODUCT.HasValue == true)) {
                command.Parameters[4].Value = ((int)(ID_PRODUCT.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((QTE.HasValue == true)) {
                command.Parameters[5].Value = ((int)(QTE.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Purchase_Order_ID.HasValue == true)) {
                command.Parameters[6].Value = ((int)(Purchase_Order_ID.Value));
            }
            else {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((ID_ORDER.HasValue == true)) {
                command.Parameters[7].Value = ((int)(ID_ORDER.Value));
            }
            else {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Criterion == null)) {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[8].Value = ((string)(Criterion));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int UPDATE_PRDUCT(global::System.Nullable<int> ID, string Product_Code, string Product_Name, string Description, global::System.Nullable<decimal> Standard_Cost, global::System.Nullable<decimal> List_Price, global::System.Nullable<short> Reorder_Level, global::System.Nullable<int> Target_Level, string Quantity_Per_Unit, global::System.Nullable<bool> Discontinued, global::System.Nullable<short> Minimum_Reorder_Quantity, string Category, global::System.Nullable<int> Supplier_IDs) {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[17]));
            if ((ID.HasValue == true)) {
                command.Parameters[1].Value = ((int)(ID.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Product_Code == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(Product_Code));
            }
            if ((Product_Name == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(Product_Name));
            }
            if ((Description == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(Description));
            }
            if ((Standard_Cost.HasValue == true)) {
                command.Parameters[5].Value = ((decimal)(Standard_Cost.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((List_Price.HasValue == true)) {
                command.Parameters[6].Value = ((decimal)(List_Price.Value));
            }
            else {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Reorder_Level.HasValue == true)) {
                command.Parameters[7].Value = ((short)(Reorder_Level.Value));
            }
            else {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Target_Level.HasValue == true)) {
                command.Parameters[8].Value = ((int)(Target_Level.Value));
            }
            else {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Quantity_Per_Unit == null)) {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[9].Value = ((string)(Quantity_Per_Unit));
            }
            if ((Discontinued.HasValue == true)) {
                command.Parameters[10].Value = ((bool)(Discontinued.Value));
            }
            else {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Minimum_Reorder_Quantity.HasValue == true)) {
                command.Parameters[11].Value = ((short)(Minimum_Reorder_Quantity.Value));
            }
            else {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Category == null)) {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[12].Value = ((string)(Category));
            }
            if ((Supplier_IDs.HasValue == true)) {
                command.Parameters[13].Value = ((int)(Supplier_IDs.Value));
            }
            else {
                command.Parameters[13].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(NorthwindSQLDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(NorthwindSQLDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(NorthwindSQLDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(NorthwindSQLDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591